
in dr_basic_block(tag=0x0040137e) 0 0 esp is 0x0012ff8c instr_count=1
0x0040137e call   $0x00401808 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040137e tttt0.exe:mainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:389+0x0
	Into 0x00401808 tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:97+0x0

in dr_basic_block(tag=0x00401808) 0 0 esp is 0x0012ff88 instr_count=13
0x00401808 mov    %edi -> %edi 	[1, 1]
0x0040180a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040180b mov    %esp -> %ebp 	[1, 1]
0x0040180d sub    $0x00000010 %esp -> %esp 	[2, 1]
0x00401810 mov    0x00403000 -> %eax 	[1, 1]
0x00401815 and    $0x00000000 0xfffffff8(%ebp) -> 0xfffffff8(%ebp) 	[2, 1]
0x00401819 and    $0x00000000 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x0040181d push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040181e push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040181f mov    $0xbb40e64e -> %edi 	[1, 1]
0x00401824 mov    $0xffff0000 -> %ebx 	[1, 1]
0x00401829 cmp    %eax %edi 	[2, 0]
0x0040182b jz     $0x0040183a 	[1, 0]

in dr_basic_block(tag=0x0040183a) 0 0 esp is 0x0012ff6c instr_count=4
0x0040183a push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040183b lea    0xfffffff8(%ebp) -> %eax 	[1, 1]
0x0040183e push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040183f call   0x00402038 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040183f tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:127+0x4
	Into 0x7762d806 KERNEL32.dll:GetSystemTimeAsFileTime ??:0

in dr_basic_block(tag=0x00401845) 0 0 esp is 0x0012ff68 instr_count=3
0x00401845 mov    0xfffffffc(%ebp) -> %esi 	[1, 1]
0x00401848 xor    0xfffffff8(%ebp) %esi -> %esi 	[2, 1]
0x0040184b call   0x00402008 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040184b tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:135+0x0
	Into 0x7762d7a5 KERNEL32.dll:GetCurrentProcessId ??:0

in dr_basic_block(tag=0x00401851) 0 0 esp is 0x0012ff68 instr_count=2
0x00401851 xor    %eax %esi -> %esi 	[2, 1]
0x00401853 call   0x0040200c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401853 tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:136+0x0
	Into 0x7762c400 KERNEL32.dll:GetCurrentThreadId ??:0

in dr_basic_block(tag=0x00401859) 0 0 esp is 0x0012ff68 instr_count=2
0x00401859 xor    %eax %esi -> %esi 	[2, 1]
0x0040185b call   0x00402010 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040185b tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:137+0x0
	Into 0x7762c280 KERNEL32.dll:GetTickCount ??:0

in dr_basic_block(tag=0x00401861) 0 0 esp is 0x0012ff68 instr_count=4
0x00401861 xor    %eax %esi -> %esi 	[2, 1]
0x00401863 lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x00401866 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401867 call   0x00402014 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401867 tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:139+0x4
	Into 0x7762c412 KERNEL32.dll:QueryPerformanceCounter ??:0

in dr_basic_block(tag=0x0040186d) 0 0 esp is 0x0012ff68 instr_count=5
0x0040186d mov    0xfffffff4(%ebp) -> %eax 	[1, 1]
0x00401870 xor    0xfffffff0(%ebp) %eax -> %eax 	[2, 1]
0x00401873 xor    %eax %esi -> %esi 	[2, 1]
0x00401875 cmp    %esi %edi 	[2, 0]
0x00401877 jnz    $0x00401880 	[1, 0]

in dr_basic_block(tag=0x00401880) 0 0 esp is 0x0012ff68 instr_count=2
0x00401880 test   %ebx %esi 	[2, 0]
0x00401882 jnz    $0x0040188b 	[1, 0]

in dr_basic_block(tag=0x0040188b) 0 0 esp is 0x0012ff68 instr_count=8
0x0040188b mov    %esi -> 0x00403000 	[1, 1]
0x00401891 not    %esi -> %esi 	[1, 1]
0x00401893 mov    %esi -> 0x00403004 	[1, 1]
0x00401899 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x0040189a pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x0040189b pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x0040189c leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x0040189d tttt0.exe:__security_init_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\gs_support.c:175+0x1
	Into 0x00401383 tttt0.exe:mainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:398+0x0

in dr_basic_block(tag=0x00401383) 0 0 esp is 0x0012ff8c instr_count=1
JMP @  0x00401383 tttt0.exe:mainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:398+0x0
	Into  0x00401127 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:406+0x0

in dr_basic_block(tag=0x00401127) 0 0 esp is 0x0012ff8c instr_count=3
0x00401127 push   $0x00000010 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401129 push   $0x004021b8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040112e call   $0x0040175c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040112e tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:406+0x7
	Into 0x0040175c tttt0.exe:__SEH_prolog4 ??:0

in dr_basic_block(tag=0x0040175c) 0 0 esp is 0x0012ff80 instr_count=21
0x0040175c push   $0x004017b5 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401761 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401768 mov    0x10(%esp) -> %eax 	[1, 1]
0x0040176c mov    %ebp -> 0x10(%esp) 	[1, 1]
0x00401770 lea    0x10(%esp) -> %ebp 	[1, 1]
0x00401774 sub    %eax %esp -> %esp 	[2, 1]
0x00401776 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401777 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401778 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401779 mov    0x00403000 -> %eax 	[1, 1]
0x0040177e xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x00401781 xor    %ebp %eax -> %eax 	[2, 1]
0x00401783 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401784 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x00401787 push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040178a mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x0040178d mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x00401794 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x00401797 lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x0040179a mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x004017a0 tttt0.exe:__SEH_prolog4 ??:0
	Into 0x00401133 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:429+0x0

in dr_basic_block(tag=0x00401133) 0 0 esp is 0x0012ff58 instr_count=10
0x00401133 xor    %ebx %ebx -> %ebx 	[2, 1]
0x00401135 mov    %ebx -> 0xfffffffc(%ebp) 	[1, 1]
0x00401138 mov    %fs:0x18 -> %eax 	[1, 1]
0x0040113e mov    0x04(%eax) -> %esi 	[1, 1]
0x00401141 mov    %ebx -> 0xffffffe4(%ebp) 	[1, 1]
0x00401144 mov    $0x00403378 -> %edi 	[1, 1]
0x00401149 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040114a push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040114b push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040114c call   0x0040202c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040114c tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:456+0x3
	Into 0x7762c3eb KERNEL32.dll:InterlockedCompareExchange ??:0

in dr_basic_block(tag=0x00401152) 0 0 esp is 0x0012ff58 instr_count=2
0x00401152 cmp    %eax %ebx 	[2, 0]
0x00401154 jz     $0x0040116f 	[1, 0]

in dr_basic_block(tag=0x0040116f) 0 0 esp is 0x0012ff58 instr_count=5
0x0040116f xor    %esi %esi -> %esi 	[2, 1]
0x00401171 inc    %esi -> %esi 	[1, 1]
0x00401172 mov    0x00403374 -> %eax 	[1, 1]
0x00401177 cmp    %eax %esi 	[2, 0]
0x00401179 jnz    $0x00401185 	[1, 0]

in dr_basic_block(tag=0x00401185) 0 0 esp is 0x0012ff58 instr_count=3
0x00401185 mov    0x00403374 -> %eax 	[1, 1]
0x0040118a test   %eax %eax 	[2, 0]
0x0040118c jnz    $0x004011ba 	[1, 0]

in dr_basic_block(tag=0x0040118e) 0 0 esp is 0x0012ff58 instr_count=4
0x0040118e mov    %esi -> 0x00403374 	[1, 1]
0x00401194 push   $0x004020d4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401199 push   $0x004020c8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040119e call   $0x00401754 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040119e tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:479+0xa
	Into 0x00401754 tttt0.exe:initterm_e ??:0

in dr_basic_block(tag=0x00401754) 0 0 esp is 0x0012ff4c instr_count=1
0x00401754 jmp    0x0040205c 	[1, 0]

in dr_basic_block(tag=0x73302211) 0 0 esp is 0x0012ff4c instr_count=7
0x73302211 mov    %edi -> %edi 	[1, 1]
0x73302213 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302214 mov    %esp -> %ebp 	[1, 1]
0x73302216 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302217 mov    0x08(%ebp) -> %esi 	[1, 1]
0x7330221a xor    %eax %eax -> %eax 	[2, 1]
JMP @  0x7330221c MSVCR90.dll:initterm_e ??:0
	Into  0x7330222d MSVCR90.dll:initterm_e ??:0

in dr_basic_block(tag=0x7330222d) 0 0 esp is 0x0012ff44 instr_count=2
0x7330222d cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302230 jb     $0x7330221e 	[1, 0]

in dr_basic_block(tag=0x7330221e) 0 0 esp is 0x0012ff44 instr_count=2
0x7330221e test   %eax %eax 	[2, 0]
0x73302220 jnz    $0x73302232 	[1, 0]

in dr_basic_block(tag=0x73302222) 0 0 esp is 0x0012ff44 instr_count=3
0x73302222 mov    (%esi) -> %ecx 	[1, 1]
0x73302224 test   %ecx %ecx 	[2, 0]
0x73302226 jz     $0x7330222a 	[1, 0]

in dr_basic_block(tag=0x7330222a) 0 0 esp is 0x0012ff44 instr_count=3
0x7330222a add    $0x00000004 %esi -> %esi 	[2, 1]
0x7330222d cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302230 jb     $0x7330221e 	[1, 0]
0x7330221e test   %eax %eax 	[2, 0]
0x73302220 jnz    $0x73302232 	[1, 0]
0x73302222 mov    (%esi) -> %ecx 	[1, 1]
0x73302224 test   %ecx %ecx 	[2, 0]
0x73302226 jz     $0x7330222a 	[1, 0]

in dr_basic_block(tag=0x73302228) 0 0 esp is 0x0012ff44 instr_count=1
0x73302228 call   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302228 MSVCR90.dll:initterm_e ??:0
	Into 0x0040129d tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:217+0x0

in dr_basic_block(tag=0x0040129d) 0 0 esp is 0x0012ff40 instr_count=3
0x0040129d mov    $0x00005a4d -> %eax 	[1, 1]
0x004012a2 data16 cmp    0x00400000 %ax 	[2, 0]
0x004012a9 jz     $0x004012af 	[1, 0]

in dr_basic_block(tag=0x004012af) 0 0 esp is 0x0012ff40 instr_count=4
0x004012af mov    0x0040003c -> %eax 	[1, 1]
0x004012b4 lea    0x00400000(%eax) -> %eax 	[1, 1]
0x004012ba cmp    (%eax) $0x00004550 	[2, 0]
0x004012c0 jnz    $0x004012ab 	[1, 0]

in dr_basic_block(tag=0x004012c2) 0 0 esp is 0x0012ff40 instr_count=3
0x004012c2 movzx  0x18(%eax) -> %ecx 	[1, 1]
0x004012c6 cmp    %ecx $0x0000010b 	[2, 0]
0x004012cc jz     $0x004012e9 	[1, 0]

in dr_basic_block(tag=0x004012e9) 0 0 esp is 0x0012ff40 instr_count=2
0x004012e9 cmp    0x74(%eax) $0x0000000e 	[2, 0]
0x004012ed jbe    $0x004012ab 	[1, 0]

in dr_basic_block(tag=0x004012ef) 0 0 esp is 0x0012ff40 instr_count=7
0x004012ef xor    %ecx %ecx -> %ecx 	[2, 1]
0x004012f1 cmp    0x000000e8(%eax) %ecx 	[2, 0]
0x004012f7 setnz  -> %cl 	[0, 1]
0x004012fa mov    %ecx -> %eax 	[1, 1]
0x004012fc push   $0x00000001 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004012fe mov    %eax -> 0x00403024 	[1, 1]
0x00401303 call   0x00402058 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401303 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:229+0x7
	Into 0x73301be0 MSVCR90.dll:_set_app_type ??:0

in dr_basic_block(tag=0x73301be0) 0 0 esp is 0x0012ff38 instr_count=7
0x73301be0 mov    %edi -> %edi 	[1, 1]
0x73301be2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73301be3 mov    %esp -> %ebp 	[1, 1]
0x73301be5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x73301be8 mov    %eax -> 0x7337ba3c 	[1, 1]
0x73301bed pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73301bee MSVCR90.dll:_set_app_type ??:0
	Into 0x00401309 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:237+0x0

in dr_basic_block(tag=0x00401309) 0 0 esp is 0x0012ff3c instr_count=2
0x00401309 push   $0xffffffff %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040130b call   0x00402054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040130b tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:237+0x2
	Into 0x73303582 MSVCR90.dll:encode_pointer ??:0

in dr_basic_block(tag=0x73303582) 0 0 esp is 0x0012ff34 instr_count=7
0x73303582 mov    %edi -> %edi 	[1, 1]
0x73303584 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303585 mov    %esp -> %ebp 	[1, 1]
0x73303587 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303588 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330358e mov    0x732e1030 -> %esi 	[1, 1]
0x73303594 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303594 MSVCR90.dll:encode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0

in dr_basic_block(tag=0x73303596) 0 0 esp is 0x0012ff2c instr_count=2
0x73303596 test   %eax %eax 	[2, 0]
0x73303598 jz     $0x733035bb 	[1, 0]

in dr_basic_block(tag=0x7330359a) 0 0 esp is 0x0012ff2c instr_count=3
0x7330359a mov    0x733771e0 -> %eax 	[1, 1]
0x7330359f cmp    %eax $0xffffffff 	[2, 0]
0x733035a2 jz     $0x733035bb 	[1, 0]

in dr_basic_block(tag=0x733035a4) 0 0 esp is 0x0012ff2c instr_count=3
0x733035a4 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035a5 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035ab call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035ab MSVCR90.dll:encode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0

in dr_basic_block(tag=0x733035ad) 0 0 esp is 0x0012ff28 instr_count=1
0x733035ad call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035ad MSVCR90.dll:encode_pointer ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0

in dr_basic_block(tag=0x733035af) 0 0 esp is 0x0012ff2c instr_count=2
0x733035af test   %eax %eax 	[2, 0]
0x733035b1 jz     $0x733035bb 	[1, 0]

in dr_basic_block(tag=0x733035b3) 0 0 esp is 0x0012ff2c instr_count=2
0x733035b3 mov    0x000001f8(%eax) -> %eax 	[1, 1]
JMP @  0x733035b9 MSVCR90.dll:encode_pointer ??:0
	Into  0x733035e2 MSVCR90.dll:encode_pointer ??:0

in dr_basic_block(tag=0x733035e2) 0 0 esp is 0x0012ff2c instr_count=2
0x733035e2 test   %eax %eax 	[2, 0]
0x733035e4 jz     $0x733035ee 	[1, 0]

in dr_basic_block(tag=0x733035e6) 0 0 esp is 0x0012ff2c instr_count=2
0x733035e6 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035e9 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035e9 MSVCR90.dll:encode_pointer ??:0
	Into 0x7787a295 ntdll.dll:RtlEncodePointer ??:0

in dr_basic_block(tag=0x733035eb) 0 0 esp is 0x0012ff2c instr_count=5
0x733035eb mov    %eax -> 0x08(%ebp) 	[1, 1]
0x733035ee mov    0x08(%ebp) -> %eax 	[1, 1]
0x733035f1 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733035f2 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733035f3 MSVCR90.dll:encode_pointer ??:0
	Into 0x00401311 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:237+0x8

in dr_basic_block(tag=0x00401311) 0 0 esp is 0x0012ff38 instr_count=5
0x00401311 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x00401312 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x00401313 mov    %eax -> 0x0040337c 	[1, 1]
0x00401318 mov    %eax -> 0x00403380 	[1, 1]
0x0040131d call   0x00402050 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040131d tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:242+0x0
	Into 0x73302ace MSVCR90.dll:_p__fmode ??:0

in dr_basic_block(tag=0x73302ace) 0 0 esp is 0x0012ff3c instr_count=2
0x73302ace mov    $0x7337c184 -> %eax 	[1, 1]
[RETURN @ ] 0x73302ad3 MSVCR90.dll:_p__fmode ??:0
	Into 0x00401323 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:242+0x6

in dr_basic_block(tag=0x00401323) 0 0 esp is 0x0012ff40 instr_count=3
0x00401323 mov    0x00403368 -> %ecx 	[1, 1]
0x00401329 mov    %ecx -> (%eax) 	[1, 1]
0x0040132b call   0x0040204c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040132b tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:243+0x0
	Into 0x73302a99 MSVCR90.dll:_p__commode ??:0

in dr_basic_block(tag=0x73302a99) 0 0 esp is 0x0012ff3c instr_count=2
0x73302a99 mov    $0x7337bf8c -> %eax 	[1, 1]
[RETURN @ ] 0x73302a9e MSVCR90.dll:_p__commode ??:0
	Into 0x00401331 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:243+0x6

in dr_basic_block(tag=0x00401331) 0 0 esp is 0x0012ff40 instr_count=6
0x00401331 mov    0x00403364 -> %ecx 	[1, 1]
0x00401337 mov    %ecx -> (%eax) 	[1, 1]
0x00401339 mov    0x00402048 -> %eax 	[1, 1]
0x0040133e mov    (%eax) -> %eax 	[1, 1]
0x00401340 mov    %eax -> 0x00403370 	[1, 1]
0x00401345 call   $0x004015a0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401345 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:257+0x0
	Into 0x004015a0 tttt0.exe:_RTC_Initialize ??:0

in dr_basic_block(tag=0x004015a0) 0 0 esp is 0x0012ff3c instr_count=8
0x004015a0 mov    %edi -> %edi 	[1, 1]
0x004015a2 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004015a3 mov    $0x004021a8 -> %eax 	[1, 1]
0x004015a8 mov    $0x004021a8 -> %esi 	[1, 1]
0x004015ad push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004015ae mov    %eax -> %edi 	[1, 1]
0x004015b0 cmp    %eax %esi 	[2, 0]
0x004015b2 jnb    $0x004015c3 	[1, 0]

in dr_basic_block(tag=0x004015c3) 0 0 esp is 0x0012ff34 instr_count=3
0x004015c3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x004015c4 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x004015c5 tttt0.exe:_RTC_Initialize ??:0
	Into 0x0040134a tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:268+0x0

in dr_basic_block(tag=0x0040134a) 0 0 esp is 0x0012ff40 instr_count=1
0x0040134a call   $0x00401805 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040134a tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:268+0x0
	Into 0x00401805 tttt0.exe:_setargv f:\dd\vctools\crt_bld\self_x86\crt\src\dllargv.c:56+0x0

in dr_basic_block(tag=0x00401805) 0 0 esp is 0x0012ff3c instr_count=2
0x00401805 xor    %eax %eax -> %eax 	[2, 1]
[RETURN @ ] 0x00401807 tttt0.exe:_setargv f:\dd\vctools\crt_bld\self_x86\crt\src\dllargv.c:58+0x0
	Into 0x0040134f tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:275+0x0

in dr_basic_block(tag=0x0040134f) 0 0 esp is 0x0012ff40 instr_count=2
0x0040134f cmp    0x00403014 $0x00000000 	[2, 0]
0x00401356 jnz    $0x00401364 	[1, 0]

in dr_basic_block(tag=0x00401364) 0 0 esp is 0x0012ff40 instr_count=1
0x00401364 call   $0x004017da %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401364 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:279+0x0
	Into 0x004017da tttt0.exe:_setdefaultprecision f:\dd\vctools\crt_bld\self_x86\crt\src\intel\fp8.c:30+0x0

in dr_basic_block(tag=0x004017da) 0 0 esp is 0x0012ff3c instr_count=7
0x004017da mov    %edi -> %edi 	[1, 1]
0x004017dc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017dd push   $0x00030000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017e2 push   $0x00010000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017e7 xor    %esi %esi -> %esi 	[2, 1]
0x004017e9 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017ea call   $0x004018c8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004017ea tttt0.exe:_setdefaultprecision f:\dd\vctools\crt_bld\self_x86\crt\src\intel\fp8.c:31+0xd
	Into 0x004018c8 tttt0.exe:controlfp_s ??:0

in dr_basic_block(tag=0x004018c8) 0 0 esp is 0x0012ff28 instr_count=1
0x004018c8 jmp    0x00402080 	[1, 0]

in dr_basic_block(tag=0x7335a95b) 0 0 esp is 0x0012ff28 instr_count=10
0x7335a95b mov    %edi -> %edi 	[1, 1]
0x7335a95d push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335a95e mov    %esp -> %ebp 	[1, 1]
0x7335a960 mov    0x10(%ebp) -> %eax 	[1, 1]
0x7335a963 mov    0x0c(%ebp) -> %ecx 	[1, 1]
0x7335a966 and    $0xfff7ffff %eax -> %eax 	[2, 1]
0x7335a96b and    %eax %ecx -> %ecx 	[2, 1]
0x7335a96d push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335a96e test   %ecx $0xfcf0fce0 	[2, 0]
0x7335a974 jz     $0x7335a9a7 	[1, 0]

in dr_basic_block(tag=0x7335a9a7) 0 0 esp is 0x0012ff20 instr_count=5
0x7335a9a7 mov    0x08(%ebp) -> %esi 	[1, 1]
0x7335a9aa push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335a9ab push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335a9ae test   %esi %esi 	[2, 0]
0x7335a9b0 jz     $0x7335a9bb 	[1, 0]

in dr_basic_block(tag=0x7335a9bb) 0 0 esp is 0x0012ff18 instr_count=1
0x7335a9bb call   $0x7335bfbe %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7335a9bb MSVCR90.dll:controlfp_s ??:0
	Into 0x7335bfbe MSVCR90.dll:control87 ??:0

in dr_basic_block(tag=0x7335bfbe) 0 0 esp is 0x0012ff14 instr_count=13
0x7335bfbe mov    %edi -> %edi 	[1, 1]
0x7335bfc0 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335bfc1 mov    %esp -> %ebp 	[1, 1]
0x7335bfc3 sub    $0x00000014 %esp -> %esp 	[2, 1]
0x7335bfc6 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335bfc7 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335bfc8 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335bfc9 fwait  	[0, 0]
0x7335bfca fnstcw -> 0xfffffff8(%ebp) 	[0, 1]
0x7335bfcd mov    0xfffffff8(%ebp) -> %ebx 	[1, 1]
0x7335bfd0 xor    %edx %edx -> %edx 	[2, 1]
0x7335bfd2 test   %bl $0x01 	[2, 0]
0x7335bfd5 jz     $0x7335bfda 	[1, 0]

in dr_basic_block(tag=0x7335bfd7) 0 0 esp is 0x0012fef0 instr_count=4
0x7335bfd7 push   $0x00000010 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335bfd9 pop    %esp (%esp) -> %edx %esp 	[2, 2]
0x7335bfda test   %bl $0x04 	[2, 0]
0x7335bfdd jz     $0x7335bfe2 	[1, 0]

in dr_basic_block(tag=0x7335bfdf) 0 0 esp is 0x0012fef0 instr_count=3
0x7335bfdf or     $0x00000008 %edx -> %edx 	[2, 1]
0x7335bfe2 test   %bl $0x08 	[2, 0]
0x7335bfe5 jz     $0x7335bfea 	[1, 0]

in dr_basic_block(tag=0x7335bfe7) 0 0 esp is 0x0012fef0 instr_count=3
0x7335bfe7 or     $0x00000004 %edx -> %edx 	[2, 1]
0x7335bfea test   %bl $0x10 	[2, 0]
0x7335bfed jz     $0x7335bff2 	[1, 0]

in dr_basic_block(tag=0x7335bfef) 0 0 esp is 0x0012fef0 instr_count=3
0x7335bfef or     $0x00000002 %edx -> %edx 	[2, 1]
0x7335bff2 test   %bl $0x20 	[2, 0]
0x7335bff5 jz     $0x7335bffa 	[1, 0]

in dr_basic_block(tag=0x7335bff7) 0 0 esp is 0x0012fef0 instr_count=3
0x7335bff7 or     $0x00000001 %edx -> %edx 	[2, 1]
0x7335bffa test   %bl $0x02 	[2, 0]
0x7335bffd jz     $0x7335c005 	[1, 0]

in dr_basic_block(tag=0x7335bfff) 0 0 esp is 0x0012fef0 instr_count=7
0x7335bfff or     $0x00080000 %edx -> %edx 	[2, 1]
0x7335c005 movzx  %bx -> %ecx 	[1, 1]
0x7335c008 mov    %ecx -> %eax 	[1, 1]
0x7335c00a mov    $0x00000c00 -> %esi 	[1, 1]
0x7335c00f and    %esi %eax -> %eax 	[2, 1]
0x7335c011 mov    $0x00000300 -> %edi 	[1, 1]
0x7335c016 jz     $0x7335c03c 	[1, 0]

in dr_basic_block(tag=0x7335c03c) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c03c and    %edi %ecx -> %ecx 	[2, 1]
0x7335c03e jz     $0x7335c050 	[1, 0]

in dr_basic_block(tag=0x7335c040) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c040 cmp    %ecx $0x00000200 	[2, 0]
0x7335c046 jnz    $0x7335c056 	[1, 0]

in dr_basic_block(tag=0x7335c048) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c048 or     $0x00010000 %edx -> %edx 	[2, 1]
JMP @  0x7335c04e MSVCR90.dll:control87 ??:0
	Into  0x7335c056 MSVCR90.dll:control87 ??:0

in dr_basic_block(tag=0x7335c056) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c056 test   %ebx $0x00001000 	[2, 0]
0x7335c05c jz     $0x7335c064 	[1, 0]

in dr_basic_block(tag=0x7335c064) 0 0 esp is 0x0012fef0 instr_count=10
0x7335c064 mov    0x0c(%ebp) -> %edi 	[1, 1]
0x7335c067 mov    0x08(%ebp) -> %ecx 	[1, 1]
0x7335c06a mov    %edi -> %eax 	[1, 1]
0x7335c06c not    %eax -> %eax 	[1, 1]
0x7335c06e and    %edx %eax -> %eax 	[2, 1]
0x7335c070 and    %edi %ecx -> %ecx 	[2, 1]
0x7335c072 or     %ecx %eax -> %eax 	[2, 1]
0x7335c074 mov    %eax -> 0x0c(%ebp) 	[1, 1]
0x7335c077 cmp    %eax %edx 	[2, 0]
0x7335c079 jz     $0x7335c12d 	[1, 0]

in dr_basic_block(tag=0x7335c12d) 0 0 esp is 0x0012fef0 instr_count=3
0x7335c12d xor    %esi %esi -> %esi 	[2, 1]
0x7335c12f cmp    0x7337d7b4 %esi 	[2, 0]
0x7335c135 jz     $0x7335c2c8 	[1, 0]

in dr_basic_block(tag=0x7335c13b) 0 0 esp is 0x0012fef0 instr_count=6
0x7335c13b and    $0x0308031f %edi -> %edi 	[2, 1]
0x7335c141 mov    %edi -> 0xffffffec(%ebp) 	[1, 1]
0x7335c144 stmxcsr -> 0xfffffff0(%ebp) 	[0, 1]
0x7335c148 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7335c14b test   %al %al 	[2, 0]
0x7335c14d jns    $0x7335c152 	[1, 0]

in dr_basic_block(tag=0x7335c14f) 0 0 esp is 0x0012fef0 instr_count=4
0x7335c14f push   $0x00000010 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335c151 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7335c152 test   %eax $0x00000200 	[2, 0]
0x7335c157 jz     $0x7335c15c 	[1, 0]

in dr_basic_block(tag=0x7335c159) 0 0 esp is 0x0012fef0 instr_count=3
0x7335c159 or     $0x00000008 %esi -> %esi 	[2, 1]
0x7335c15c test   %eax $0x00000400 	[2, 0]
0x7335c161 jz     $0x7335c166 	[1, 0]

in dr_basic_block(tag=0x7335c163) 0 0 esp is 0x0012fef0 instr_count=3
0x7335c163 or     $0x00000004 %esi -> %esi 	[2, 1]
0x7335c166 test   %eax $0x00000800 	[2, 0]
0x7335c16b jz     $0x7335c170 	[1, 0]

in dr_basic_block(tag=0x7335c16d) 0 0 esp is 0x0012fef0 instr_count=3
0x7335c16d or     $0x00000002 %esi -> %esi 	[2, 1]
0x7335c170 test   %eax $0x00001000 	[2, 0]
0x7335c175 jz     $0x7335c17a 	[1, 0]

in dr_basic_block(tag=0x7335c177) 0 0 esp is 0x0012fef0 instr_count=3
0x7335c177 or     $0x00000001 %esi -> %esi 	[2, 1]
0x7335c17a test   %eax $0x00000100 	[2, 0]
0x7335c17f jz     $0x7335c187 	[1, 0]

in dr_basic_block(tag=0x7335c181) 0 0 esp is 0x0012fef0 instr_count=5
0x7335c181 or     $0x00080000 %esi -> %esi 	[2, 1]
0x7335c187 mov    %eax -> %ecx 	[1, 1]
0x7335c189 mov    $0x00006000 -> %ebx 	[1, 1]
0x7335c18e and    %ebx %ecx -> %ecx 	[2, 1]
0x7335c190 jz     $0x7335c1bc 	[1, 0]

in dr_basic_block(tag=0x7335c1bc) 0 0 esp is 0x0012fef0 instr_count=4
0x7335c1bc mov    $0x00008040 -> %edi 	[1, 1]
0x7335c1c1 and    %edi %eax -> %eax 	[2, 1]
0x7335c1c3 sub    $0x00000040 %eax -> %eax 	[2, 1]
0x7335c1c6 jz     $0x7335c1e4 	[1, 0]

in dr_basic_block(tag=0x7335c1c8) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c1c8 sub    $0x00007fc0 %eax -> %eax 	[2, 1]
0x7335c1cd jz     $0x7335c1dc 	[1, 0]

in dr_basic_block(tag=0x7335c1cf) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c1cf sub    $0x00000040 %eax -> %eax 	[2, 1]
0x7335c1d2 jnz    $0x7335c1ea 	[1, 0]

in dr_basic_block(tag=0x7335c1ea) 0 0 esp is 0x0012fef0 instr_count=8
0x7335c1ea mov    0xffffffec(%ebp) -> %eax 	[1, 1]
0x7335c1ed mov    %eax -> %edx 	[1, 1]
0x7335c1ef and    0x08(%ebp) %eax -> %eax 	[2, 1]
0x7335c1f2 not    %edx -> %edx 	[1, 1]
0x7335c1f4 and    %esi %edx -> %edx 	[2, 1]
0x7335c1f6 or     %eax %edx -> %edx 	[2, 1]
0x7335c1f8 cmp    %edx %esi 	[2, 0]
0x7335c1fa jnz    $0x7335c203 	[1, 0]

in dr_basic_block(tag=0x7335c1fc) 0 0 esp is 0x0012fef0 instr_count=2
0x7335c1fc mov    %esi -> %eax 	[1, 1]
JMP @  0x7335c1fe MSVCR90.dll:control87 ??:0
	Into  0x7335c2b3 MSVCR90.dll:control87 ??:0

in dr_basic_block(tag=0x7335c2b3) 0 0 esp is 0x0012fef0 instr_count=5
0x7335c2b3 mov    %eax -> %ecx 	[1, 1]
0x7335c2b5 xor    0x0c(%ebp) %ecx -> %ecx 	[2, 1]
0x7335c2b8 or     0x0c(%ebp) %eax -> %eax 	[2, 1]
0x7335c2bb test   %ecx $0x0008031f 	[2, 0]
0x7335c2c1 jz     $0x7335c2c8 	[1, 0]

in dr_basic_block(tag=0x7335c2c8) 0 0 esp is 0x0012fef0 instr_count=5
0x7335c2c8 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7335c2c9 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7335c2ca pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7335c2cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x7335c2cc MSVCR90.dll:control87 ??:0
	Into 0x7335a9c0 MSVCR90.dll:controlfp_s ??:0

in dr_basic_block(tag=0x7335a9c0) 0 0 esp is 0x0012ff18 instr_count=6
0x7335a9c0 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7335a9c1 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7335a9c2 xor    %eax %eax -> %eax 	[2, 1]
0x7335a9c4 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7335a9c5 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7335a9c6 MSVCR90.dll:controlfp_s ??:0
	Into 0x004017ef tttt0.exe:_setdefaultprecision f:\dd\vctools\crt_bld\self_x86\crt\src\intel\fp8.c:31+0x12

in dr_basic_block(tag=0x004017ef) 0 0 esp is 0x0012ff2c instr_count=3
0x004017ef add    $0x0000000c %esp -> %esp 	[2, 1]
0x004017f2 test   %eax %eax 	[2, 0]
0x004017f4 jz     $0x00401803 	[1, 0]

in dr_basic_block(tag=0x00401803) 0 0 esp is 0x0012ff38 instr_count=2
0x00401803 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x00401804 tttt0.exe:_setdefaultprecision f:\dd\vctools\crt_bld\self_x86\crt\src\intel\fp8.c:32+0x0
	Into 0x00401369 tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:283+0x0

in dr_basic_block(tag=0x00401369) 0 0 esp is 0x0012ff40 instr_count=2
0x00401369 cmp    0x00403010 $0xffffffff 	[2, 0]
0x00401370 jnz    $0x0040137b 	[1, 0]

in dr_basic_block(tag=0x0040137b) 0 0 esp is 0x0012ff40 instr_count=2
0x0040137b xor    %eax %eax -> %eax 	[2, 1]
[RETURN @ ] 0x0040137d tttt0.exe:pre_c_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:289+0x0
	Into 0x7330222a MSVCR90.dll:initterm_e ??:0
0x7330222a add    $0x00000004 %esi -> %esi 	[2, 1]
0x7330222d cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302230 jb     $0x7330221e 	[1, 0]
0x7330221e test   %eax %eax 	[2, 0]
0x73302220 jnz    $0x73302232 	[1, 0]
0x73302222 mov    (%esi) -> %ecx 	[1, 1]
0x73302224 test   %ecx %ecx 	[2, 0]
0x73302226 jz     $0x7330222a 	[1, 0]
0x73302228 call   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302228 MSVCR90.dll:initterm_e ??:0
	Into 0x004014d0 tttt0.exe:__CxxSetUnhandledExceptionFilter f:\dd\vctools\crt_bld\self_x86\crt\prebuild\eh\unhandld.cpp:86+0x0

in dr_basic_block(tag=0x004014d0) 0 0 esp is 0x0012ff40 instr_count=2
0x004014d0 push   $0x0040148e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004014d5 call   0x0040201c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004014d5 tttt0.exe:__CxxSetUnhandledExceptionFilter f:\dd\vctools\crt_bld\self_x86\crt\prebuild\eh\unhandld.cpp:89+0x5
	Into 0x7762f4eb KERNEL32.dll:SetUnhandledExceptionFilter ??:0

in dr_basic_block(tag=0x004014db) 0 0 esp is 0x0012ff40 instr_count=2
0x004014db xor    %eax %eax -> %eax 	[2, 1]
[RETURN @ ] 0x004014dd tttt0.exe:__CxxSetUnhandledExceptionFilter f:\dd\vctools\crt_bld\self_x86\crt\prebuild\eh\unhandld.cpp:91+0x0
	Into 0x7330222a MSVCR90.dll:initterm_e ??:0
0x7330222a add    $0x00000004 %esi -> %esi 	[2, 1]
0x7330222d cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302230 jb     $0x7330221e 	[1, 0]

in dr_basic_block(tag=0x73302232) 0 0 esp is 0x0012ff44 instr_count=3
0x73302232 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73302233 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302234 MSVCR90.dll:initterm_e ??:0
	Into 0x004011a3 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:479+0xf

in dr_basic_block(tag=0x004011a3) 0 0 esp is 0x0012ff50 instr_count=4
0x004011a3 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x004011a4 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x004011a5 test   %eax %eax 	[2, 0]
0x004011a7 jz     $0x004011c0 	[1, 0]

in dr_basic_block(tag=0x004011c0) 0 0 esp is 0x0012ff58 instr_count=3
0x004011c0 mov    0x00403374 -> %eax 	[1, 1]
0x004011c5 cmp    %eax %esi 	[2, 0]
0x004011c7 jnz    $0x004011e4 	[1, 0]

in dr_basic_block(tag=0x004011c9) 0 0 esp is 0x0012ff58 instr_count=3
0x004011c9 push   $0x004020c4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004011ce push   $0x004020bc %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004011d3 call   $0x0040174e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004011d3 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:497+0xa
	Into 0x0040174e tttt0.exe:initterm ??:0

in dr_basic_block(tag=0x0040174e) 0 0 esp is 0x0012ff4c instr_count=1
0x0040174e jmp    0x00402084 	[1, 0]

in dr_basic_block(tag=0x733021ee) 0 0 esp is 0x0012ff4c instr_count=6
0x733021ee mov    %edi -> %edi 	[1, 1]
0x733021f0 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733021f1 mov    %esp -> %ebp 	[1, 1]
0x733021f3 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733021f4 mov    0x08(%ebp) -> %esi 	[1, 1]
JMP @  0x733021f7 MSVCR90.dll:initterm ??:0
	Into  0x73302204 MSVCR90.dll:initterm ??:0

in dr_basic_block(tag=0x73302204) 0 0 esp is 0x0012ff44 instr_count=2
0x73302204 cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302207 jb     $0x733021f9 	[1, 0]

in dr_basic_block(tag=0x733021f9) 0 0 esp is 0x0012ff44 instr_count=3
0x733021f9 mov    (%esi) -> %eax 	[1, 1]
0x733021fb test   %eax %eax 	[2, 0]
0x733021fd jz     $0x73302201 	[1, 0]

in dr_basic_block(tag=0x73302201) 0 0 esp is 0x0012ff44 instr_count=3
0x73302201 add    $0x00000004 %esi -> %esi 	[2, 1]
0x73302204 cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302207 jb     $0x733021f9 	[1, 0]
0x733021f9 mov    (%esi) -> %eax 	[1, 1]
0x733021fb test   %eax %eax 	[2, 0]
0x733021fd jz     $0x73302201 	[1, 0]

in dr_basic_block(tag=0x733021ff) 0 0 esp is 0x0012ff44 instr_count=1
0x733021ff call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733021ff MSVCR90.dll:initterm ??:0
	Into 0x004010dc tttt0.exe:pre_cpp_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:306+0x0

in dr_basic_block(tag=0x004010dc) 0 0 esp is 0x0012ff40 instr_count=2
0x004010dc push   $0x004015c6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004010e1 call   $0x00401589 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004010e1 tttt0.exe:pre_cpp_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:308+0x5
	Into 0x00401589 tttt0.exe:atexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:126+0x0

in dr_basic_block(tag=0x00401589) 0 0 esp is 0x0012ff38 instr_count=5
0x00401589 mov    %edi -> %edi 	[1, 1]
0x0040158b push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040158c mov    %esp -> %ebp 	[1, 1]
0x0040158e push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401591 call   $0x004014e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401591 tttt0.exe:atexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:127+0x3
	Into 0x004014e4 tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:79+0x0

in dr_basic_block(tag=0x004014e4) 0 0 esp is 0x0012ff2c instr_count=3
0x004014e4 push   $0x00000014 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004014e6 push   $0x004021d8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004014eb call   $0x0040175c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004014eb tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:79+0x7
	Into 0x0040175c tttt0.exe:__SEH_prolog4 ??:0
0x0040175c push   $0x004017b5 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401761 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401768 mov    0x10(%esp) -> %eax 	[1, 1]
0x0040176c mov    %ebp -> 0x10(%esp) 	[1, 1]
0x00401770 lea    0x10(%esp) -> %ebp 	[1, 1]
0x00401774 sub    %eax %esp -> %esp 	[2, 1]
0x00401776 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401777 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401778 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401779 mov    0x00403000 -> %eax 	[1, 1]
0x0040177e xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x00401781 xor    %ebp %eax -> %eax 	[2, 1]
0x00401783 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401784 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x00401787 push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040178a mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x0040178d mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x00401794 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x00401797 lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x0040179a mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x004017a0 tttt0.exe:__SEH_prolog4 ??:0
	Into 0x004014f0 tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:84+0x0

in dr_basic_block(tag=0x004014f0) 0 0 esp is 0x0012fef4 instr_count=3
0x004014f0 push   0x00403380 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004014f6 mov    0x00402074 -> %esi 	[1, 1]
0x004014fc call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004014fc tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:84+0xc
	Into 0x73303607 MSVCR90.dll:decode_pointer ??:0

in dr_basic_block(tag=0x73303607) 0 0 esp is 0x0012feec instr_count=7
0x73303607 mov    %edi -> %edi 	[1, 1]
0x73303609 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330360a mov    %esp -> %ebp 	[1, 1]
0x7330360c push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330360d push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303613 mov    0x732e1030 -> %esi 	[1, 1]
0x73303619 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303619 MSVCR90.dll:decode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0

in dr_basic_block(tag=0x7330361b) 0 0 esp is 0x0012fee4 instr_count=2
0x7330361b test   %eax %eax 	[2, 0]
0x7330361d jz     $0x73303640 	[1, 0]

in dr_basic_block(tag=0x7330361f) 0 0 esp is 0x0012fee4 instr_count=3
0x7330361f mov    0x733771e0 -> %eax 	[1, 1]
0x73303624 cmp    %eax $0xffffffff 	[2, 0]
0x73303627 jz     $0x73303640 	[1, 0]

in dr_basic_block(tag=0x73303629) 0 0 esp is 0x0012fee4 instr_count=3
0x73303629 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330362a push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303630 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303630 MSVCR90.dll:decode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0

in dr_basic_block(tag=0x73303632) 0 0 esp is 0x0012fee0 instr_count=1
0x73303632 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303632 MSVCR90.dll:decode_pointer ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0

in dr_basic_block(tag=0x73303634) 0 0 esp is 0x0012fee4 instr_count=2
0x73303634 test   %eax %eax 	[2, 0]
0x73303636 jz     $0x73303640 	[1, 0]

in dr_basic_block(tag=0x73303638) 0 0 esp is 0x0012fee4 instr_count=2
0x73303638 mov    0x000001fc(%eax) -> %eax 	[1, 1]
JMP @  0x7330363e MSVCR90.dll:decode_pointer ??:0
	Into  0x73303667 MSVCR90.dll:decode_pointer ??:0

in dr_basic_block(tag=0x73303667) 0 0 esp is 0x0012fee4 instr_count=2
0x73303667 test   %eax %eax 	[2, 0]
0x73303669 jz     $0x73303673 	[1, 0]

in dr_basic_block(tag=0x7330366b) 0 0 esp is 0x0012fee4 instr_count=2
0x7330366b push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330366e call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330366e MSVCR90.dll:decode_pointer ??:0
	Into 0x7787cd10 ntdll.dll:RtlDecodePointer ??:0

in dr_basic_block(tag=0x73303670) 0 0 esp is 0x0012fee4 instr_count=5
0x73303670 mov    %eax -> 0x08(%ebp) 	[1, 1]
0x73303673 mov    0x08(%ebp) -> %eax 	[1, 1]
0x73303676 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73303677 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73303678 MSVCR90.dll:decode_pointer ??:0
	Into 0x004014fe tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:84+0xe

in dr_basic_block(tag=0x004014fe) 0 0 esp is 0x0012fef0 instr_count=4
0x004014fe pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x004014ff mov    %eax -> 0xffffffe4(%ebp) 	[1, 1]
0x00401502 cmp    %eax $0xffffffff 	[2, 0]
0x00401505 jnz    $0x00401513 	[1, 0]

in dr_basic_block(tag=0x00401507) 0 0 esp is 0x0012fef4 instr_count=2
0x00401507 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040150a call   0x00402070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040150a tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:90+0x3
	Into 0x7334ce5a MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce5a) 0 0 esp is 0x0012feec instr_count=3
0x7334ce5a push   $0x0000000c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ce5c push   $0x7336dc80 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ce61 call   $0x7334cf00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ce61 MSVCR90.dll:onexit ??:0
	Into 0x7334cf00 MSVCR90.dll:_dllonexit ??:0

in dr_basic_block(tag=0x7334cf00) 0 0 esp is 0x0012fee0 instr_count=21
0x7334cf00 push   $0x7334cf5e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf05 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf0c mov    0x10(%esp) -> %eax 	[1, 1]
0x7334cf10 mov    %ebp -> 0x10(%esp) 	[1, 1]
0x7334cf14 lea    0x10(%esp) -> %ebp 	[1, 1]
0x7334cf18 sub    %eax %esp -> %esp 	[2, 1]
0x7334cf1a push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1b push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1c push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1d mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334cf22 xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334cf25 xor    %ebp %eax -> %eax 	[2, 1]
0x7334cf27 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf28 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x7334cf2b push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf2e mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x7334cf31 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cf38 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x7334cf3b lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7334cf3e mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x7334cf44 MSVCR90.dll:_dllonexit ??:0
	Into 0x7334ce66 MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce66) 0 0 esp is 0x0012febc instr_count=1
0x7334ce66 call   $0x733021d2 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ce66 MSVCR90.dll:onexit ??:0
	Into 0x733021d2 MSVCR90.dll:amsg_exit ??:0

in dr_basic_block(tag=0x733021d2) 0 0 esp is 0x0012feb8 instr_count=2
0x733021d2 push   $0x00000008 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733021d4 call   $0x73302efa %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733021d4 MSVCR90.dll:amsg_exit ??:0
	Into 0x73302efa MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73302efa) 0 0 esp is 0x0012feb0 instr_count=8
0x73302efa mov    %edi -> %edi 	[1, 1]
0x73302efc push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302efd mov    %esp -> %ebp 	[1, 1]
0x73302eff mov    0x08(%ebp) -> %eax 	[1, 1]
0x73302f02 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f03 lea    0x733770c0(,%eax,8) -> %esi 	[1, 1]
0x73302f0a cmp    (%esi) $0x00000000 	[2, 0]
0x73302f0d jnz    $0x73302f22 	[1, 0]

in dr_basic_block(tag=0x73302f22) 0 0 esp is 0x0012fea8 instr_count=2
0x73302f22 push   (%esi) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f24 call   0x732e1048 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f24 MSVCR90.dll:lock ??:0
	Into 0x77867790 ntdll.dll:RtlEnterCriticalSection ??:0

in dr_basic_block(tag=0x73302f2a) 0 0 esp is 0x0012fea8 instr_count=3
0x73302f2a pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73302f2b pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302f2c MSVCR90.dll:lock ??:0
	Into 0x733021d9 MSVCR90.dll:amsg_exit ??:0

in dr_basic_block(tag=0x733021d9) 0 0 esp is 0x0012feb4 instr_count=2
0x733021d9 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x733021da MSVCR90.dll:amsg_exit ??:0
	Into 0x7334ce6b MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce6b) 0 0 esp is 0x0012febc instr_count=3
0x7334ce6b and    $0x00000000 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334ce6f push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ce72 call   $0x7334ccee %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ce72 MSVCR90.dll:onexit ??:0
	Into 0x7334ccee MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334ccee) 0 0 esp is 0x0012feb4 instr_count=9
0x7334ccee mov    %edi -> %edi 	[1, 1]
0x7334ccf0 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ccf1 mov    %esp -> %ebp 	[1, 1]
0x7334ccf3 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ccf4 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ccf5 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ccf6 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ccf7 push   0x7337d664 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334ccfd call   $0x73303607 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ccfd MSVCR90.dll:_invalid_parameter ??:0
	Into 0x73303607 MSVCR90.dll:decode_pointer ??:0
0x73303607 mov    %edi -> %edi 	[1, 1]
0x73303609 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330360a mov    %esp -> %ebp 	[1, 1]
0x7330360c push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330360d push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303613 mov    0x732e1030 -> %esi 	[1, 1]
0x73303619 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303619 MSVCR90.dll:decode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x7330361b test   %eax %eax 	[2, 0]
0x7330361d jz     $0x73303640 	[1, 0]
0x7330361f mov    0x733771e0 -> %eax 	[1, 1]
0x73303624 cmp    %eax $0xffffffff 	[2, 0]
0x73303627 jz     $0x73303640 	[1, 0]
0x73303629 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330362a push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303630 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303630 MSVCR90.dll:decode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x73303632 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303632 MSVCR90.dll:decode_pointer ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303634 test   %eax %eax 	[2, 0]
0x73303636 jz     $0x73303640 	[1, 0]
0x73303638 mov    0x000001fc(%eax) -> %eax 	[1, 1]
JMP @  0x7330363e MSVCR90.dll:decode_pointer ??:0
	Into  0x73303667 MSVCR90.dll:decode_pointer ??:0
0x73303667 test   %eax %eax 	[2, 0]
0x73303669 jz     $0x73303673 	[1, 0]
0x7330366b push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330366e call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330366e MSVCR90.dll:decode_pointer ??:0
	Into 0x7787cd10 ntdll.dll:RtlDecodePointer ??:0
0x73303670 mov    %eax -> 0x08(%ebp) 	[1, 1]
0x73303673 mov    0x08(%ebp) -> %eax 	[1, 1]
0x73303676 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73303677 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73303678 MSVCR90.dll:decode_pointer ??:0
	Into 0x7334cd02 MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334cd02) 0 0 esp is 0x0012fe9c instr_count=4
0x7334cd02 push   0x7337d660 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cd08 mov    %eax -> %edi 	[1, 1]
0x7334cd0a mov    %edi -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cd0d call   $0x73303607 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334cd0d MSVCR90.dll:_invalid_parameter ??:0
	Into 0x73303607 MSVCR90.dll:decode_pointer ??:0
0x73303607 mov    %edi -> %edi 	[1, 1]
0x73303609 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330360a mov    %esp -> %ebp 	[1, 1]
0x7330360c push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330360d push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303613 mov    0x732e1030 -> %esi 	[1, 1]
0x73303619 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303619 MSVCR90.dll:decode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x7330361b test   %eax %eax 	[2, 0]
0x7330361d jz     $0x73303640 	[1, 0]
0x7330361f mov    0x733771e0 -> %eax 	[1, 1]
0x73303624 cmp    %eax $0xffffffff 	[2, 0]
0x73303627 jz     $0x73303640 	[1, 0]
0x73303629 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330362a push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303630 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303630 MSVCR90.dll:decode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x73303632 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303632 MSVCR90.dll:decode_pointer ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303634 test   %eax %eax 	[2, 0]
0x73303636 jz     $0x73303640 	[1, 0]
0x73303638 mov    0x000001fc(%eax) -> %eax 	[1, 1]
JMP @  0x7330363e MSVCR90.dll:decode_pointer ??:0
	Into  0x73303667 MSVCR90.dll:decode_pointer ??:0
0x73303667 test   %eax %eax 	[2, 0]
0x73303669 jz     $0x73303673 	[1, 0]
0x7330366b push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330366e call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330366e MSVCR90.dll:decode_pointer ??:0
	Into 0x7787cd10 ntdll.dll:RtlDecodePointer ??:0
0x73303670 mov    %eax -> 0x08(%ebp) 	[1, 1]
0x73303673 mov    0x08(%ebp) -> %eax 	[1, 1]
0x73303676 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73303677 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73303678 MSVCR90.dll:decode_pointer ??:0
	Into 0x7334cd12 MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334cd12) 0 0 esp is 0x0012fe98 instr_count=5
0x7334cd12 mov    %eax -> %esi 	[1, 1]
0x7334cd14 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cd15 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cd16 cmp    %esi %edi 	[2, 0]
0x7334cd18 jb     $0x7334cda1 	[1, 0]

in dr_basic_block(tag=0x7334cd1e) 0 0 esp is 0x0012fea0 instr_count=5
0x7334cd1e mov    %esi -> %ebx 	[1, 1]
0x7334cd20 sub    %edi %ebx -> %ebx 	[2, 1]
0x7334cd22 lea    0x04(%ebx) -> %eax 	[1, 1]
0x7334cd25 cmp    %eax $0x00000004 	[2, 0]
0x7334cd28 jb     $0x7334cda1 	[1, 0]

in dr_basic_block(tag=0x7334cd2a) 0 0 esp is 0x0012fea0 instr_count=2
0x7334cd2a push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cd2b call   $0x7334619b %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334cd2b MSVCR90.dll:_invalid_parameter ??:0
	Into 0x7334619b MSVCR90.dll:msize ??:0

in dr_basic_block(tag=0x7334619b) 0 0 esp is 0x0012fe98 instr_count=3
0x7334619b push   $0x0000001c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334619d push   $0x7336d6d8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733461a2 call   $0x7334cf00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733461a2 MSVCR90.dll:msize ??:0
	Into 0x7334cf00 MSVCR90.dll:_dllonexit ??:0
0x7334cf00 push   $0x7334cf5e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf05 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf0c mov    0x10(%esp) -> %eax 	[1, 1]
0x7334cf10 mov    %ebp -> 0x10(%esp) 	[1, 1]
0x7334cf14 lea    0x10(%esp) -> %ebp 	[1, 1]
0x7334cf18 sub    %eax %esp -> %esp 	[2, 1]
0x7334cf1a push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1b push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1c push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1d mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334cf22 xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334cf25 xor    %ebp %eax -> %eax 	[2, 1]
0x7334cf27 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf28 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x7334cf2b push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf2e mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x7334cf31 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cf38 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x7334cf3b lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7334cf3e mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x7334cf44 MSVCR90.dll:_dllonexit ??:0
	Into 0x733461a7 MSVCR90.dll:msize ??:0

in dr_basic_block(tag=0x733461a7) 0 0 esp is 0x0012fe58 instr_count=7
0x733461a7 xor    %eax %eax -> %eax 	[2, 1]
0x733461a9 mov    0x08(%ebp) -> %esi 	[1, 1]
0x733461ac xor    %edi %edi -> %edi 	[2, 1]
0x733461ae cmp    %esi %edi 	[2, 0]
0x733461b0 setnz  -> %al 	[0, 1]
0x733461b3 cmp    %eax %edi 	[2, 0]
0x733461b5 jnz    $0x733461d7 	[1, 0]

in dr_basic_block(tag=0x733461d7) 0 0 esp is 0x0012fe58 instr_count=3
0x733461d7 mov    0x7337d680 -> %eax 	[1, 1]
0x733461dc cmp    %eax $0x00000003 	[2, 0]
0x733461df jnz    $0x7334622c 	[1, 0]

in dr_basic_block(tag=0x7334622c) 0 0 esp is 0x0012fe58 instr_count=2
0x7334622c cmp    %eax $0x00000002 	[2, 0]
0x7334622f jnz    $0x73346285 	[1, 0]

in dr_basic_block(tag=0x73346285) 0 0 esp is 0x0012fe58 instr_count=4
0x73346285 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73346286 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73346287 push   0x7337c160 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334628d call   0x732e1188 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334628d MSVCR90.dll:msize ??:0
	Into 0x77879bec ntdll.dll:RtlSizeHeap ??:0

in dr_basic_block(tag=0x73346293) 0 0 esp is 0x0012fe58 instr_count=3
0x73346293 mov    %eax -> %esi 	[1, 1]
0x73346295 mov    %esi -> %eax 	[1, 1]
0x73346297 call   $0x7334cf45 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73346297 MSVCR90.dll:msize ??:0
	Into 0x7334cf45 MSVCR90.dll:_dllonexit ??:0

in dr_basic_block(tag=0x7334cf45) 0 0 esp is 0x0012fe54 instr_count=11
0x7334cf45 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7334cf48 mov    %ecx -> %fs:0x00 	[1, 1]
0x7334cf4f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cf50 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf51 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf52 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cf53 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cf54 mov    %ebp -> %esp 	[1, 1]
0x7334cf56 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x7334cf57 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x7334cf58 MSVCR90.dll:_dllonexit ??:0
	Into 0x7334629c MSVCR90.dll:msize ??:0

in dr_basic_block(tag=0x7334629c) 0 0 esp is 0x0012fe98 instr_count=1
[RETURN @ ] 0x7334629c MSVCR90.dll:msize ??:0
	Into 0x7334cd30 MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334cd30) 0 0 esp is 0x0012fe9c instr_count=5
0x7334cd30 mov    %eax -> %edi 	[1, 1]
0x7334cd32 lea    0x04(%ebx) -> %eax 	[1, 1]
0x7334cd35 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cd36 cmp    %edi %eax 	[2, 0]
0x7334cd38 jnb    $0x7334cd82 	[1, 0]

in dr_basic_block(tag=0x7334cd82) 0 0 esp is 0x0012fea0 instr_count=2
0x7334cd82 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cd85 call   $0x73303582 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334cd85 MSVCR90.dll:_invalid_parameter ??:0
	Into 0x73303582 MSVCR90.dll:encode_pointer ??:0
0x73303582 mov    %edi -> %edi 	[1, 1]
0x73303584 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303585 mov    %esp -> %ebp 	[1, 1]
0x73303587 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303588 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330358e mov    0x732e1030 -> %esi 	[1, 1]
0x73303594 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303594 MSVCR90.dll:encode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x73303596 test   %eax %eax 	[2, 0]
0x73303598 jz     $0x733035bb 	[1, 0]
0x7330359a mov    0x733771e0 -> %eax 	[1, 1]
0x7330359f cmp    %eax $0xffffffff 	[2, 0]
0x733035a2 jz     $0x733035bb 	[1, 0]
0x733035a4 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035a5 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035ab call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035ab MSVCR90.dll:encode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733035ad call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035ad MSVCR90.dll:encode_pointer ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x733035af test   %eax %eax 	[2, 0]
0x733035b1 jz     $0x733035bb 	[1, 0]
0x733035b3 mov    0x000001f8(%eax) -> %eax 	[1, 1]
JMP @  0x733035b9 MSVCR90.dll:encode_pointer ??:0
	Into  0x733035e2 MSVCR90.dll:encode_pointer ??:0
0x733035e2 test   %eax %eax 	[2, 0]
0x733035e4 jz     $0x733035ee 	[1, 0]
0x733035e6 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035e9 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035e9 MSVCR90.dll:encode_pointer ??:0
	Into 0x7787a295 ntdll.dll:RtlEncodePointer ??:0
0x733035eb mov    %eax -> 0x08(%ebp) 	[1, 1]
0x733035ee mov    0x08(%ebp) -> %eax 	[1, 1]
0x733035f1 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733035f2 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733035f3 MSVCR90.dll:encode_pointer ??:0
	Into 0x7334cd8a MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334cd8a) 0 0 esp is 0x0012fe9c instr_count=4
0x7334cd8a mov    %eax -> (%esi) 	[1, 1]
0x7334cd8c add    $0x00000004 %esi -> %esi 	[2, 1]
0x7334cd8f push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cd90 call   $0x73303582 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334cd90 MSVCR90.dll:_invalid_parameter ??:0
	Into 0x73303582 MSVCR90.dll:encode_pointer ??:0
0x73303582 mov    %edi -> %edi 	[1, 1]
0x73303584 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303585 mov    %esp -> %ebp 	[1, 1]
0x73303587 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303588 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330358e mov    0x732e1030 -> %esi 	[1, 1]
0x73303594 call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303594 MSVCR90.dll:encode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x73303596 test   %eax %eax 	[2, 0]
0x73303598 jz     $0x733035bb 	[1, 0]
0x7330359a mov    0x733771e0 -> %eax 	[1, 1]
0x7330359f cmp    %eax $0xffffffff 	[2, 0]
0x733035a2 jz     $0x733035bb 	[1, 0]
0x733035a4 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035a5 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035ab call   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035ab MSVCR90.dll:encode_pointer ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733035ad call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035ad MSVCR90.dll:encode_pointer ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x733035af test   %eax %eax 	[2, 0]
0x733035b1 jz     $0x733035bb 	[1, 0]
0x733035b3 mov    0x000001f8(%eax) -> %eax 	[1, 1]
JMP @  0x733035b9 MSVCR90.dll:encode_pointer ??:0
	Into  0x733035e2 MSVCR90.dll:encode_pointer ??:0
0x733035e2 test   %eax %eax 	[2, 0]
0x733035e4 jz     $0x733035ee 	[1, 0]
0x733035e6 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733035e9 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733035e9 MSVCR90.dll:encode_pointer ??:0
	Into 0x7787a295 ntdll.dll:RtlEncodePointer ??:0
0x733035eb mov    %eax -> 0x08(%ebp) 	[1, 1]
0x733035ee mov    0x08(%ebp) -> %eax 	[1, 1]
0x733035f1 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733035f2 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733035f3 MSVCR90.dll:encode_pointer ??:0
	Into 0x7334cd95 MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334cd95) 0 0 esp is 0x0012fe98 instr_count=5
0x7334cd95 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cd96 mov    %eax -> 0x7337d660 	[1, 1]
0x7334cd9b mov    0x08(%ebp) -> %eax 	[1, 1]
0x7334cd9e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
JMP @  0x7334cd9f MSVCR90.dll:_invalid_parameter ??:0
	Into  0x7334cda3 MSVCR90.dll:_invalid_parameter ??:0

in dr_basic_block(tag=0x7334cda3) 0 0 esp is 0x0012fea0 instr_count=5
0x7334cda3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cda4 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cda5 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cda6 leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x7334cda7 MSVCR90.dll:_invalid_parameter ??:0
	Into 0x7334ce77 MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce77) 0 0 esp is 0x0012feb8 instr_count=4
0x7334ce77 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334ce78 mov    %eax -> 0xffffffe4(%ebp) 	[1, 1]
0x7334ce7b mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334ce82 call   $0x7334ce90 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ce82 MSVCR90.dll:onexit ??:0
	Into 0x7334ce90 MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce90) 0 0 esp is 0x0012feb8 instr_count=1
0x7334ce90 call   $0x733021e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ce90 MSVCR90.dll:onexit ??:0
	Into 0x733021e0 MSVCR90.dll:amsg_exit ??:0

in dr_basic_block(tag=0x733021e0) 0 0 esp is 0x0012feb4 instr_count=2
0x733021e0 push   $0x00000008 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733021e2 call   $0x73302e16 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733021e2 MSVCR90.dll:amsg_exit ??:0
	Into 0x73302e16 MSVCR90.dll:unlock ??:0

in dr_basic_block(tag=0x73302e16) 0 0 esp is 0x0012feac instr_count=6
0x73302e16 mov    %edi -> %edi 	[1, 1]
0x73302e18 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302e19 mov    %esp -> %ebp 	[1, 1]
0x73302e1b mov    0x08(%ebp) -> %eax 	[1, 1]
0x73302e1e push   0x733770c0(,%eax,8) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302e25 call   0x732e1044 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302e25 MSVCR90.dll:unlock ??:0
	Into 0x77867750 ntdll.dll:RtlLeaveCriticalSection ??:0

in dr_basic_block(tag=0x73302e2b) 0 0 esp is 0x0012fea8 instr_count=2
0x73302e2b pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302e2c MSVCR90.dll:unlock ??:0
	Into 0x733021e7 MSVCR90.dll:amsg_exit ??:0

in dr_basic_block(tag=0x733021e7) 0 0 esp is 0x0012feb0 instr_count=2
0x733021e7 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x733021e8 MSVCR90.dll:amsg_exit ??:0
	Into 0x7334ce95 MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce95) 0 0 esp is 0x0012feb8 instr_count=1
[RETURN @ ] 0x7334ce95 MSVCR90.dll:onexit ??:0
	Into 0x7334ce87 MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce87) 0 0 esp is 0x0012febc instr_count=2
0x7334ce87 mov    0xffffffe4(%ebp) -> %eax 	[1, 1]
0x7334ce8a call   $0x7334cf45 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334ce8a MSVCR90.dll:onexit ??:0
	Into 0x7334cf45 MSVCR90.dll:_dllonexit ??:0
0x7334cf45 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7334cf48 mov    %ecx -> %fs:0x00 	[1, 1]
0x7334cf4f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cf50 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf51 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf52 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cf53 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cf54 mov    %ebp -> %esp 	[1, 1]
0x7334cf56 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x7334cf57 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x7334cf58 MSVCR90.dll:_dllonexit ??:0
	Into 0x7334ce8f MSVCR90.dll:onexit ??:0

in dr_basic_block(tag=0x7334ce8f) 0 0 esp is 0x0012feec instr_count=1
[RETURN @ ] 0x7334ce8f MSVCR90.dll:onexit ??:0
	Into 0x00401510 tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:90+0x9

in dr_basic_block(tag=0x00401510) 0 0 esp is 0x0012fef0 instr_count=2
0x00401510 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
JMP @  0x00401511 tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:90+0xa
	Into  0x0040157a tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:121+0x0

in dr_basic_block(tag=0x0040157a) 0 0 esp is 0x0012fef4 instr_count=1
0x0040157a call   $0x004017a1 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040157a tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:121+0x0
	Into 0x004017a1 tttt0.exe:__SEH_epilog4 ??:0

in dr_basic_block(tag=0x004017a1) 0 0 esp is 0x0012fef0 instr_count=11
0x004017a1 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x004017a4 mov    %ecx -> %fs:0x00 	[1, 1]
0x004017ab pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x004017ac pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x004017ad pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x004017ae pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x004017af pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x004017b0 mov    %ebp -> %esp 	[1, 1]
0x004017b2 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x004017b3 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x004017b4 tttt0.exe:__SEH_epilog4 ??:0
	Into 0x0040157f tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:121+0x5

in dr_basic_block(tag=0x0040157f) 0 0 esp is 0x0012ff2c instr_count=1
[RETURN @ ] 0x0040157f tttt0.exe:_onexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:121+0x5
	Into 0x00401596 tttt0.exe:atexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:127+0x8

in dr_basic_block(tag=0x00401596) 0 0 esp is 0x0012ff30 instr_count=7
0x00401596 neg    %eax -> %eax 	[1, 1]
0x00401598 sbb    %eax %eax -> %eax 	[2, 1]
0x0040159a neg    %eax -> %eax 	[1, 1]
0x0040159c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x0040159d dec    %eax -> %eax 	[1, 1]
0x0040159e pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x0040159f tttt0.exe:atexit f:\dd\vctools\crt_bld\self_x86\crt\src\atonexit.c:128+0x1
	Into 0x004010e6 tttt0.exe:pre_cpp_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:318+0x0

in dr_basic_block(tag=0x004010e6) 0 0 esp is 0x0012ff3c instr_count=8
0x004010e6 mov    0x00403360 -> %eax 	[1, 1]
0x004010eb mov    $0x0040302c -> (%esp) 	[1, 1]
0x004010f2 push   0x0040335c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004010f8 mov    %eax -> 0x0040302c 	[1, 1]
0x004010fd push   $0x0040301c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401102 push   $0x00403020 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401107 push   $0x00403018 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040110c call   0x0040209c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040110c tttt0.exe:pre_cpp_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:326+0x21
	Into 0x73302793 MSVCR90.dll:_getmainargs ??:0

in dr_basic_block(tag=0x73302793) 0 0 esp is 0x0012ff28 instr_count=8
0x73302793 mov    %edi -> %edi 	[1, 1]
0x73302795 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302796 mov    %esp -> %ebp 	[1, 1]
0x73302798 cmp    0x14(%ebp) $0x00000000 	[2, 0]
0x7330279c mov    0x18(%ebp) -> %eax 	[1, 1]
0x7330279f mov    (%eax) -> %eax 	[1, 1]
0x733027a1 mov    %eax -> 0x7337c158 	[1, 1]
0x733027a6 jz     $0x733027af 	[1, 0]

in dr_basic_block(tag=0x733027af) 0 0 esp is 0x0012ff24 instr_count=1
0x733027af call   $0x733030d1 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733027af MSVCR90.dll:_getmainargs ??:0
	Into 0x733030d1 MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x733030d1) 0 0 esp is 0x0012ff20 instr_count=14
0x733030d1 mov    %edi -> %edi 	[1, 1]
0x733030d3 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030d4 mov    %esp -> %ebp 	[1, 1]
0x733030d6 sub    $0x0000000c %esp -> %esp 	[2, 1]
0x733030d9 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030da push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030db push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030dc push   $0x00000104 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030e1 mov    $0x7337bb90 -> %esi 	[1, 1]
0x733030e6 xor    %ebx %ebx -> %ebx 	[2, 1]
0x733030e8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030e9 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733030ea mov    %bl -> 0x7337bc94 	[1, 1]
0x733030f0 call   0x732e1000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733030f0 MSVCR90.dll:lock ??:0
	Into 0x7762d74a KERNEL32.dll:GetModuleFileNameA ??:0

in dr_basic_block(tag=0x733030f6) 0 0 esp is 0x0012ff04 instr_count=4
0x733030f6 mov    0x7337ba2c -> %eax 	[1, 1]
0x733030fb mov    %esi -> 0x7337b6fc 	[1, 1]
0x73303101 cmp    %eax %ebx 	[2, 0]
0x73303103 jz     $0x7330310c 	[1, 0]

in dr_basic_block(tag=0x73303105) 0 0 esp is 0x0012ff04 instr_count=3
0x73303105 mov    %eax -> 0xfffffffc(%ebp) 	[1, 1]
0x73303108 cmp    (%eax) %bl 	[2, 0]
0x7330310a jnz    $0x7330310f 	[1, 0]

in dr_basic_block(tag=0x7330310f) 0 0 esp is 0x0012ff04 instr_count=7
0x7330310f mov    0xfffffffc(%ebp) -> %edx 	[1, 1]
0x73303112 lea    0xfffffff8(%ebp) -> %eax 	[1, 1]
0x73303115 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303116 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303117 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303118 lea    0xfffffff4(%ebp) -> %edi 	[1, 1]
0x7330311b call   $0x73302f32 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330311b MSVCR90.dll:lock ??:0
	Into 0x73302f32 MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73302f32) 0 0 esp is 0x0012fef4 instr_count=14
0x73302f32 mov    %edi -> %edi 	[1, 1]
0x73302f34 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f35 mov    %esp -> %ebp 	[1, 1]
0x73302f37 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f38 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302f3b push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f3c xor    %eax %eax -> %eax 	[2, 1]
0x73302f3e push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f3f mov    %eax -> (%edi) 	[1, 1]
0x73302f41 mov    %edx -> %esi 	[1, 1]
0x73302f43 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302f46 mov    $0x00000001 -> (%ecx) 	[1, 1]
0x73302f4c cmp    0x08(%ebp) %eax 	[2, 0]
0x73302f4f jz     $0x73302f5a 	[1, 0]

in dr_basic_block(tag=0x73302f5a) 0 0 esp is 0x0012fee4 instr_count=3
0x73302f5a mov    %eax -> 0xfffffffc(%ebp) 	[1, 1]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]

in dr_basic_block(tag=0x73302f72) 0 0 esp is 0x0012fee4 instr_count=3
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]

in dr_basic_block(tag=0x73302f80) 0 0 esp is 0x0012fee4 instr_count=5
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0

in dr_basic_block(tag=0x733204e0) 0 0 esp is 0x0012fedc instr_count=8
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0

in dr_basic_block(tag=0x7332027a) 0 0 esp is 0x0012fec4 instr_count=7
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0

in dr_basic_block(tag=0x7331c3f4) 0 0 esp is 0x0012fea8 instr_count=9
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]

in dr_basic_block(tag=0x7331c407) 0 0 esp is 0x0012fea0 instr_count=1
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0

in dr_basic_block(tag=0x733038bd) 0 0 esp is 0x0012fe9c instr_count=3
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0

in dr_basic_block(tag=0x7330383f) 0 0 esp is 0x0012fe94 instr_count=4
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0

in dr_basic_block(tag=0x73303849) 0 0 esp is 0x0012fe8c instr_count=3
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0

in dr_basic_block(tag=0x733036b6) 0 0 esp is 0x0012fe84 instr_count=4
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0

in dr_basic_block(tag=0x733036c5) 0 0 esp is 0x0012fe80 instr_count=3
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]

in dr_basic_block(tag=0x733036e6) 0 0 esp is 0x0012fe80 instr_count=3
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0

in dr_basic_block(tag=0x73303856) 0 0 esp is 0x0012fe88 instr_count=1
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0

in dr_basic_block(tag=0x73303858) 0 0 esp is 0x0012fe8c instr_count=3
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]

in dr_basic_block(tag=0x733038ac) 0 0 esp is 0x0012fe8c instr_count=2
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0

in dr_basic_block(tag=0x733038b3) 0 0 esp is 0x0012fe8c instr_count=4
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0

in dr_basic_block(tag=0x733038c5) 0 0 esp is 0x0012fe98 instr_count=3
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]

in dr_basic_block(tag=0x733038d3) 0 0 esp is 0x0012fe98 instr_count=3
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0

in dr_basic_block(tag=0x7331c40c) 0 0 esp is 0x0012fea0 instr_count=8
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]

in dr_basic_block(tag=0x7331c436) 0 0 esp is 0x0012fea0 instr_count=3
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]

in dr_basic_block(tag=0x7331c457) 0 0 esp is 0x0012fea0 instr_count=3
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]

in dr_basic_block(tag=0x7331c460) 0 0 esp is 0x0012fea0 instr_count=3
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0

in dr_basic_block(tag=0x7331c474) 0 0 esp is 0x0012fea0 instr_count=4
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0

in dr_basic_block(tag=0x7332028d) 0 0 esp is 0x0012feb0 instr_count=5
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]

in dr_basic_block(tag=0x7332029d) 0 0 esp is 0x0012feb0 instr_count=2
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]

in dr_basic_block(tag=0x733202b5) 0 0 esp is 0x0012feb0 instr_count=3
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]

in dr_basic_block(tag=0x733202be) 0 0 esp is 0x0012feb0 instr_count=2
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]

in dr_basic_block(tag=0x733202c4) 0 0 esp is 0x0012feb0 instr_count=4
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0

in dr_basic_block(tag=0x733204f3) 0 0 esp is 0x0012fec8 instr_count=3
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73302f8c) 0 0 esp is 0x0012fee0 instr_count=3
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]

in dr_basic_block(tag=0x73302fa4) 0 0 esp is 0x0012fee4 instr_count=4
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]

in dr_basic_block(tag=0x73302fae) 0 0 esp is 0x0012fee4 instr_count=2
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]

in dr_basic_block(tag=0x73302fb4) 0 0 esp is 0x0012fee4 instr_count=2
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]

in dr_basic_block(tag=0x73302fb9) 0 0 esp is 0x0012fee4 instr_count=2
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]

in dr_basic_block(tag=0x73302f5d) 0 0 esp is 0x0012fee4 instr_count=2
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]

in dr_basic_block(tag=0x73302fe0) 0 0 esp is 0x0012fee4 instr_count=2
0x73302fe0 dec    %esi -> %esi 	[1, 1]
JMP @  0x73302fe1 MSVCR90.dll:lock ??:0
	Into  0x73302fc6 MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73302fc6) 0 0 esp is 0x0012fee4 instr_count=3
0x73302fc6 and    $0x00000000 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x73302fca cmp    (%esi) $0x00 	[2, 0]
0x73302fcd jz     $0x733030bc 	[1, 0]

in dr_basic_block(tag=0x733030bc) 0 0 esp is 0x0012fee4 instr_count=5
0x733030bc mov    0x08(%ebp) -> %eax 	[1, 1]
0x733030bf pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733030c0 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x733030c1 test   %eax %eax 	[2, 0]
0x733030c3 jz     $0x733030c8 	[1, 0]

in dr_basic_block(tag=0x733030c8) 0 0 esp is 0x0012feec instr_count=3
0x733030c8 inc    (%ecx) -> (%ecx) 	[1, 1]
0x733030ca leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733030cb MSVCR90.dll:lock ??:0
	Into 0x73303120 MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73303120) 0 0 esp is 0x0012fef8 instr_count=4
0x73303120 mov    0xfffffff8(%ebp) -> %eax 	[1, 1]
0x73303123 add    $0x0000000c %esp -> %esp 	[2, 1]
0x73303126 cmp    %eax $0x3fffffff 	[2, 0]
0x7330312b jnb    $0x73303177 	[1, 0]

in dr_basic_block(tag=0x7330312d) 0 0 esp is 0x0012ff04 instr_count=3
0x7330312d mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73303130 cmp    %ecx $0xffffffff 	[2, 0]
0x73303133 jnb    $0x73303177 	[1, 0]

in dr_basic_block(tag=0x73303135) 0 0 esp is 0x0012ff04 instr_count=5
0x73303135 mov    %eax -> %edi 	[1, 1]
0x73303137 shl    $0x00000002 %edi -> %edi 	[2, 1]
0x7330313a lea    (%edi,%ecx,1) -> %eax 	[1, 1]
0x7330313d cmp    %eax %ecx 	[2, 0]
0x7330313f jb     $0x73303177 	[1, 0]

in dr_basic_block(tag=0x73303141) 0 0 esp is 0x0012ff04 instr_count=2
0x73303141 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303142 call   $0x7334374d %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303142 MSVCR90.dll:lock ??:0
	Into 0x7334374d MSVCR90.dll:malloc_crt ??:0

in dr_basic_block(tag=0x7334374d) 0 0 esp is 0x0012fefc instr_count=8
0x7334374d mov    %edi -> %edi 	[1, 1]
0x7334374f push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343750 mov    %esp -> %ebp 	[1, 1]
0x73343752 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343753 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343754 xor    %esi %esi -> %esi 	[2, 1]
0x73343756 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343759 call   $0x73343d3f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73343759 MSVCR90.dll:malloc_crt ??:0
	Into 0x73343d3f MSVCR90.dll:malloc ??:0

in dr_basic_block(tag=0x73343d3f) 0 0 esp is 0x0012fee8 instr_count=7
0x73343d3f mov    %edi -> %edi 	[1, 1]
0x73343d41 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d42 mov    %esp -> %ebp 	[1, 1]
0x73343d44 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d45 mov    0x08(%ebp) -> %esi 	[1, 1]
0x73343d48 cmp    %esi $0xffffffe0 	[2, 0]
0x73343d4b jnbe   $0x73343dff 	[1, 0]

in dr_basic_block(tag=0x73343d51) 0 0 esp is 0x0012fee0 instr_count=5
0x73343d51 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d52 mov    0x732e1170 -> %ebx 	[1, 1]
0x73343d58 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d59 cmp    0x7337c160 $0x00000000 	[2, 0]
0x73343d60 jnz    $0x73343d7a 	[1, 0]

in dr_basic_block(tag=0x73343d7a) 0 0 esp is 0x0012fed8 instr_count=3
0x73343d7a mov    0x7337d680 -> %eax 	[1, 1]
0x73343d7f cmp    %eax $0x00000001 	[2, 0]
0x73343d82 jnz    $0x73343d92 	[1, 0]

in dr_basic_block(tag=0x73343d84) 0 0 esp is 0x0012fed8 instr_count=2
0x73343d84 test   %esi %esi 	[2, 0]
0x73343d86 jz     $0x73343d8c 	[1, 0]

in dr_basic_block(tag=0x73343d88) 0 0 esp is 0x0012fed8 instr_count=2
0x73343d88 mov    %esi -> %eax 	[1, 1]
JMP @  0x73343d8a MSVCR90.dll:malloc ??:0
	Into  0x73343d8f MSVCR90.dll:malloc ??:0

in dr_basic_block(tag=0x73343d8f) 0 0 esp is 0x0012fed8 instr_count=2
0x73343d8f push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
JMP @  0x73343d90 MSVCR90.dll:malloc ??:0
	Into  0x73343dae MSVCR90.dll:malloc ??:0

in dr_basic_block(tag=0x73343dae) 0 0 esp is 0x0012fed4 instr_count=3
0x73343dae push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343db0 push   0x7337c160 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343db6 call   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73343db6 MSVCR90.dll:malloc ??:0
	Into 0x77872dd6 ntdll.dll:RtlAllocateHeap ??:0

in dr_basic_block(tag=0x73343db8) 0 0 esp is 0x0012fed8 instr_count=3
0x73343db8 mov    %eax -> %edi 	[1, 1]
0x73343dba test   %edi %edi 	[2, 0]
0x73343dbc jnz    $0x73343df9 	[1, 0]

in dr_basic_block(tag=0x73343df9) 0 0 esp is 0x0012fed8 instr_count=4
0x73343df9 mov    %edi -> %eax 	[1, 1]
0x73343dfb pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x73343dfc pop    %esp (%esp) -> %ebx %esp 	[2, 2]
JMP @  0x73343dfd MSVCR90.dll:malloc ??:0
	Into  0x73343e13 MSVCR90.dll:malloc ??:0

in dr_basic_block(tag=0x73343e13) 0 0 esp is 0x0012fee0 instr_count=3
0x73343e13 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73343e14 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73343e15 MSVCR90.dll:malloc ??:0
	Into 0x7334375e MSVCR90.dll:malloc_crt ??:0

in dr_basic_block(tag=0x7334375e) 0 0 esp is 0x0012feec instr_count=4
0x7334375e mov    %eax -> %edi 	[1, 1]
0x73343760 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73343761 test   %edi %edi 	[2, 0]
0x73343763 jnz    $0x7334378c 	[1, 0]

in dr_basic_block(tag=0x7334378c) 0 0 esp is 0x0012fef0 instr_count=5
0x7334378c mov    %edi -> %eax 	[1, 1]
0x7334378e pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334378f pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73343790 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73343791 MSVCR90.dll:malloc_crt ??:0
	Into 0x73303147 MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73303147) 0 0 esp is 0x0012ff00 instr_count=4
0x73303147 mov    %eax -> %esi 	[1, 1]
0x73303149 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330314a cmp    %esi %ebx 	[2, 0]
0x7330314c jz     $0x73303177 	[1, 0]

in dr_basic_block(tag=0x7330314e) 0 0 esp is 0x0012ff04 instr_count=8
0x7330314e mov    0xfffffffc(%ebp) -> %edx 	[1, 1]
0x73303151 lea    0xfffffff8(%ebp) -> %eax 	[1, 1]
0x73303154 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303155 add    %esi %edi -> %edi 	[2, 1]
0x73303157 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303158 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303159 lea    0xfffffff4(%ebp) -> %edi 	[1, 1]
0x7330315c call   $0x73302f32 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330315c MSVCR90.dll:lock ??:0
	Into 0x73302f32 MSVCR90.dll:lock ??:0
0x73302f32 mov    %edi -> %edi 	[1, 1]
0x73302f34 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f35 mov    %esp -> %ebp 	[1, 1]
0x73302f37 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f38 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302f3b push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f3c xor    %eax %eax -> %eax 	[2, 1]
0x73302f3e push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f3f mov    %eax -> (%edi) 	[1, 1]
0x73302f41 mov    %edx -> %esi 	[1, 1]
0x73302f43 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302f46 mov    $0x00000001 -> (%ecx) 	[1, 1]
0x73302f4c cmp    0x08(%ebp) %eax 	[2, 0]
0x73302f4f jz     $0x73302f5a 	[1, 0]

in dr_basic_block(tag=0x73302f51) 0 0 esp is 0x0012fee4 instr_count=6
0x73302f51 mov    0x08(%ebp) -> %ebx 	[1, 1]
0x73302f54 add    $0x00000004 0x08(%ebp) -> 0x08(%ebp) 	[2, 1]
0x73302f58 mov    %edx -> (%ebx) 	[1, 1]
0x73302f5a mov    %eax -> 0xfffffffc(%ebp) 	[1, 1]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]

in dr_basic_block(tag=0x73302f78) 0 0 esp is 0x0012fee4 instr_count=9
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fae cmp    0xfffffffc(%ebp) $0x00000000 	[2, 0]
0x73302fb2 jnz    $0x73302f5d 	[1, 0]
0x73302fb4 cmp    %bl $0x20 	[2, 0]
0x73302fb7 jz     $0x73302fbe 	[1, 0]
0x73302fb9 cmp    %bl $0x09 	[2, 0]
0x73302fbc jnz    $0x73302f5d 	[1, 0]
0x73302f5d cmp    (%esi) $0x22 	[2, 0]
0x73302f60 jnz    $0x73302f72 	[1, 0]
0x73302f72 inc    (%edi) -> (%edi) 	[1, 1]
0x73302f74 test   %edx %edx 	[2, 0]
0x73302f76 jz     $0x73302f80 	[1, 0]
0x73302f78 mov    (%esi) -> %al 	[1, 1]
0x73302f7a mov    %al -> (%edx) 	[1, 1]
0x73302f7c inc    %edx -> %edx 	[1, 1]
0x73302f7d mov    %edx -> 0x0c(%ebp) 	[1, 1]
0x73302f80 mov    (%esi) -> %bl 	[1, 1]
0x73302f82 movzx  %bl -> %eax 	[1, 1]
0x73302f85 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f86 inc    %esi -> %esi 	[1, 1]
0x73302f87 call   $0x733204e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f87 MSVCR90.dll:lock ??:0
	Into 0x733204e0 MSVCR90.dll:ismbblead ??:0
0x733204e0 mov    %edi -> %edi 	[1, 1]
0x733204e2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e3 mov    %esp -> %ebp 	[1, 1]
0x733204e5 push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e7 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204e9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ec push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733204ee call   $0x7332027a %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733204ee MSVCR90.dll:ismbblead ??:0
	Into 0x7332027a MSVCR90.dll:ismbcalpha ??:0
0x7332027a mov    %edi -> %edi 	[1, 1]
0x7332027c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332027d mov    %esp -> %ebp 	[1, 1]
0x7332027f sub    $0x00000010 %esp -> %esp 	[2, 1]
0x73320282 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73320285 lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x73320288 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73320288 MSVCR90.dll:ismbcalpha ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332028d MSVCR90.dll:ismbcalpha ??:0
0x7332028d movzx  0x0c(%ebp) -> %eax 	[1, 1]
0x73320291 mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73320294 mov    0x14(%ebp) -> %dl 	[1, 1]
0x73320297 test   0x1d(%ecx,%eax,1) %dl 	[2, 0]
0x7332029b jnz    $0x733202bb 	[1, 0]
0x7332029d cmp    0x10(%ebp) $0x00000000 	[2, 0]
0x733202a1 jz     $0x733202b5 	[1, 0]
0x733202b5 xor    %eax %eax -> %eax 	[2, 1]
0x733202b7 test   %eax %eax 	[2, 0]
0x733202b9 jz     $0x733202be 	[1, 0]
0x733202be cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x733202c2 jz     $0x733202cb 	[1, 0]
0x733202c4 mov    0xfffffff8(%ebp) -> %ecx 	[1, 1]
0x733202c7 and    $0xfffffffd 0x70(%ecx) -> 0x70(%ecx) 	[2, 1]
0x733202cb leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733202cc MSVCR90.dll:ismbcalpha ??:0
	Into 0x733204f3 MSVCR90.dll:ismbblead ??:0
0x733204f3 add    $0x00000010 %esp -> %esp 	[2, 1]
0x733204f6 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733204f7 MSVCR90.dll:ismbblead ??:0
	Into 0x73302f8c MSVCR90.dll:lock ??:0
0x73302f8c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73302f8d test   %eax %eax 	[2, 0]
0x73302f8f jz     $0x73302fa4 	[1, 0]
0x73302fa4 mov    0x0c(%ebp) -> %edx 	[1, 1]
0x73302fa7 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73302faa test   %bl %bl 	[2, 0]
0x73302fac jz     $0x73302fe0 	[1, 0]
0x73302fe0 dec    %esi -> %esi 	[1, 1]
JMP @  0x73302fe1 MSVCR90.dll:lock ??:0
	Into  0x73302fc6 MSVCR90.dll:lock ??:0
0x73302fc6 and    $0x00000000 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x73302fca cmp    (%esi) $0x00 	[2, 0]
0x73302fcd jz     $0x733030bc 	[1, 0]
0x733030bc mov    0x08(%ebp) -> %eax 	[1, 1]
0x733030bf pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733030c0 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x733030c1 test   %eax %eax 	[2, 0]
0x733030c3 jz     $0x733030c8 	[1, 0]

in dr_basic_block(tag=0x733030c5) 0 0 esp is 0x0012feec instr_count=4
0x733030c5 and    $0x00000000 (%eax) -> (%eax) 	[2, 1]
0x733030c8 inc    (%ecx) -> (%ecx) 	[1, 1]
0x733030ca leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733030cb MSVCR90.dll:lock ??:0
	Into 0x73303161 MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x73303161) 0 0 esp is 0x0012fef8 instr_count=7
0x73303161 mov    0xfffffff8(%ebp) -> %eax 	[1, 1]
0x73303164 add    $0x0000000c %esp -> %esp 	[2, 1]
0x73303167 dec    %eax -> %eax 	[1, 1]
0x73303168 mov    %eax -> 0x7337b6e0 	[1, 1]
0x7330316d mov    %esi -> 0x7337b6e4 	[1, 1]
0x73303173 xor    %eax %eax -> %eax 	[2, 1]
JMP @  0x73303175 MSVCR90.dll:lock ??:0
	Into  0x7330317a MSVCR90.dll:lock ??:0

in dr_basic_block(tag=0x7330317a) 0 0 esp is 0x0012ff04 instr_count=5
0x7330317a pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7330317b pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330317c pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7330317d leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x7330317e MSVCR90.dll:lock ??:0
	Into 0x733027b4 MSVCR90.dll:_getmainargs ??:0

in dr_basic_block(tag=0x733027b4) 0 0 esp is 0x0012ff24 instr_count=2
0x733027b4 test   %eax %eax 	[2, 0]
0x733027b6 jl     $0x733027d9 	[1, 0]

in dr_basic_block(tag=0x733027b8) 0 0 esp is 0x0012ff24 instr_count=11
0x733027b8 mov    0x7337b6e0 -> %edx 	[1, 1]
0x733027be mov    0x08(%ebp) -> %ecx 	[1, 1]
0x733027c1 mov    %edx -> (%ecx) 	[1, 1]
0x733027c3 mov    0x7337b6e4 -> %edx 	[1, 1]
0x733027c9 mov    0x0c(%ebp) -> %ecx 	[1, 1]
0x733027cc mov    %edx -> (%ecx) 	[1, 1]
0x733027ce mov    0x10(%ebp) -> %ecx 	[1, 1]
0x733027d1 mov    0x7337b6ec -> %edx 	[1, 1]
0x733027d7 mov    %edx -> (%ecx) 	[1, 1]
0x733027d9 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733027da MSVCR90.dll:_getmainargs ??:0
	Into 0x00401112 tttt0.exe:pre_cpp_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:326+0x27

in dr_basic_block(tag=0x00401112) 0 0 esp is 0x0012ff2c instr_count=4
0x00401112 add    $0x00000014 %esp -> %esp 	[2, 1]
0x00401115 mov    %eax -> 0x00403028 	[1, 1]
0x0040111a test   %eax %eax 	[2, 0]
0x0040111c jnl    $0x00401126 	[1, 0]

in dr_basic_block(tag=0x00401126) 0 0 esp is 0x0012ff40 instr_count=1
[RETURN @ ] 0x00401126 tttt0.exe:pre_cpp_init f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:333+0x0
	Into 0x73302201 MSVCR90.dll:initterm ??:0
0x73302201 add    $0x00000004 %esi -> %esi 	[2, 1]
0x73302204 cmp    %esi 0x0c(%ebp) 	[2, 0]
0x73302207 jb     $0x733021f9 	[1, 0]

in dr_basic_block(tag=0x73302209) 0 0 esp is 0x0012ff44 instr_count=3
0x73302209 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330220a pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330220b MSVCR90.dll:initterm ??:0
	Into 0x004011d8 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:497+0xf

in dr_basic_block(tag=0x004011d8) 0 0 esp is 0x0012ff50 instr_count=5
0x004011d8 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x004011d9 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x004011da mov    $0x00000002 -> 0x00403374 	[1, 1]
0x004011e4 cmp    0xffffffe4(%ebp) %ebx 	[2, 0]
0x004011e7 jnz    $0x004011f1 	[1, 0]

in dr_basic_block(tag=0x004011e9) 0 0 esp is 0x0012ff58 instr_count=3
0x004011e9 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004011ea push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004011eb call   0x00402034 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004011eb tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:506+0x2
	Into 0x7762c442 KERNEL32.dll:InterlockedExchange ??:0

in dr_basic_block(tag=0x004011f1) 0 0 esp is 0x0012ff58 instr_count=2
0x004011f1 cmp    0x00403384 %ebx 	[2, 0]
0x004011f7 jz     $0x00401212 	[1, 0]

in dr_basic_block(tag=0x00401212) 0 0 esp is 0x0012ff58 instr_count=7
0x00401212 mov    0x0040301c -> %eax 	[1, 1]
0x00401217 mov    0x00402088 -> %ecx 	[1, 1]
0x0040121d mov    %eax -> (%ecx) 	[1, 1]
0x0040121f push   0x0040301c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401225 push   0x00403020 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040122b push   0x00403018 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401231 call   $0x00401090 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401231 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:582+0x12
	Into 0x00401090 tttt0.exe:main c:\users\yw\desktop\tttt\tttt\tttt.cpp:39+0x0

in dr_basic_block(tag=0x00401090) 0 0 esp is 0x0012ff48 instr_count=9
0x00401090 sub    $0x0000001c %esp -> %esp 	[2, 1]
0x00401093 mov    0x00403000 -> %eax 	[1, 1]
0x00401098 xor    %esp %eax -> %eax 	[2, 1]
0x0040109a mov    %eax -> 0x18(%esp) 	[1, 1]
0x0040109e push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040109f lea    0x04(%esp) -> %eax 	[1, 1]
0x004010a3 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004010a4 push   $0x00402108 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004010a9 call   0x004020a4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004010a9 tttt0.exe:main c:\users\yw\desktop\tttt\tttt\tttt.cpp:43+0xa
	Into 0x733126d4 MSVCR90.dll:scanf ??:0

in dr_basic_block(tag=0x733126d4) 0 0 esp is 0x0012ff1c instr_count=9
0x733126d4 mov    %edi -> %edi 	[1, 1]
0x733126d6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733126d7 mov    %esp -> %ebp 	[1, 1]
0x733126d9 lea    0x0c(%ebp) -> %eax 	[1, 1]
0x733126dc push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733126dd push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733126df push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733126e2 push   $0x7332f148 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733126e7 call   $0x733162ea %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733126e7 MSVCR90.dll:scanf ??:0
	Into 0x733162ea MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x733162ea) 0 0 esp is 0x0012ff04 instr_count=3
0x733162ea push   $0x0000000c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733162ec push   $0x7336d060 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733162f1 call   $0x7334cf00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733162f1 MSVCR90.dll:wprintf_p ??:0
	Into 0x7334cf00 MSVCR90.dll:_dllonexit ??:0
0x7334cf00 push   $0x7334cf5e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf05 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf0c mov    0x10(%esp) -> %eax 	[1, 1]
0x7334cf10 mov    %ebp -> 0x10(%esp) 	[1, 1]
0x7334cf14 lea    0x10(%esp) -> %ebp 	[1, 1]
0x7334cf18 sub    %eax %esp -> %esp 	[2, 1]
0x7334cf1a push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1b push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1c push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1d mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334cf22 xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334cf25 xor    %ebp %eax -> %eax 	[2, 1]
0x7334cf27 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf28 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x7334cf2b push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf2e mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x7334cf31 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cf38 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x7334cf3b lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7334cf3e mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x7334cf44 MSVCR90.dll:_dllonexit ??:0
	Into 0x733162f6 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x733162f6) 0 0 esp is 0x0012fed4 instr_count=6
0x733162f6 xor    %eax %eax -> %eax 	[2, 1]
0x733162f8 xor    %esi %esi -> %esi 	[2, 1]
0x733162fa cmp    0x0c(%ebp) %esi 	[2, 0]
0x733162fd setnz  -> %al 	[0, 1]
0x73316300 cmp    %eax %esi 	[2, 0]
0x73316302 jnz    $0x73316321 	[1, 0]

in dr_basic_block(tag=0x73316321) 0 0 esp is 0x0012fed4 instr_count=1
0x73316321 call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316321 MSVCR90.dll:wprintf_p ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0

in dr_basic_block(tag=0x7330f1c3) 0 0 esp is 0x0012fed0 instr_count=2
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x73316326 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x73316326) 0 0 esp is 0x0012fed4 instr_count=3
0x73316326 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316327 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316328 call   $0x7330f2d7 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316328 MSVCR90.dll:wprintf_p ??:0
	Into 0x7330f2d7 MSVCR90.dll:lock_file ??:0

in dr_basic_block(tag=0x7330f2d7) 0 0 esp is 0x0012fec8 instr_count=6
0x7330f2d7 mov    %edi -> %edi 	[1, 1]
0x7330f2d9 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f2da mov    %esp -> %ebp 	[1, 1]
0x7330f2dc mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330f2df cmp    %eax $0x00000014 	[2, 0]
0x7330f2e2 jnl    $0x7330f2fa 	[1, 0]

in dr_basic_block(tag=0x7330f2e4) 0 0 esp is 0x0012fec4 instr_count=3
0x7330f2e4 add    $0x00000010 %eax -> %eax 	[2, 1]
0x7330f2e7 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f2e8 call   $0x73302efa %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f2e8 MSVCR90.dll:lock_file ??:0
	Into 0x73302efa MSVCR90.dll:lock ??:0
0x73302efa mov    %edi -> %edi 	[1, 1]
0x73302efc push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302efd mov    %esp -> %ebp 	[1, 1]
0x73302eff mov    0x08(%ebp) -> %eax 	[1, 1]
0x73302f02 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f03 lea    0x733770c0(,%eax,8) -> %esi 	[1, 1]
0x73302f0a cmp    (%esi) $0x00000000 	[2, 0]
0x73302f0d jnz    $0x73302f22 	[1, 0]
0x73302f22 push   (%esi) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f24 call   0x732e1048 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f24 MSVCR90.dll:lock ??:0
	Into 0x77867790 ntdll.dll:RtlEnterCriticalSection ??:0
0x73302f2a pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73302f2b pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302f2c MSVCR90.dll:lock ??:0
	Into 0x7330f2ed MSVCR90.dll:lock_file ??:0

in dr_basic_block(tag=0x7330f2ed) 0 0 esp is 0x0012fec0 instr_count=5
0x7330f2ed mov    0x0c(%ebp) -> %eax 	[1, 1]
0x7330f2f0 or     $0x00008000 0x0c(%eax) -> 0x0c(%eax) 	[2, 1]
0x7330f2f7 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f2f8 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330f2f9 MSVCR90.dll:lock_file ??:0
	Into 0x7331632d MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x7331632d) 0 0 esp is 0x0012fecc instr_count=7
0x7331632d pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331632e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331632f mov    %esi -> 0xfffffffc(%ebp) 	[1, 1]
0x73316332 push   0x14(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316335 push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316338 push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331633b call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331633b MSVCR90.dll:wprintf_p ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x73316340 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x73316340) 0 0 esp is 0x0012fec8 instr_count=2
0x73316340 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316341 call   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316341 MSVCR90.dll:wprintf_p ??:0
	Into 0x7332f148 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f148) 0 0 esp is 0x0012fec0 instr_count=23
0x7332f148 mov    %edi -> %edi 	[1, 1]
0x7332f14a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f14b mov    %esp -> %ebp 	[1, 1]
0x7332f14d sub    $0x000001fc %esp -> %esp 	[2, 1]
0x7332f153 mov    0x7337a2a8 -> %eax 	[1, 1]
0x7332f158 xor    %ebp %eax -> %eax 	[2, 1]
0x7332f15a mov    %eax -> 0xfffffffc(%ebp) 	[1, 1]
0x7332f15d mov    0x14(%ebp) -> %ecx 	[1, 1]
0x7332f160 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7332f163 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f164 xor    %esi %esi -> %esi 	[2, 1]
0x7332f166 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f167 mov    0x0c(%ebp) -> %edi 	[1, 1]
0x7332f16a mov    %ecx -> 0xfffffe1c(%ebp) 	[1, 1]
0x7332f170 lea    0xfffffe7c(%ebp) -> %ecx 	[1, 1]
0x7332f176 mov    %eax -> 0xfffffe64(%ebp) 	[1, 1]
0x7332f17c mov    %ecx -> 0xfffffe54(%ebp) 	[1, 1]
0x7332f182 mov    $0x0000015e -> 0xfffffe24(%ebp) 	[1, 1]
0x7332f18c mov    %esi -> 0xfffffe30(%ebp) 	[1, 1]
0x7332f192 mov    %esi -> 0xfffffe18(%ebp) 	[1, 1]
0x7332f198 mov    %esi -> 0xfffffe78(%ebp) 	[1, 1]
0x7332f19e cmp    %edi %esi 	[2, 0]
0x7332f1a0 jnz    $0x7332f1c2 	[1, 0]

in dr_basic_block(tag=0x7332f1c2) 0 0 esp is 0x0012fcb8 instr_count=2
0x7332f1c2 cmp    %eax %esi 	[2, 0]
0x7332f1c4 jz     $0x7332f1a2 	[1, 0]

in dr_basic_block(tag=0x7332f1c6) 0 0 esp is 0x0012fcb8 instr_count=3
0x7332f1c6 test   0x0c(%eax) $0x40 	[2, 0]
0x7332f1ca push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f1cb jnz    $0x7332f247 	[1, 0]

in dr_basic_block(tag=0x7332f1cd) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f1cd push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f1ce call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f1ce MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0

in dr_basic_block(tag=0x7330e9d0) 0 0 esp is 0x0012fcac instr_count=8
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]

in dr_basic_block(tag=0x7330e9fc) 0 0 esp is 0x0012fca4 instr_count=4
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7332f1d3 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f1d3) 0 0 esp is 0x0012fcb0 instr_count=4
0x7332f1d3 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332f1d4 mov    $0x7337a130 -> %edx 	[1, 1]
0x7332f1d9 cmp    %eax $0xffffffff 	[2, 0]
0x7332f1dc jz     $0x7332f1f9 	[1, 0]

in dr_basic_block(tag=0x7332f1de) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f1de cmp    %eax $0xfffffffe 	[2, 0]
0x7332f1e1 jz     $0x7332f1f9 	[1, 0]

in dr_basic_block(tag=0x7332f1e3) 0 0 esp is 0x0012fcb4 instr_count=7
0x7332f1e3 mov    %eax -> %ecx 	[1, 1]
0x7332f1e5 and    $0x0000001f %ecx -> %ecx 	[2, 1]
0x7332f1e8 mov    %eax -> %ebx 	[1, 1]
0x7332f1ea sar    $0x00000005 %ebx -> %ebx 	[2, 1]
0x7332f1ed shl    $0x00000006 %ecx -> %ecx 	[2, 1]
0x7332f1f0 add    0x7337d6a0(,%ebx,4) %ecx -> %ecx 	[2, 1]
JMP @  0x7332f1f7 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332f1fb MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f1fb) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f1fb test   0x24(%ecx) $0x7f 	[2, 0]
0x7332f1ff jnz    $0x7332f227 	[1, 0]

in dr_basic_block(tag=0x7332f201) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f201 cmp    %eax $0xffffffff 	[2, 0]
0x7332f204 jz     $0x7332f21f 	[1, 0]

in dr_basic_block(tag=0x7332f206) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f206 cmp    %eax $0xfffffffe 	[2, 0]
0x7332f209 jz     $0x7332f21f 	[1, 0]

in dr_basic_block(tag=0x7332f20b) 0 0 esp is 0x0012fcb4 instr_count=6
0x7332f20b mov    %eax -> %ecx 	[1, 1]
0x7332f20d and    $0x0000001f %eax -> %eax 	[2, 1]
0x7332f210 sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x7332f213 shl    $0x00000006 %eax -> %eax 	[2, 1]
0x7332f216 add    0x7337d6a0(,%ecx,4) %eax -> %eax 	[2, 1]
JMP @  0x7332f21d MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332f221 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f221) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f221 test   0x24(%eax) $0x80 	[2, 0]
0x7332f225 jz     $0x7332f247 	[1, 0]

in dr_basic_block(tag=0x7332f247) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f247 push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f24a lea    0xfffffe08(%ebp) -> %ecx 	[1, 1]
0x7332f250 call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f250 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7332f255 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f255) 0 0 esp is 0x0012fcb4 instr_count=6
0x7332f255 mov    (%edi) -> %al 	[1, 1]
0x7332f257 mov    $0x00 -> 0xfffffe63(%ebp) 	[1, 1]
0x7332f25e mov    %esi -> 0xfffffe74(%ebp) 	[1, 1]
0x7332f264 mov    %esi -> 0xfffffe3c(%ebp) 	[1, 1]
0x7332f26a test   %al %al 	[2, 0]
0x7332f26c jz     $0x733300d4 	[1, 0]

in dr_basic_block(tag=0x7332f272) 0 0 esp is 0x0012fcb4 instr_count=4
0x7332f272 mov    0xfffffe64(%ebp) -> %esi 	[1, 1]
0x7332f278 movzx  %al -> %eax 	[1, 1]
0x7332f27b push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f27c call   $0x7331c791 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f27c MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c791 MSVCR90.dll:isspace ??:0

in dr_basic_block(tag=0x7331c791) 0 0 esp is 0x0012fcac instr_count=5
0x7331c791 mov    %edi -> %edi 	[1, 1]
0x7331c793 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c794 mov    %esp -> %ebp 	[1, 1]
0x7331c796 cmp    0x7337c218 $0x00000000 	[2, 0]
0x7331c79d jnz    $0x7331c7b1 	[1, 0]

in dr_basic_block(tag=0x7331c79f) 0 0 esp is 0x0012fca8 instr_count=6
0x7331c79f mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c7a2 mov    0x7337a388 -> %ecx 	[1, 1]
0x7331c7a8 movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331c7ac and    $0x00000008 %eax -> %eax 	[2, 1]
0x7331c7af pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c7b0 MSVCR90.dll:isspace ??:0
	Into 0x7332f281 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f281) 0 0 esp is 0x0012fcb0 instr_count=3
0x7332f281 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332f282 test   %eax %eax 	[2, 0]
0x7332f284 jz     $0x7332f2b6 	[1, 0]

in dr_basic_block(tag=0x7332f2b6) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f2b6 mov    (%edi) -> %al 	[1, 1]
0x7332f2b8 cmp    %al $0x25 	[2, 0]
0x7332f2ba jnz    $0x7332ffe8 	[1, 0]

in dr_basic_block(tag=0x7332f2c0) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f2c0 cmp    0x01(%edi) %al 	[2, 0]
0x7332f2c3 jz     $0x7332ffda 	[1, 0]

in dr_basic_block(tag=0x7332f2c9) 0 0 esp is 0x0012fcb4 instr_count=19
0x7332f2c9 xor    %esi %esi -> %esi 	[2, 1]
0x7332f2cb mov    %esi -> 0xfffffe40(%ebp) 	[1, 1]
0x7332f2d1 mov    $0x00 -> 0xfffffe2f(%ebp) 	[1, 1]
0x7332f2d8 mov    %esi -> 0xfffffe58(%ebp) 	[1, 1]
0x7332f2de mov    %esi -> 0xfffffe4c(%ebp) 	[1, 1]
0x7332f2e4 mov    %esi -> 0xfffffe6c(%ebp) 	[1, 1]
0x7332f2ea mov    $0x00 -> 0xfffffe61(%ebp) 	[1, 1]
0x7332f2f1 mov    $0x00 -> 0xfffffe60(%ebp) 	[1, 1]
0x7332f2f8 mov    $0x00 -> 0xfffffe6a(%ebp) 	[1, 1]
0x7332f2ff mov    $0x00 -> 0xfffffe53(%ebp) 	[1, 1]
0x7332f306 mov    $0x00 -> 0xfffffe62(%ebp) 	[1, 1]
0x7332f30d mov    $0x00 -> 0xfffffe73(%ebp) 	[1, 1]
0x7332f314 mov    $0x01 -> 0xfffffe6b(%ebp) 	[1, 1]
0x7332f31b mov    %esi -> 0xfffffe28(%ebp) 	[1, 1]
0x7332f321 inc    %edi -> %edi 	[1, 1]
0x7332f322 movzx  (%edi) -> %ebx 	[1, 1]
0x7332f325 movzx  %bl -> %eax 	[1, 1]
0x7332f328 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f329 call   $0x7331c678 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f329 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c678 MSVCR90.dll:isdigit ??:0

in dr_basic_block(tag=0x7331c678) 0 0 esp is 0x0012fcac instr_count=5
0x7331c678 mov    %edi -> %edi 	[1, 1]
0x7331c67a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c67b mov    %esp -> %ebp 	[1, 1]
0x7331c67d cmp    0x7337c218 $0x00000000 	[2, 0]
0x7331c684 jnz    $0x7331c698 	[1, 0]

in dr_basic_block(tag=0x7331c686) 0 0 esp is 0x0012fca8 instr_count=6
0x7331c686 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c689 mov    0x7337a388 -> %ecx 	[1, 1]
0x7331c68f movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331c693 and    $0x00000004 %eax -> %eax 	[2, 1]
0x7331c696 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c697 MSVCR90.dll:isdigit ??:0
	Into 0x7332f32e MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f32e) 0 0 esp is 0x0012fcb0 instr_count=3
0x7332f32e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332f32f test   %eax %eax 	[2, 0]
0x7332f331 jz     $0x7332f351 	[1, 0]

in dr_basic_block(tag=0x7332f351) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f351 cmp    %ebx $0x0000004e 	[2, 0]
0x7332f354 jnle   $0x7332f3dd 	[1, 0]

in dr_basic_block(tag=0x7332f3dd) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f3dd cmp    %ebx $0x00000068 	[2, 0]
0x7332f3e0 jz     $0x7332f40a 	[1, 0]

in dr_basic_block(tag=0x7332f3e2) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f3e2 cmp    %ebx $0x0000006c 	[2, 0]
0x7332f3e5 jz     $0x7332f3f4 	[1, 0]

in dr_basic_block(tag=0x7332f3e7) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f3e7 cmp    %ebx $0x00000077 	[2, 0]
0x7332f3ea jz     $0x7332f402 	[1, 0]

in dr_basic_block(tag=0x7332f3ec) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f3ec inc    0xfffffe53(%ebp) -> 0xfffffe53(%ebp) 	[1, 1]
JMP @  0x7332f3f2 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332f416 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f416) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f416 cmp    0xfffffe53(%ebp) $0x00 	[2, 0]
0x7332f41d jz     $0x7332f321 	[1, 0]

in dr_basic_block(tag=0x7332f423) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f423 cmp    0xfffffe6a(%ebp) $0x00 	[2, 0]
0x7332f42a mov    %edi -> 0xfffffe48(%ebp) 	[1, 1]
0x7332f430 jnz    $0x7332f44b 	[1, 0]

in dr_basic_block(tag=0x7332f432) 0 0 esp is 0x0012fcb4 instr_count=6
0x7332f432 mov    0xfffffe1c(%ebp) -> %eax 	[1, 1]
0x7332f438 mov    (%eax) -> %esi 	[1, 1]
0x7332f43a mov    %eax -> 0xfffffe04(%ebp) 	[1, 1]
0x7332f440 add    $0x00000004 %eax -> %eax 	[2, 1]
0x7332f443 mov    %eax -> 0xfffffe1c(%ebp) 	[1, 1]
JMP @  0x7332f449 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332f44d MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f44d) 0 0 esp is 0x0012fcb4 instr_count=4
0x7332f44d xor    %bl %bl -> %bl 	[2, 1]
0x7332f44f mov    %esi -> 0xfffffe44(%ebp) 	[1, 1]
0x7332f455 cmp    0xfffffe73(%ebp) %bl 	[2, 0]
0x7332f45b jnz    $0x7332f475 	[1, 0]

in dr_basic_block(tag=0x7332f45d) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f45d mov    (%edi) -> %al 	[1, 1]
0x7332f45f cmp    %al $0x53 	[2, 0]
0x7332f461 jz     $0x7332f46e 	[1, 0]

in dr_basic_block(tag=0x7332f463) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f463 mov    $0xff -> 0xfffffe73(%ebp) 	[1, 1]
0x7332f46a cmp    %al $0x43 	[2, 0]
0x7332f46c jnz    $0x7332f475 	[1, 0]

in dr_basic_block(tag=0x7332f475) 0 0 esp is 0x0012fcb4 instr_count=5
0x7332f475 movzx  (%edi) -> %eax 	[1, 1]
0x7332f478 or     $0x00000020 %eax -> %eax 	[2, 1]
0x7332f47b mov    %eax -> 0xfffffe5c(%ebp) 	[1, 1]
0x7332f481 cmp    %eax $0x0000006e 	[2, 0]
0x7332f484 jz     $0x7332f4d0 	[1, 0]

in dr_basic_block(tag=0x7332f486) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f486 cmp    %eax $0x00000063 	[2, 0]
0x7332f489 jz     $0x7332f4a4 	[1, 0]

in dr_basic_block(tag=0x7332f48b) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f48b cmp    %eax $0x0000007b 	[2, 0]
0x7332f48e jz     $0x7332f4a4 	[1, 0]

in dr_basic_block(tag=0x7332f490) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f490 push   0xfffffe64(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f496 lea    0xfffffe74(%ebp) -> %esi 	[1, 1]
0x7332f49c call   $0x7332f119 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f49c MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7332f119 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f119) 0 0 esp is 0x0012fcac instr_count=7
0x7332f119 mov    %edi -> %edi 	[1, 1]
0x7332f11b push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f11c mov    %esp -> %ebp 	[1, 1]
0x7332f11e push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f11f mov    0x08(%ebp) -> %edx 	[1, 1]
0x7332f122 inc    (%esi) -> (%esi) 	[1, 1]
0x7332f124 call   $0x73330101 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f124 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73330101 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73330101) 0 0 esp is 0x0012fca0 instr_count=2
0x73330101 dec    0x04(%edx) -> 0x04(%edx) 	[1, 1]
0x73330104 js     $0x7333010f 	[1, 0]

in dr_basic_block(tag=0x7333010f) 0 0 esp is 0x0012fca0 instr_count=2
0x7333010f push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73330110 call   $0x7330ef55 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73330110 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7330ef55 MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330ef55) 0 0 esp is 0x0012fc98 instr_count=9
0x7330ef55 mov    %edi -> %edi 	[1, 1]
0x7330ef57 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330ef58 mov    %esp -> %ebp 	[1, 1]
0x7330ef5a push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330ef5b mov    0x08(%ebp) -> %esi 	[1, 1]
0x7330ef5e push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330ef5f xor    %edi %edi -> %edi 	[2, 1]
0x7330ef61 cmp    %esi %edi 	[2, 0]
0x7330ef63 jnz    $0x7330ef82 	[1, 0]

in dr_basic_block(tag=0x7330ef82) 0 0 esp is 0x0012fc8c instr_count=3
0x7330ef82 mov    0x0c(%esi) -> %eax 	[1, 1]
0x7330ef85 test   %al $0x83 	[2, 0]
0x7330ef87 jz     $0x7330f079 	[1, 0]

in dr_basic_block(tag=0x7330ef8d) 0 0 esp is 0x0012fc8c instr_count=2
0x7330ef8d test   %al $0x40 	[2, 0]
0x7330ef8f jnz    $0x7330f079 	[1, 0]

in dr_basic_block(tag=0x7330ef95) 0 0 esp is 0x0012fc8c instr_count=2
0x7330ef95 test   %al $0x02 	[2, 0]
0x7330ef97 jz     $0x7330efa4 	[1, 0]

in dr_basic_block(tag=0x7330efa4) 0 0 esp is 0x0012fc8c instr_count=4
0x7330efa4 or     $0x00000001 %eax -> %eax 	[2, 1]
0x7330efa7 mov    %eax -> 0x0c(%esi) 	[1, 1]
0x7330efaa test   %eax $0x0000010c 	[2, 0]
0x7330efaf jnz    $0x7330efba 	[1, 0]

in dr_basic_block(tag=0x7330efba) 0 0 esp is 0x0012fc8c instr_count=6
0x7330efba mov    0x08(%esi) -> %eax 	[1, 1]
0x7330efbd mov    %eax -> (%esi) 	[1, 1]
0x7330efbf push   0x18(%esi) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330efc2 push   0x08(%esi) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330efc5 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330efc6 call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330efc6 MSVCR90.dll:filbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330efcb MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330efcb) 0 0 esp is 0x0012fc80 instr_count=3
0x7330efcb pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330efcc push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330efcd call   $0x733492b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330efcd MSVCR90.dll:filbuf ??:0
	Into 0x733492b6 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x733492b6) 0 0 esp is 0x0012fc7c instr_count=3
0x733492b6 push   $0x00000010 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733492b8 push   $0x7336d890 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733492bd call   $0x7334cf00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733492bd MSVCR90.dll:read ??:0
	Into 0x7334cf00 MSVCR90.dll:_dllonexit ??:0
0x7334cf00 push   $0x7334cf5e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf05 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf0c mov    0x10(%esp) -> %eax 	[1, 1]
0x7334cf10 mov    %ebp -> 0x10(%esp) 	[1, 1]
0x7334cf14 lea    0x10(%esp) -> %ebp 	[1, 1]
0x7334cf18 sub    %eax %esp -> %esp 	[2, 1]
0x7334cf1a push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1b push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1c push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1d mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334cf22 xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334cf25 xor    %ebp %eax -> %eax 	[2, 1]
0x7334cf27 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf28 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x7334cf2b push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf2e mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x7334cf31 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cf38 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x7334cf3b lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7334cf3e mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x7334cf44 MSVCR90.dll:_dllonexit ??:0
	Into 0x733492c2 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x733492c2) 0 0 esp is 0x0012fc48 instr_count=3
0x733492c2 mov    0x08(%ebp) -> %eax 	[1, 1]
0x733492c5 cmp    %eax $0xfffffffe 	[2, 0]
0x733492c8 jnz    $0x733492e5 	[1, 0]

in dr_basic_block(tag=0x733492e5) 0 0 esp is 0x0012fc48 instr_count=3
0x733492e5 xor    %esi %esi -> %esi 	[2, 1]
0x733492e7 cmp    %eax %esi 	[2, 0]
0x733492e9 jl     $0x733492f3 	[1, 0]

in dr_basic_block(tag=0x733492eb) 0 0 esp is 0x0012fc48 instr_count=2
0x733492eb cmp    %eax 0x7337d688 	[2, 0]
0x733492f1 jb     $0x73349314 	[1, 0]

in dr_basic_block(tag=0x73349314) 0 0 esp is 0x0012fc48 instr_count=10
0x73349314 mov    %eax -> %ecx 	[1, 1]
0x73349316 sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x73349319 lea    0x7337d6a0(,%ecx,4) -> %ebx 	[1, 1]
0x73349320 mov    %eax -> %edi 	[1, 1]
0x73349322 and    $0x0000001f %edi -> %edi 	[2, 1]
0x73349325 shl    $0x00000006 %edi -> %edi 	[2, 1]
0x73349328 mov    (%ebx) -> %ecx 	[1, 1]
0x7334932a movsx  0x04(%ecx,%edi,1) -> %ecx 	[1, 1]
0x7334932f and    $0x00000001 %ecx -> %ecx 	[2, 1]
0x73349332 jz     $0x733492f3 	[1, 0]

in dr_basic_block(tag=0x73349334) 0 0 esp is 0x0012fc48 instr_count=5
0x73349334 mov    $0x7fffffff -> %ecx 	[1, 1]
0x73349339 cmp    %ecx 0x10(%ebp) 	[2, 0]
0x7334933c sbb    %ecx %ecx -> %ecx 	[2, 1]
0x7334933e inc    %ecx -> %ecx 	[1, 1]
0x7334933f jnz    $0x73349355 	[1, 0]

in dr_basic_block(tag=0x73349355) 0 0 esp is 0x0012fc48 instr_count=2
0x73349355 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73349356 call   $0x7334a46c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73349356 MSVCR90.dll:read ??:0
	Into 0x7334a46c MSVCR90.dll:get_osfhandle ??:0

in dr_basic_block(tag=0x7334a46c) 0 0 esp is 0x0012fc40 instr_count=3
0x7334a46c push   $0x0000000c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334a46e push   $0x7336d958 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334a473 call   $0x7334cf00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334a473 MSVCR90.dll:get_osfhandle ??:0
	Into 0x7334cf00 MSVCR90.dll:_dllonexit ??:0
0x7334cf00 push   $0x7334cf5e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf05 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf0c mov    0x10(%esp) -> %eax 	[1, 1]
0x7334cf10 mov    %ebp -> 0x10(%esp) 	[1, 1]
0x7334cf14 lea    0x10(%esp) -> %ebp 	[1, 1]
0x7334cf18 sub    %eax %esp -> %esp 	[2, 1]
0x7334cf1a push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1b push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1c push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1d mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334cf22 xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334cf25 xor    %ebp %eax -> %eax 	[2, 1]
0x7334cf27 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf28 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x7334cf2b push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf2e mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x7334cf31 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cf38 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x7334cf3b lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7334cf3e mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x7334cf44 MSVCR90.dll:_dllonexit ??:0
	Into 0x7334a478 MSVCR90.dll:get_osfhandle ??:0

in dr_basic_block(tag=0x7334a478) 0 0 esp is 0x0012fc10 instr_count=11
0x7334a478 mov    0x08(%ebp) -> %edi 	[1, 1]
0x7334a47b mov    %edi -> %eax 	[1, 1]
0x7334a47d sar    $0x00000005 %eax -> %eax 	[2, 1]
0x7334a480 mov    %edi -> %esi 	[1, 1]
0x7334a482 and    $0x0000001f %esi -> %esi 	[2, 1]
0x7334a485 shl    $0x00000006 %esi -> %esi 	[2, 1]
0x7334a488 add    0x7337d6a0(,%eax,4) %esi -> %esi 	[2, 1]
0x7334a48f mov    $0x00000001 -> 0xffffffe4(%ebp) 	[1, 1]
0x7334a496 xor    %ebx %ebx -> %ebx 	[2, 1]
0x7334a498 cmp    0x08(%esi) %ebx 	[2, 0]
0x7334a49b jnz    $0x7334a4d3 	[1, 0]

in dr_basic_block(tag=0x7334a4d3) 0 0 esp is 0x0012fc10 instr_count=2
0x7334a4d3 cmp    0xffffffe4(%ebp) %ebx 	[2, 0]
0x7334a4d6 jz     $0x7334a4f5 	[1, 0]

in dr_basic_block(tag=0x7334a4d8) 0 0 esp is 0x0012fc10 instr_count=8
0x7334a4d8 mov    %edi -> %eax 	[1, 1]
0x7334a4da sar    $0x00000005 %eax -> %eax 	[2, 1]
0x7334a4dd and    $0x0000001f %edi -> %edi 	[2, 1]
0x7334a4e0 shl    $0x00000006 %edi -> %edi 	[2, 1]
0x7334a4e3 mov    0x7337d6a0(,%eax,4) -> %eax 	[1, 1]
0x7334a4ea lea    0x0c(%eax,%edi,1) -> %eax 	[1, 1]
0x7334a4ee push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334a4ef call   0x732e1048 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334a4ef MSVCR90.dll:get_osfhandle ??:0
	Into 0x77867790 ntdll.dll:RtlEnterCriticalSection ??:0

in dr_basic_block(tag=0x7334a4f5) 0 0 esp is 0x0012fc10 instr_count=2
0x7334a4f5 mov    0xffffffe4(%ebp) -> %eax 	[1, 1]
0x7334a4f8 call   $0x7334cf45 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334a4f8 MSVCR90.dll:get_osfhandle ??:0
	Into 0x7334cf45 MSVCR90.dll:_dllonexit ??:0
0x7334cf45 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7334cf48 mov    %ecx -> %fs:0x00 	[1, 1]
0x7334cf4f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cf50 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf51 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf52 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cf53 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cf54 mov    %ebp -> %esp 	[1, 1]
0x7334cf56 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x7334cf57 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x7334cf58 MSVCR90.dll:_dllonexit ??:0
	Into 0x7334a4fd MSVCR90.dll:get_osfhandle ??:0

in dr_basic_block(tag=0x7334a4fd) 0 0 esp is 0x0012fc40 instr_count=1
[RETURN @ ] 0x7334a4fd MSVCR90.dll:get_osfhandle ??:0
	Into 0x7334935b MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x7334935b) 0 0 esp is 0x0012fc44 instr_count=5
0x7334935b pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334935c mov    %esi -> 0xfffffffc(%ebp) 	[1, 1]
0x7334935f mov    (%ebx) -> %eax 	[1, 1]
0x73349361 test   0x04(%eax,%edi,1) $0x01 	[2, 0]
0x73349366 jz     $0x7334937e 	[1, 0]

in dr_basic_block(tag=0x73349368) 0 0 esp is 0x0012fc48 instr_count=4
0x73349368 push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334936b push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334936e push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73349371 call   $0x73348cef %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73349371 MSVCR90.dll:read ??:0
	Into 0x73348cef MSVCR90.dll:wsopen_s ??:0

in dr_basic_block(tag=0x73348cef) 0 0 esp is 0x0012fc38 instr_count=13
0x73348cef mov    %edi -> %edi 	[1, 1]
0x73348cf1 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348cf2 mov    %esp -> %ebp 	[1, 1]
0x73348cf4 sub    $0x0000001c %esp -> %esp 	[2, 1]
0x73348cf7 mov    0x10(%ebp) -> %edx 	[1, 1]
0x73348cfa push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348cfb mov    0x08(%ebp) -> %esi 	[1, 1]
0x73348cfe push   $0xfffffffe %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348d00 pop    %esp (%esp) -> %eax %esp 	[2, 2]
0x73348d01 mov    %eax -> 0xffffffec(%ebp) 	[1, 1]
0x73348d04 mov    %edx -> 0xffffffe4(%ebp) 	[1, 1]
0x73348d07 cmp    %esi %eax 	[2, 0]
0x73348d09 jnz    $0x73348d26 	[1, 0]

in dr_basic_block(tag=0x73348d26) 0 0 esp is 0x0012fc14 instr_count=4
0x73348d26 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348d27 xor    %ebx %ebx -> %ebx 	[2, 1]
0x73348d29 cmp    %esi %ebx 	[2, 0]
0x73348d2b jl     $0x73348d35 	[1, 0]

in dr_basic_block(tag=0x73348d2d) 0 0 esp is 0x0012fc10 instr_count=2
0x73348d2d cmp    %esi 0x7337d688 	[2, 0]
0x73348d33 jb     $0x73348d5c 	[1, 0]

in dr_basic_block(tag=0x73348d5c) 0 0 esp is 0x0012fc10 instr_count=11
0x73348d5c mov    %esi -> %eax 	[1, 1]
0x73348d5e sar    $0x00000005 %eax -> %eax 	[2, 1]
0x73348d61 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348d62 lea    0x7337d6a0(,%eax,4) -> %edi 	[1, 1]
0x73348d69 mov    (%edi) -> %eax 	[1, 1]
0x73348d6b and    $0x0000001f %esi -> %esi 	[2, 1]
0x73348d6e shl    $0x00000006 %esi -> %esi 	[2, 1]
0x73348d71 add    %esi %eax -> %eax 	[2, 1]
0x73348d73 mov    0x04(%eax) -> %cl 	[1, 1]
0x73348d76 test   %cl $0x01 	[2, 0]
0x73348d79 jnz    $0x73348d8f 	[1, 0]

in dr_basic_block(tag=0x73348d8f) 0 0 esp is 0x0012fc0c instr_count=2
0x73348d8f cmp    %edx $0x7fffffff 	[2, 0]
0x73348d95 jnbe   $0x73348de7 	[1, 0]

in dr_basic_block(tag=0x73348d97) 0 0 esp is 0x0012fc0c instr_count=3
0x73348d97 mov    %ebx -> 0xfffffff0(%ebp) 	[1, 1]
0x73348d9a cmp    %edx %ebx 	[2, 0]
0x73348d9c jz     $0x733492aa 	[1, 0]

in dr_basic_block(tag=0x73348da2) 0 0 esp is 0x0012fc0c instr_count=2
0x73348da2 test   %cl $0x02 	[2, 0]
0x73348da5 jnz    $0x733492aa 	[1, 0]

in dr_basic_block(tag=0x73348dab) 0 0 esp is 0x0012fc0c instr_count=2
0x73348dab cmp    0x0c(%ebp) %ebx 	[2, 0]
0x73348dae jz     $0x73348de7 	[1, 0]

in dr_basic_block(tag=0x73348db0) 0 0 esp is 0x0012fc0c instr_count=9
0x73348db0 mov    0x24(%eax) -> %al 	[1, 1]
0x73348db3 add    %al %al -> %al 	[2, 1]
0x73348db5 sar    $0x01 %al -> %al 	[2, 1]
0x73348db7 mov    %al -> 0xfffffffe(%ebp) 	[1, 1]
0x73348dba movsx  %al -> %eax 	[1, 1]
0x73348dbd dec    %eax -> %eax 	[1, 1]
0x73348dbe push   $0x00000004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348dc0 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73348dc1 jz     $0x73348ddf 	[1, 0]

in dr_basic_block(tag=0x73348dc3) 0 0 esp is 0x0012fc0c instr_count=2
0x73348dc3 dec    %eax -> %eax 	[1, 1]
0x73348dc4 jnz    $0x73348dd4 	[1, 0]

in dr_basic_block(tag=0x73348dd4) 0 0 esp is 0x0012fc0c instr_count=3
0x73348dd4 mov    0x0c(%ebp) -> %eax 	[1, 1]
0x73348dd7 mov    %eax -> 0xfffffff4(%ebp) 	[1, 1]
JMP @  0x73348dda MSVCR90.dll:wsopen_s ??:0
	Into  0x73348e60 MSVCR90.dll:wsopen_s ??:0

in dr_basic_block(tag=0x73348e60) 0 0 esp is 0x0012fc0c instr_count=4
0x73348e60 mov    (%edi) -> %ecx 	[1, 1]
0x73348e62 add    %esi %ecx -> %ecx 	[2, 1]
0x73348e64 test   0x04(%ecx) $0x48 	[2, 0]
0x73348e68 jz     $0x73348ede 	[1, 0]

in dr_basic_block(tag=0x73348e6a) 0 0 esp is 0x0012fc0c instr_count=3
0x73348e6a mov    0x05(%ecx) -> %cl 	[1, 1]
0x73348e6d cmp    %cl $0x0a 	[2, 0]
0x73348e70 jz     $0x73348ede 	[1, 0]

in dr_basic_block(tag=0x73348ede) 0 0 esp is 0x0012fc0c instr_count=8
0x73348ede push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348edf lea    0xffffffe8(%ebp) -> %ecx 	[1, 1]
0x73348ee2 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348ee3 push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348ee6 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348ee7 mov    (%edi) -> %eax 	[1, 1]
0x73348ee9 push   (%esi,%eax,1) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73348eec call   0x732e111c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73348eec MSVCR90.dll:wsopen_s ??:0
	Into 0x77629bae KERNEL32.dll:ReadFile ??:0
-------------------------------------------
0x73348eec call KERNEL32.dll:ReadFile 0x77629bae and return 0x73348ef2
-------------------------------------------
Buffer address 0x7337c660
Buffer size 0x00001000
Function return status 0x00000001
Read Size 0x00000006

in dr_basic_block(tag=0x73348ef2) 0 0 esp is 0x0012fc0c instr_count=2
0x73348ef2 test   %eax %eax 	[2, 0]
0x73348ef4 jz     $0x73349275 	[1, 0]

in dr_basic_block(tag=0x73348efa) 0 0 esp is 0x0012fc0c instr_count=3
0x73348efa mov    0xffffffe8(%ebp) -> %ecx 	[1, 1]
0x73348efd cmp    %ecx %ebx 	[2, 0]
0x73348eff jl     $0x73349275 	[1, 0]

in dr_basic_block(tag=0x73348f05) 0 0 esp is 0x0012fc0c instr_count=2
0x73348f05 cmp    %ecx 0x10(%ebp) 	[2, 0]
0x73348f08 jnbe   $0x73349275 	[1, 0]

in dr_basic_block(tag=0x73348f0e) 0 0 esp is 0x0012fc0c instr_count=5
0x73348f0e mov    (%edi) -> %eax 	[1, 1]
0x73348f10 add    %ecx 0xfffffff0(%ebp) -> 0xfffffff0(%ebp) 	[2, 1]
0x73348f13 lea    0x04(%esi,%eax,1) -> %eax 	[1, 1]
0x73348f17 test   (%eax) $0x80 	[2, 0]
0x73348f1a jz     $0x73349106 	[1, 0]

in dr_basic_block(tag=0x73348f20) 0 0 esp is 0x0012fc0c instr_count=2
0x73348f20 cmp    0xfffffffe(%ebp) $0x02 	[2, 0]
0x73348f24 jz     $0x73349140 	[1, 0]

in dr_basic_block(tag=0x73348f2a) 0 0 esp is 0x0012fc0c instr_count=2
0x73348f2a cmp    %ecx %ebx 	[2, 0]
0x73348f2c jz     $0x73348f3b 	[1, 0]

in dr_basic_block(tag=0x73348f2e) 0 0 esp is 0x0012fc0c instr_count=3
0x73348f2e mov    0xfffffff4(%ebp) -> %ecx 	[1, 1]
0x73348f31 cmp    (%ecx) $0x0a 	[2, 0]
0x73348f34 jnz    $0x73348f3b 	[1, 0]

in dr_basic_block(tag=0x73348f3b) 0 0 esp is 0x0012fc0c instr_count=8
0x73348f3b and    $0xfb (%eax) -> (%eax) 	[2, 1]
0x73348f3e mov    0xfffffff4(%ebp) -> %ebx 	[1, 1]
0x73348f41 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73348f44 add    %ebx %eax -> %eax 	[2, 1]
0x73348f46 mov    %ebx -> 0x10(%ebp) 	[1, 1]
0x73348f49 mov    %eax -> 0xfffffff0(%ebp) 	[1, 1]
0x73348f4c cmp    %ebx %eax 	[2, 0]
0x73348f4e jnb    $0x73349024 	[1, 0]

in dr_basic_block(tag=0x73348f54) 0 0 esp is 0x0012fc0c instr_count=4
0x73348f54 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73348f57 mov    (%ecx) -> %al 	[1, 1]
	$$$$ taint mem:0x7337c660 ---> reg:49  $$$$
0x73348f59 cmp    %al $0x1a 	[2, 0]
0x73348f5b jz     $0x7334900f 	[1, 0]

in dr_basic_block(tag=0x73348f61) 0 0 esp is 0x0012fc0c instr_count=2
0x73348f61 cmp    %al $0x0d 	[2, 0]
0x73348f63 jz     $0x73348f71 	[1, 0]

in dr_basic_block(tag=0x73348f65) 0 0 esp is 0x0012fc0c instr_count=5
0x73348f65 mov    %al -> (%ebx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x7337c660  $$$$
0x73348f67 inc    %ebx -> %ebx 	[1, 1]
0x73348f68 inc    %ecx -> %ecx 	[1, 1]
0x73348f69 mov    %ecx -> 0x10(%ebp) 	[1, 1]
JMP @  0x73348f6c MSVCR90.dll:wsopen_s ??:0
	Into  0x73349001 MSVCR90.dll:wsopen_s ??:0

in dr_basic_block(tag=0x73349001) 0 0 esp is 0x0012fc0c instr_count=3
0x73349001 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73349004 cmp    0x10(%ebp) %eax 	[2, 0]
0x73349007 jb     $0x73348f54 	[1, 0]
0x73348f54 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73348f57 mov    (%ecx) -> %al 	[1, 1]
	$$$$ taint mem:0x7337c661 ---> reg:49  $$$$
0x73348f59 cmp    %al $0x1a 	[2, 0]
0x73348f5b jz     $0x7334900f 	[1, 0]
0x73348f61 cmp    %al $0x0d 	[2, 0]
0x73348f63 jz     $0x73348f71 	[1, 0]
0x73348f65 mov    %al -> (%ebx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x7337c661  $$$$
0x73348f67 inc    %ebx -> %ebx 	[1, 1]
0x73348f68 inc    %ecx -> %ecx 	[1, 1]
0x73348f69 mov    %ecx -> 0x10(%ebp) 	[1, 1]
JMP @  0x73348f6c MSVCR90.dll:wsopen_s ??:0
	Into  0x73349001 MSVCR90.dll:wsopen_s ??:0
0x73349001 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73349004 cmp    0x10(%ebp) %eax 	[2, 0]
0x73349007 jb     $0x73348f54 	[1, 0]
0x73348f54 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73348f57 mov    (%ecx) -> %al 	[1, 1]
	$$$$ taint mem:0x7337c662 ---> reg:49  $$$$
0x73348f59 cmp    %al $0x1a 	[2, 0]
0x73348f5b jz     $0x7334900f 	[1, 0]
0x73348f61 cmp    %al $0x0d 	[2, 0]
0x73348f63 jz     $0x73348f71 	[1, 0]
0x73348f65 mov    %al -> (%ebx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x7337c662  $$$$
0x73348f67 inc    %ebx -> %ebx 	[1, 1]
0x73348f68 inc    %ecx -> %ecx 	[1, 1]
0x73348f69 mov    %ecx -> 0x10(%ebp) 	[1, 1]
JMP @  0x73348f6c MSVCR90.dll:wsopen_s ??:0
	Into  0x73349001 MSVCR90.dll:wsopen_s ??:0
0x73349001 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73349004 cmp    0x10(%ebp) %eax 	[2, 0]
0x73349007 jb     $0x73348f54 	[1, 0]
0x73348f54 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73348f57 mov    (%ecx) -> %al 	[1, 1]
	$$$$ taint mem:0x7337c663 ---> reg:49  $$$$
0x73348f59 cmp    %al $0x1a 	[2, 0]
0x73348f5b jz     $0x7334900f 	[1, 0]
0x73348f61 cmp    %al $0x0d 	[2, 0]
0x73348f63 jz     $0x73348f71 	[1, 0]
0x73348f65 mov    %al -> (%ebx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x7337c663  $$$$
0x73348f67 inc    %ebx -> %ebx 	[1, 1]
0x73348f68 inc    %ecx -> %ecx 	[1, 1]
0x73348f69 mov    %ecx -> 0x10(%ebp) 	[1, 1]
JMP @  0x73348f6c MSVCR90.dll:wsopen_s ??:0
	Into  0x73349001 MSVCR90.dll:wsopen_s ??:0
0x73349001 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73349004 cmp    0x10(%ebp) %eax 	[2, 0]
0x73349007 jb     $0x73348f54 	[1, 0]
0x73348f54 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73348f57 mov    (%ecx) -> %al 	[1, 1]
	$$$$ taint mem:0x7337c664 ---> reg:49  $$$$
0x73348f59 cmp    %al $0x1a 	[2, 0]
0x73348f5b jz     $0x7334900f 	[1, 0]
0x73348f61 cmp    %al $0x0d 	[2, 0]
0x73348f63 jz     $0x73348f71 	[1, 0]
0x73348f65 mov    %al -> (%ebx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x7337c664  $$$$
0x73348f67 inc    %ebx -> %ebx 	[1, 1]
0x73348f68 inc    %ecx -> %ecx 	[1, 1]
0x73348f69 mov    %ecx -> 0x10(%ebp) 	[1, 1]
JMP @  0x73348f6c MSVCR90.dll:wsopen_s ??:0
	Into  0x73349001 MSVCR90.dll:wsopen_s ??:0
0x73349001 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73349004 cmp    0x10(%ebp) %eax 	[2, 0]
0x73349007 jb     $0x73348f54 	[1, 0]
0x73348f54 mov    0x10(%ebp) -> %ecx 	[1, 1]
0x73348f57 mov    (%ecx) -> %al 	[1, 1]
	$$$$ taint mem:0x7337c665 ---> reg:49  $$$$
0x73348f59 cmp    %al $0x1a 	[2, 0]
0x73348f5b jz     $0x7334900f 	[1, 0]
0x73348f61 cmp    %al $0x0d 	[2, 0]
0x73348f63 jz     $0x73348f71 	[1, 0]
0x73348f65 mov    %al -> (%ebx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x7337c665  $$$$
0x73348f67 inc    %ebx -> %ebx 	[1, 1]
0x73348f68 inc    %ecx -> %ecx 	[1, 1]
0x73348f69 mov    %ecx -> 0x10(%ebp) 	[1, 1]
JMP @  0x73348f6c MSVCR90.dll:wsopen_s ??:0
	Into  0x73349001 MSVCR90.dll:wsopen_s ??:0
0x73349001 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x73349004 cmp    0x10(%ebp) %eax 	[2, 0]
0x73349007 jb     $0x73348f54 	[1, 0]

in dr_basic_block(tag=0x7334900d) 0 0 esp is 0x0012fc0c instr_count=1
JMP @  0x7334900d MSVCR90.dll:wsopen_s ??:0
	Into  0x73349024 MSVCR90.dll:wsopen_s ??:0

in dr_basic_block(tag=0x73349024) 0 0 esp is 0x0012fc0c instr_count=5
0x73349024 mov    %ebx -> %eax 	[1, 1]
0x73349026 sub    0xfffffff4(%ebp) %eax -> %eax 	[2, 1]
0x73349029 cmp    0xfffffffe(%ebp) $0x01 	[2, 0]
0x7334902d mov    %eax -> 0xfffffff0(%ebp) 	[1, 1]
0x73349030 jnz    $0x73349106 	[1, 0]

in dr_basic_block(tag=0x73349106) 0 0 esp is 0x0012fc0c instr_count=3
0x73349106 mov    0xfffffff4(%ebp) -> %eax 	[1, 1]
0x73349109 cmp    %eax 0x0c(%ebp) 	[2, 0]
0x7334910c jz     $0x73349115 	[1, 0]

in dr_basic_block(tag=0x73349115) 0 0 esp is 0x0012fc0c instr_count=3
0x73349115 mov    0xffffffec(%ebp) -> %eax 	[1, 1]
0x73349118 cmp    %eax $0xfffffffe 	[2, 0]
0x7334911b jnz    $0x733492ac 	[1, 0]

in dr_basic_block(tag=0x73349121) 0 0 esp is 0x0012fc0c instr_count=2
0x73349121 mov    0xfffffff0(%ebp) -> %eax 	[1, 1]
JMP @  0x73349124 MSVCR90.dll:wsopen_s ??:0
	Into  0x733492ac MSVCR90.dll:wsopen_s ??:0

in dr_basic_block(tag=0x733492ac) 0 0 esp is 0x0012fc0c instr_count=5
0x733492ac pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733492ad pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x733492ae pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733492af leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733492b0 MSVCR90.dll:wsopen_s ??:0
	Into 0x73349376 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x73349376) 0 0 esp is 0x0012fc3c instr_count=3
0x73349376 add    $0x0000000c %esp -> %esp 	[2, 1]
0x73349379 mov    %eax -> 0xffffffe4(%ebp) 	[1, 1]
JMP @  0x7334937c MSVCR90.dll:read ??:0
	Into  0x73349394 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x73349394) 0 0 esp is 0x0012fc48 instr_count=2
0x73349394 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334939b call   $0x733493a9 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334939b MSVCR90.dll:read ??:0
	Into 0x733493a9 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x733493a9) 0 0 esp is 0x0012fc44 instr_count=2
0x733493a9 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733493ac call   $0x7334a511 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733493ac MSVCR90.dll:read ??:0
	Into 0x7334a511 MSVCR90.dll:get_osfhandle ??:0

in dr_basic_block(tag=0x7334a511) 0 0 esp is 0x0012fc3c instr_count=12
0x7334a511 mov    %edi -> %edi 	[1, 1]
0x7334a513 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334a514 mov    %esp -> %ebp 	[1, 1]
0x7334a516 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7334a519 mov    %eax -> %ecx 	[1, 1]
0x7334a51b and    $0x0000001f %eax -> %eax 	[2, 1]
0x7334a51e sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x7334a521 mov    0x7337d6a0(,%ecx,4) -> %ecx 	[1, 1]
0x7334a528 shl    $0x00000006 %eax -> %eax 	[2, 1]
0x7334a52b lea    0x0c(%ecx,%eax,1) -> %eax 	[1, 1]
0x7334a52f push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334a530 call   0x732e1044 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334a530 MSVCR90.dll:get_osfhandle ??:0
	Into 0x77867750 ntdll.dll:RtlLeaveCriticalSection ??:0

in dr_basic_block(tag=0x7334a536) 0 0 esp is 0x0012fc38 instr_count=2
0x7334a536 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7334a537 MSVCR90.dll:get_osfhandle ??:0
	Into 0x733493b1 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x733493b1) 0 0 esp is 0x0012fc40 instr_count=2
0x733493b1 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x733493b2 MSVCR90.dll:read ??:0
	Into 0x733493a0 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x733493a0) 0 0 esp is 0x0012fc48 instr_count=2
0x733493a0 mov    0xffffffe4(%ebp) -> %eax 	[1, 1]
0x733493a3 call   $0x7334cf45 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733493a3 MSVCR90.dll:read ??:0
	Into 0x7334cf45 MSVCR90.dll:_dllonexit ??:0
0x7334cf45 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7334cf48 mov    %ecx -> %fs:0x00 	[1, 1]
0x7334cf4f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cf50 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf51 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf52 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cf53 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cf54 mov    %ebp -> %esp 	[1, 1]
0x7334cf56 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x7334cf57 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x7334cf58 MSVCR90.dll:_dllonexit ??:0
	Into 0x733493a8 MSVCR90.dll:read ??:0

in dr_basic_block(tag=0x733493a8) 0 0 esp is 0x0012fc7c instr_count=1
[RETURN @ ] 0x733493a8 MSVCR90.dll:read ??:0
	Into 0x7330efd2 MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330efd2) 0 0 esp is 0x0012fc80 instr_count=4
0x7330efd2 add    $0x0000000c %esp -> %esp 	[2, 1]
0x7330efd5 mov    %eax -> 0x04(%esi) 	[1, 1]
0x7330efd8 cmp    %eax %edi 	[2, 0]
0x7330efda jz     $0x7330f069 	[1, 0]

in dr_basic_block(tag=0x7330efe0) 0 0 esp is 0x0012fc8c instr_count=2
0x7330efe0 cmp    %eax $0xffffffff 	[2, 0]
0x7330efe3 jz     $0x7330f069 	[1, 0]

in dr_basic_block(tag=0x7330efe9) 0 0 esp is 0x0012fc8c instr_count=2
0x7330efe9 test   0x0c(%esi) $0x82 	[2, 0]
0x7330efed jnz    $0x7330f03e 	[1, 0]

in dr_basic_block(tag=0x7330efef) 0 0 esp is 0x0012fc8c instr_count=2
0x7330efef push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330eff0 call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330eff0 MSVCR90.dll:filbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330eff5 MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330eff5) 0 0 esp is 0x0012fc88 instr_count=3
0x7330eff5 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330eff6 cmp    %eax $0xffffffff 	[2, 0]
0x7330eff9 jz     $0x7330f029 	[1, 0]

in dr_basic_block(tag=0x7330effb) 0 0 esp is 0x0012fc8c instr_count=2
0x7330effb push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330effc call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330effc MSVCR90.dll:filbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330f001 MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330f001) 0 0 esp is 0x0012fc88 instr_count=3
0x7330f001 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f002 cmp    %eax $0xfffffffe 	[2, 0]
0x7330f005 jz     $0x7330f029 	[1, 0]

in dr_basic_block(tag=0x7330f007) 0 0 esp is 0x0012fc8c instr_count=2
0x7330f007 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f008 call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f008 MSVCR90.dll:filbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330f00d MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330f00d) 0 0 esp is 0x0012fc88 instr_count=4
0x7330f00d sar    $0x00000005 %eax -> %eax 	[2, 1]
0x7330f010 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f011 lea    0x7337d6a0(,%eax,4) -> %edi 	[1, 1]
0x7330f018 call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f018 MSVCR90.dll:filbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330f01d MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330f01d) 0 0 esp is 0x0012fc84 instr_count=6
0x7330f01d and    $0x0000001f %eax -> %eax 	[2, 1]
0x7330f020 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f021 shl    $0x00000006 %eax -> %eax 	[2, 1]
0x7330f024 add    (%edi) %eax -> %eax 	[2, 1]
0x7330f026 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
JMP @  0x7330f027 MSVCR90.dll:filbuf ??:0
	Into  0x7330f02e MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330f02e) 0 0 esp is 0x0012fc8c instr_count=4
0x7330f02e mov    0x04(%eax) -> %al 	[1, 1]
0x7330f031 and    $0x82 %al -> %al 	[2, 1]
	$$$$ taint reg:49 ---> reg:49  $$$$
0x7330f033 cmp    %al $0x82 	[2, 0]
0x7330f035 jnz    $0x7330f03e 	[1, 0]

in dr_basic_block(tag=0x7330f03e) 0 0 esp is 0x0012fc8c instr_count=2
0x7330f03e cmp    0x18(%esi) $0x00000200 	[2, 0]
0x7330f045 jnz    $0x7330f05c 	[1, 0]

in dr_basic_block(tag=0x7330f05c) 0 0 esp is 0x0012fc8c instr_count=6
0x7330f05c mov    (%esi) -> %ecx 	[1, 1]
0x7330f05e dec    0x04(%esi) -> 0x04(%esi) 	[1, 1]
0x7330f061 movzx  (%ecx) -> %eax 	[1, 1]
0x7330f064 inc    %ecx -> %ecx 	[1, 1]
0x7330f065 mov    %ecx -> (%esi) 	[1, 1]
JMP @  0x7330f067 MSVCR90.dll:filbuf ??:0
	Into  0x7330f07c MSVCR90.dll:filbuf ??:0

in dr_basic_block(tag=0x7330f07c) 0 0 esp is 0x0012fc8c instr_count=4
0x7330f07c pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7330f07d pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330f07e pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330f07f MSVCR90.dll:filbuf ??:0
	Into 0x73330115 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73330115) 0 0 esp is 0x0012fc9c instr_count=2
0x73330115 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x73330116 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7332f129 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f129) 0 0 esp is 0x0012fca4 instr_count=3
0x7332f129 mov    %eax -> %ebx 	[1, 1]
0x7332f12b cmp    %ebx $0xffffffff 	[2, 0]
0x7332f12e jz     $0x7332f13e 	[1, 0]

in dr_basic_block(tag=0x7332f130) 0 0 esp is 0x0012fca4 instr_count=3
0x7332f130 movzx  %bl -> %eax 	[1, 1]
0x7332f133 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f134 call   $0x7331c791 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332f134 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c791 MSVCR90.dll:isspace ??:0
0x7331c791 mov    %edi -> %edi 	[1, 1]
0x7331c793 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c794 mov    %esp -> %ebp 	[1, 1]
0x7331c796 cmp    0x7337c218 $0x00000000 	[2, 0]
0x7331c79d jnz    $0x7331c7b1 	[1, 0]
0x7331c79f mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c7a2 mov    0x7337a388 -> %ecx 	[1, 1]
0x7331c7a8 movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331c7ac and    $0x00000008 %eax -> %eax 	[2, 1]
0x7331c7af pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c7b0 MSVCR90.dll:isspace ??:0
	Into 0x7332f139 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f139) 0 0 esp is 0x0012fca0 instr_count=3
0x7332f139 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332f13a test   %eax %eax 	[2, 0]
0x7332f13c jnz    $0x7332f11f 	[1, 0]

in dr_basic_block(tag=0x7332f13e) 0 0 esp is 0x0012fca4 instr_count=4
0x7332f13e mov    %ebx -> %eax 	[1, 1]
0x7332f140 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7332f141 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7332f142 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7332f4a1 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f4a1) 0 0 esp is 0x0012fcb0 instr_count=2
0x7332f4a1 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
JMP @  0x7332f4a2 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332f4b5 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f4b5) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f4b5 mov    %eax -> 0xfffffe78(%ebp) 	[1, 1]
0x7332f4bb cmp    %eax $0xffffffff 	[2, 0]
0x7332f4be jz     $0x7333008c 	[1, 0]

in dr_basic_block(tag=0x7332f4c4) 0 0 esp is 0x0012fcb4 instr_count=5
0x7332f4c4 mov    0xfffffe44(%ebp) -> %esi 	[1, 1]
0x7332f4ca mov    0xfffffe48(%ebp) -> %edi 	[1, 1]
0x7332f4d0 mov    0xfffffe4c(%ebp) -> %ecx 	[1, 1]
0x7332f4d6 test   %ecx %ecx 	[2, 0]
0x7332f4d8 jz     $0x7332f4e7 	[1, 0]

in dr_basic_block(tag=0x7332f4e7) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332f4e7 mov    0xfffffe5c(%ebp) -> %eax 	[1, 1]
0x7332f4ed cmp    %eax $0x0000006f 	[2, 0]
0x7332f4f0 jnle   $0x7332fa5f 	[1, 0]

in dr_basic_block(tag=0x7332f4f6) 0 0 esp is 0x0012fcb4 instr_count=1
0x7332f4f6 jz     $0x7332fcf4 	[1, 0]

in dr_basic_block(tag=0x7332f4fc) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332f4fc cmp    %eax $0x00000063 	[2, 0]
0x7332f4ff jz     $0x7332f906 	[1, 0]

in dr_basic_block(tag=0x7332f505) 0 0 esp is 0x0012fcb4 instr_count=4
0x7332f505 push   $0x00000064 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f507 pop    %esp (%esp) -> %edx %esp 	[2, 2]
0x7332f508 cmp    %eax %edx 	[2, 0]
0x7332f50a jz     $0x7332fcf4 	[1, 0]

in dr_basic_block(tag=0x7332fcf4) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332fcf4 cmp    0xfffffe78(%ebp) $0x0000002d 	[2, 0]
0x7332fcfb jnz    $0x7332fd06 	[1, 0]

in dr_basic_block(tag=0x7332fd06) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332fd06 cmp    0xfffffe78(%ebp) $0x0000002b 	[2, 0]
0x7332fd0d jnz    $0x7332fd36 	[1, 0]

in dr_basic_block(tag=0x7332fd36) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332fd36 cmp    0xfffffe28(%ebp) $0x00000000 	[2, 0]
0x7332fd3d jz     $0x7332fe8d 	[1, 0]

in dr_basic_block(tag=0x7332fe8d) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332fe8d mov    0xfffffe40(%ebp) -> %edi 	[1, 1]
0x7332fe93 test   %bl %bl 	[2, 0]
0x7332fe95 jnz    $0x7332ff5c 	[1, 0]

in dr_basic_block(tag=0x7332fe9b) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332fe9b cmp    0xfffffe5c(%ebp) $0x00000078 	[2, 0]
0x7332fea2 jz     $0x7332fedf 	[1, 0]

in dr_basic_block(tag=0x7332fea4) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332fea4 cmp    0xfffffe5c(%ebp) $0x00000070 	[2, 0]
0x7332feab jz     $0x7332fedf 	[1, 0]

in dr_basic_block(tag=0x7332fead) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332fead movzx  0xfffffe78(%ebp) -> %eax 	[1, 1]
0x7332feb4 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332feb5 call   $0x7331c678 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332feb5 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c678 MSVCR90.dll:isdigit ??:0
0x7331c678 mov    %edi -> %edi 	[1, 1]
0x7331c67a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c67b mov    %esp -> %ebp 	[1, 1]
0x7331c67d cmp    0x7337c218 $0x00000000 	[2, 0]
0x7331c684 jnz    $0x7331c698 	[1, 0]
0x7331c686 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c689 mov    0x7337a388 -> %ecx 	[1, 1]
0x7331c68f movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331c693 and    $0x00000004 %eax -> %eax 	[2, 1]
0x7331c696 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c697 MSVCR90.dll:isdigit ??:0
	Into 0x7332feba MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332feba) 0 0 esp is 0x0012fcb0 instr_count=3
0x7332feba pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332febb test   %eax %eax 	[2, 0]
0x7332febd jz     $0x7332ff43 	[1, 0]

in dr_basic_block(tag=0x7332fec3) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332fec3 cmp    0xfffffe5c(%ebp) $0x0000006f 	[2, 0]
0x7332feca jnz    $0x7332feda 	[1, 0]

in dr_basic_block(tag=0x7332feda) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332feda imul   %edi $0x0000000a -> %edi 	[2, 1]
JMP @  0x7332fedd MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332ff06 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332ff06) 0 0 esp is 0x0012fcb4 instr_count=5
0x7332ff06 inc    0xfffffe58(%ebp) -> 0xfffffe58(%ebp) 	[1, 1]
0x7332ff0c cmp    0xfffffe4c(%ebp) $0x00000000 	[2, 0]
0x7332ff13 mov    0xfffffe78(%ebp) -> %eax 	[1, 1]
0x7332ff19 lea    0xffffffd0(%edi,%eax,1) -> %edi 	[1, 1]
0x7332ff1d jz     $0x7332ff27 	[1, 0]

in dr_basic_block(tag=0x7332ff27) 0 0 esp is 0x0012fcb4 instr_count=3
0x7332ff27 mov    0xfffffe64(%ebp) -> %edx 	[1, 1]
0x7332ff2d inc    0xfffffe74(%ebp) -> 0xfffffe74(%ebp) 	[1, 1]
0x7332ff33 call   $0x73330101 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332ff33 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73330101 MSVCR90.dll:vcwprintf_s ??:0
0x73330101 dec    0x04(%edx) -> 0x04(%edx) 	[1, 1]
0x73330104 js     $0x7333010f 	[1, 0]

in dr_basic_block(tag=0x73330106) 0 0 esp is 0x0012fcb0 instr_count=5
0x73330106 mov    (%edx) -> %ecx 	[1, 1]
0x73330108 movzx  (%ecx) -> %eax 	[1, 1]
0x7333010b inc    %ecx -> %ecx 	[1, 1]
0x7333010c mov    %ecx -> (%edx) 	[1, 1]
[RETURN @ ] 0x7333010e MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7332ff38 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332ff38) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332ff38 mov    %eax -> 0xfffffe78(%ebp) 	[1, 1]
JMP @  0x7332ff3e MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332fe9b MSVCR90.dll:vcwprintf_s ??:0
0x7332fe9b cmp    0xfffffe5c(%ebp) $0x00000078 	[2, 0]
0x7332fea2 jz     $0x7332fedf 	[1, 0]
0x7332fea4 cmp    0xfffffe5c(%ebp) $0x00000070 	[2, 0]
0x7332feab jz     $0x7332fedf 	[1, 0]
0x7332fead movzx  0xfffffe78(%ebp) -> %eax 	[1, 1]
0x7332feb4 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332feb5 call   $0x7331c678 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332feb5 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c678 MSVCR90.dll:isdigit ??:0
0x7331c678 mov    %edi -> %edi 	[1, 1]
0x7331c67a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c67b mov    %esp -> %ebp 	[1, 1]
0x7331c67d cmp    0x7337c218 $0x00000000 	[2, 0]
0x7331c684 jnz    $0x7331c698 	[1, 0]
0x7331c686 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c689 mov    0x7337a388 -> %ecx 	[1, 1]
0x7331c68f movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331c693 and    $0x00000004 %eax -> %eax 	[2, 1]
0x7331c696 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c697 MSVCR90.dll:isdigit ??:0
	Into 0x7332feba MSVCR90.dll:vcwprintf_s ??:0
0x7332feba pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332febb test   %eax %eax 	[2, 0]
0x7332febd jz     $0x7332ff43 	[1, 0]
0x7332fec3 cmp    0xfffffe5c(%ebp) $0x0000006f 	[2, 0]
0x7332feca jnz    $0x7332feda 	[1, 0]
0x7332feda imul   %edi $0x0000000a -> %edi 	[2, 1]
JMP @  0x7332fedd MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332ff06 MSVCR90.dll:vcwprintf_s ??:0
0x7332ff06 inc    0xfffffe58(%ebp) -> 0xfffffe58(%ebp) 	[1, 1]
0x7332ff0c cmp    0xfffffe4c(%ebp) $0x00000000 	[2, 0]
0x7332ff13 mov    0xfffffe78(%ebp) -> %eax 	[1, 1]
0x7332ff19 lea    0xffffffd0(%edi,%eax,1) -> %edi 	[1, 1]
0x7332ff1d jz     $0x7332ff27 	[1, 0]
0x7332ff27 mov    0xfffffe64(%ebp) -> %edx 	[1, 1]
0x7332ff2d inc    0xfffffe74(%ebp) -> 0xfffffe74(%ebp) 	[1, 1]
0x7332ff33 call   $0x73330101 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332ff33 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73330101 MSVCR90.dll:vcwprintf_s ??:0
0x73330101 dec    0x04(%edx) -> 0x04(%edx) 	[1, 1]
0x73330104 js     $0x7333010f 	[1, 0]
0x73330106 mov    (%edx) -> %ecx 	[1, 1]
0x73330108 movzx  (%ecx) -> %eax 	[1, 1]
0x7333010b inc    %ecx -> %ecx 	[1, 1]
0x7333010c mov    %ecx -> (%edx) 	[1, 1]
[RETURN @ ] 0x7333010e MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7332ff38 MSVCR90.dll:vcwprintf_s ??:0
0x7332ff38 mov    %eax -> 0xfffffe78(%ebp) 	[1, 1]
JMP @  0x7332ff3e MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332fe9b MSVCR90.dll:vcwprintf_s ??:0
0x7332fe9b cmp    0xfffffe5c(%ebp) $0x00000078 	[2, 0]
0x7332fea2 jz     $0x7332fedf 	[1, 0]
0x7332fea4 cmp    0xfffffe5c(%ebp) $0x00000070 	[2, 0]
0x7332feab jz     $0x7332fedf 	[1, 0]
0x7332fead movzx  0xfffffe78(%ebp) -> %eax 	[1, 1]
0x7332feb4 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332feb5 call   $0x7331c678 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332feb5 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c678 MSVCR90.dll:isdigit ??:0
0x7331c678 mov    %edi -> %edi 	[1, 1]
0x7331c67a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c67b mov    %esp -> %ebp 	[1, 1]
0x7331c67d cmp    0x7337c218 $0x00000000 	[2, 0]
0x7331c684 jnz    $0x7331c698 	[1, 0]
0x7331c686 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c689 mov    0x7337a388 -> %ecx 	[1, 1]
0x7331c68f movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331c693 and    $0x00000004 %eax -> %eax 	[2, 1]
0x7331c696 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c697 MSVCR90.dll:isdigit ??:0
	Into 0x7332feba MSVCR90.dll:vcwprintf_s ??:0
0x7332feba pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332febb test   %eax %eax 	[2, 0]
0x7332febd jz     $0x7332ff43 	[1, 0]

in dr_basic_block(tag=0x7332ff43) 0 0 esp is 0x0012fcb4 instr_count=4
0x7332ff43 push   0xfffffe64(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332ff49 dec    0xfffffe74(%ebp) -> 0xfffffe74(%ebp) 	[1, 1]
0x7332ff4f push   0xfffffe78(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332ff55 call   $0x7332f101 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7332ff55 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7332f101 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332f101) 0 0 esp is 0x0012fca8 instr_count=5
0x7332f101 mov    %edi -> %edi 	[1, 1]
0x7332f103 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7332f104 mov    %esp -> %ebp 	[1, 1]
0x7332f106 cmp    0x08(%ebp) $0xffffffff 	[2, 0]
0x7332f10a jz     $0x7332f112 	[1, 0]

in dr_basic_block(tag=0x7332f10c) 0 0 esp is 0x0012fca4 instr_count=2
0x7332f10c pop    %esp (%esp) -> %ebp %esp 	[2, 2]
JMP @  0x7332f10d MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73313fbe MSVCR90.dll:ungetc_nolock ??:0

in dr_basic_block(tag=0x73313fbe) 0 0 esp is 0x0012fca8 instr_count=8
0x73313fbe mov    %edi -> %edi 	[1, 1]
0x73313fc0 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73313fc1 mov    %esp -> %ebp 	[1, 1]
0x73313fc3 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73313fc4 mov    0x0c(%ebp) -> %esi 	[1, 1]
0x73313fc7 test   0x0c(%esi) $0x40 	[2, 0]
0x73313fcb push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73313fcc jnz    $0x73314047 	[1, 0]

in dr_basic_block(tag=0x73313fce) 0 0 esp is 0x0012fc9c instr_count=2
0x73313fce push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73313fcf call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73313fcf MSVCR90.dll:ungetc_nolock ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x73313fd4 MSVCR90.dll:ungetc_nolock ??:0

in dr_basic_block(tag=0x73313fd4) 0 0 esp is 0x0012fc98 instr_count=4
0x73313fd4 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73313fd5 mov    $0x7337a130 -> %edx 	[1, 1]
0x73313fda cmp    %eax $0xffffffff 	[2, 0]
0x73313fdd jz     $0x73313ffa 	[1, 0]

in dr_basic_block(tag=0x73313fdf) 0 0 esp is 0x0012fc9c instr_count=2
0x73313fdf cmp    %eax $0xfffffffe 	[2, 0]
0x73313fe2 jz     $0x73313ffa 	[1, 0]

in dr_basic_block(tag=0x73313fe4) 0 0 esp is 0x0012fc9c instr_count=7
0x73313fe4 mov    %eax -> %ecx 	[1, 1]
0x73313fe6 and    $0x0000001f %ecx -> %ecx 	[2, 1]
0x73313fe9 mov    %eax -> %edi 	[1, 1]
0x73313feb sar    $0x00000005 %edi -> %edi 	[2, 1]
0x73313fee shl    $0x00000006 %ecx -> %ecx 	[2, 1]
0x73313ff1 add    0x7337d6a0(,%edi,4) %ecx -> %ecx 	[2, 1]
JMP @  0x73313ff8 MSVCR90.dll:ungetc_nolock ??:0
	Into  0x73313ffc MSVCR90.dll:ungetc_nolock ??:0

in dr_basic_block(tag=0x73313ffc) 0 0 esp is 0x0012fc9c instr_count=2
0x73313ffc test   0x24(%ecx) $0x7f 	[2, 0]
0x73314000 jnz    $0x73314028 	[1, 0]

in dr_basic_block(tag=0x73314002) 0 0 esp is 0x0012fc9c instr_count=2
0x73314002 cmp    %eax $0xffffffff 	[2, 0]
0x73314005 jz     $0x73314020 	[1, 0]

in dr_basic_block(tag=0x73314007) 0 0 esp is 0x0012fc9c instr_count=2
0x73314007 cmp    %eax $0xfffffffe 	[2, 0]
0x7331400a jz     $0x73314020 	[1, 0]

in dr_basic_block(tag=0x7331400c) 0 0 esp is 0x0012fc9c instr_count=6
0x7331400c mov    %eax -> %ecx 	[1, 1]
0x7331400e and    $0x0000001f %eax -> %eax 	[2, 1]
0x73314011 sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x73314014 shl    $0x00000006 %eax -> %eax 	[2, 1]
0x73314017 add    0x7337d6a0(,%ecx,4) %eax -> %eax 	[2, 1]
JMP @  0x7331401e MSVCR90.dll:ungetc_nolock ??:0
	Into  0x73314022 MSVCR90.dll:ungetc_nolock ??:0

in dr_basic_block(tag=0x73314022) 0 0 esp is 0x0012fc9c instr_count=2
0x73314022 test   0x24(%eax) $0x80 	[2, 0]
0x73314026 jz     $0x73314047 	[1, 0]

in dr_basic_block(tag=0x73314047) 0 0 esp is 0x0012fc9c instr_count=4
0x73314047 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73314048 mov    0x08(%ebp) -> %ebx 	[1, 1]
0x7331404b cmp    %ebx $0xffffffff 	[2, 0]
0x7331404e jz     $0x7331408d 	[1, 0]

in dr_basic_block(tag=0x73314050) 0 0 esp is 0x0012fc98 instr_count=3
0x73314050 mov    0x0c(%esi) -> %eax 	[1, 1]
0x73314053 test   %al $0x01 	[2, 0]
0x73314055 jnz    $0x7331405f 	[1, 0]

in dr_basic_block(tag=0x7331405f) 0 0 esp is 0x0012fc98 instr_count=3
0x7331405f xor    %edi %edi -> %edi 	[2, 1]
0x73314061 cmp    0x08(%esi) %edi 	[2, 0]
0x73314064 jnz    $0x7331406d 	[1, 0]

in dr_basic_block(tag=0x7331406d) 0 0 esp is 0x0012fc98 instr_count=3
0x7331406d mov    (%esi) -> %eax 	[1, 1]
0x7331406f cmp    %eax 0x08(%esi) 	[2, 0]
0x73314072 jnz    $0x7331407c 	[1, 0]

in dr_basic_block(tag=0x7331407c) 0 0 esp is 0x0012fc98 instr_count=4
0x7331407c dec    (%esi) -> (%esi) 	[1, 1]
0x7331407e test   0x0c(%esi) $0x40 	[2, 0]
0x73314082 mov    (%esi) -> %eax 	[1, 1]
0x73314084 jz     $0x73314095 	[1, 0]

in dr_basic_block(tag=0x73314095) 0 0 esp is 0x0012fc98 instr_count=9
0x73314095 mov    %bl -> (%eax) 	[1, 1]
0x73314097 mov    0x0c(%esi) -> %eax 	[1, 1]
0x7331409a inc    0x04(%esi) -> 0x04(%esi) 	[1, 1]
0x7331409d and    $0xffffffef %eax -> %eax 	[2, 1]
0x733140a0 or     $0x00000001 %eax -> %eax 	[2, 1]
0x733140a3 mov    %eax -> 0x0c(%esi) 	[1, 1]
0x733140a6 mov    %ebx -> %eax 	[1, 1]
0x733140a8 and    $0x000000ff %eax -> %eax 	[2, 1]
JMP @  0x733140ad MSVCR90.dll:ungetc_nolock ??:0
	Into  0x73314090 MSVCR90.dll:ungetc_nolock ??:0

in dr_basic_block(tag=0x73314090) 0 0 esp is 0x0012fc98 instr_count=5
0x73314090 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x73314091 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x73314092 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73314093 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73314094 MSVCR90.dll:ungetc_nolock ??:0
	Into 0x7332ff5a MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332ff5a) 0 0 esp is 0x0012fcac instr_count=4
0x7332ff5a pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332ff5b pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7332ff5c cmp    0xfffffe60(%ebp) $0x00 	[2, 0]
0x7332ff63 jz     $0x7332ff67 	[1, 0]

in dr_basic_block(tag=0x7332ff67) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332ff67 cmp    0xfffffe5c(%ebp) $0x00000046 	[2, 0]
0x7332ff6e jnz    $0x7332ff77 	[1, 0]

in dr_basic_block(tag=0x7332ff77) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332ff77 cmp    0xfffffe58(%ebp) $0x00000000 	[2, 0]
0x7332ff7e jz     $0x7333008c 	[1, 0]

in dr_basic_block(tag=0x7332ff84) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332ff84 cmp    0xfffffe6a(%ebp) $0x00 	[2, 0]
0x7332ff8b jnz    $0x7332ffc5 	[1, 0]

in dr_basic_block(tag=0x7332ff8d) 0 0 esp is 0x0012fcb4 instr_count=4
0x7332ff8d inc    0xfffffe3c(%ebp) -> 0xfffffe3c(%ebp) 	[1, 1]
0x7332ff93 mov    0xfffffe44(%ebp) -> %esi 	[1, 1]
0x7332ff99 cmp    0xfffffe28(%ebp) $0x00000000 	[2, 0]
0x7332ffa0 jz     $0x7332ffb5 	[1, 0]

in dr_basic_block(tag=0x7332ffb5) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332ffb5 cmp    0xfffffe6b(%ebp) $0x00 	[2, 0]
0x7332ffbc jz     $0x7332ffc2 	[1, 0]

in dr_basic_block(tag=0x7332ffbe) 0 0 esp is 0x0012fcb4 instr_count=2
0x7332ffbe mov    %edi -> (%esi) 	[1, 1]
JMP @  0x7332ffc0 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7332ffc5 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7332ffc5) 0 0 esp is 0x0012fcb4 instr_count=5
0x7332ffc5 mov    0xfffffe48(%ebp) -> %edi 	[1, 1]
0x7332ffcb inc    0xfffffe63(%ebp) -> 0xfffffe63(%ebp) 	[1, 1]
0x7332ffd1 inc    %edi -> %edi 	[1, 1]
0x7332ffd2 mov    %edi -> 0xfffffe48(%ebp) 	[1, 1]
JMP @  0x7332ffd8 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333003a MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7333003a) 0 0 esp is 0x0012fcb4 instr_count=2
0x7333003a cmp    0xfffffe78(%ebp) $0xffffffff 	[2, 0]
0x73330041 jnz    $0x73330056 	[1, 0]

in dr_basic_block(tag=0x73330056) 0 0 esp is 0x0012fcb4 instr_count=3
0x73330056 mov    (%edi) -> %al 	[1, 1]
0x73330058 test   %al %al 	[2, 0]
0x7333005a jnz    $0x7332f272 	[1, 0]

in dr_basic_block(tag=0x73330060) 0 0 esp is 0x0012fcb4 instr_count=1
JMP @  0x73330060 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333008c MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7333008c) 0 0 esp is 0x0012fcb4 instr_count=2
0x7333008c cmp    0xfffffe30(%ebp) $0x00000001 	[2, 0]
0x73330093 jnz    $0x733300a1 	[1, 0]

in dr_basic_block(tag=0x733300a1) 0 0 esp is 0x0012fcb4 instr_count=2
0x733300a1 cmp    0xfffffe78(%ebp) $0xffffffff 	[2, 0]
0x733300a8 jnz    $0x733300d4 	[1, 0]

in dr_basic_block(tag=0x733300d4) 0 0 esp is 0x0012fcb4 instr_count=2
0x733300d4 cmp    0xfffffe14(%ebp) $0x00 	[2, 0]
0x733300db jz     $0x733300e7 	[1, 0]

in dr_basic_block(tag=0x733300dd) 0 0 esp is 0x0012fcb4 instr_count=9
0x733300dd mov    0xfffffe10(%ebp) -> %eax 	[1, 1]
0x733300e3 and    $0xfffffffd 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x733300e7 mov    0xfffffe3c(%ebp) -> %eax 	[1, 1]
0x733300ed pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x733300ee mov    0xfffffffc(%ebp) -> %ecx 	[1, 1]
0x733300f1 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733300f2 xor    %ebp %ecx -> %ecx 	[2, 1]
0x733300f4 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x733300f5 call   $0x7334dbbe %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733300f5 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7334dbbe MSVCR90.dll:rand_s ??:0

in dr_basic_block(tag=0x7334dbbe) 0 0 esp is 0x0012fcbc instr_count=2
0x7334dbbe cmp    %ecx 0x7337a2a8 	[2, 0]
0x7334dbc4 jnz    $0x7334dbc8 	[1, 0]

in dr_basic_block(tag=0x7334dbc6) 0 0 esp is 0x0012fcbc instr_count=1
[RETURN @ ] 0x7334dbc6 MSVCR90.dll:rand_s ??:0
	Into 0x733300fa MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x733300fa) 0 0 esp is 0x0012fcc0 instr_count=2
0x733300fa leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x733300fb MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73316344 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x73316344) 0 0 esp is 0x0012fec4 instr_count=4
0x73316344 add    $0x00000010 %esp -> %esp 	[2, 1]
0x73316347 mov    %eax -> 0xffffffe4(%ebp) 	[1, 1]
0x7331634a mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x73316351 call   $0x73316361 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316351 MSVCR90.dll:wprintf_p ??:0
	Into 0x73316361 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x73316361) 0 0 esp is 0x0012fed0 instr_count=1
0x73316361 call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316361 MSVCR90.dll:wprintf_p ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x73316366 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x73316366) 0 0 esp is 0x0012fed0 instr_count=3
0x73316366 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316367 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73316368 call   $0x7330f34f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316368 MSVCR90.dll:wprintf_p ??:0
	Into 0x7330f34f MSVCR90.dll:unlock_file ??:0

in dr_basic_block(tag=0x7330f34f) 0 0 esp is 0x0012fec4 instr_count=7
0x7330f34f mov    %edi -> %edi 	[1, 1]
0x7330f351 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f352 mov    %esp -> %ebp 	[1, 1]
0x7330f354 mov    0x08(%ebp) -> %ecx 	[1, 1]
0x7330f357 cmp    %ecx $0x00000014 	[2, 0]
0x7330f35a mov    0x0c(%ebp) -> %eax 	[1, 1]
0x7330f35d jnl    $0x7330f372 	[1, 0]

in dr_basic_block(tag=0x7330f35f) 0 0 esp is 0x0012fec0 instr_count=4
0x7330f35f and    $0xffff7fff 0x0c(%eax) -> 0x0c(%eax) 	[2, 1]
0x7330f366 add    $0x00000010 %ecx -> %ecx 	[2, 1]
0x7330f369 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f36a call   $0x73302e16 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f36a MSVCR90.dll:unlock_file ??:0
	Into 0x73302e16 MSVCR90.dll:unlock ??:0
0x73302e16 mov    %edi -> %edi 	[1, 1]
0x73302e18 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302e19 mov    %esp -> %ebp 	[1, 1]
0x73302e1b mov    0x08(%ebp) -> %eax 	[1, 1]
0x73302e1e push   0x733770c0(,%eax,8) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302e25 call   0x732e1044 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302e25 MSVCR90.dll:unlock ??:0
	Into 0x77867750 ntdll.dll:RtlLeaveCriticalSection ??:0
0x73302e2b pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302e2c MSVCR90.dll:unlock ??:0
	Into 0x7330f36f MSVCR90.dll:unlock_file ??:0

in dr_basic_block(tag=0x7330f36f) 0 0 esp is 0x0012febc instr_count=3
0x7330f36f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f370 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330f371 MSVCR90.dll:unlock_file ??:0
	Into 0x7331636d MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x7331636d) 0 0 esp is 0x0012fec8 instr_count=3
0x7331636d pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331636e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x7331636f MSVCR90.dll:wprintf_p ??:0
	Into 0x73316356 MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x73316356) 0 0 esp is 0x0012fed4 instr_count=2
0x73316356 mov    0xffffffe4(%ebp) -> %eax 	[1, 1]
0x73316359 call   $0x7334cf45 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73316359 MSVCR90.dll:wprintf_p ??:0
	Into 0x7334cf45 MSVCR90.dll:_dllonexit ??:0
0x7334cf45 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7334cf48 mov    %ecx -> %fs:0x00 	[1, 1]
0x7334cf4f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cf50 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf51 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf52 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cf53 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cf54 mov    %ebp -> %esp 	[1, 1]
0x7334cf56 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x7334cf57 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x7334cf58 MSVCR90.dll:_dllonexit ??:0
	Into 0x7331635e MSVCR90.dll:wprintf_p ??:0

in dr_basic_block(tag=0x7331635e) 0 0 esp is 0x0012ff04 instr_count=1
[RETURN @ ] 0x7331635e MSVCR90.dll:wprintf_p ??:0
	Into 0x733126ec MSVCR90.dll:scanf ??:0

in dr_basic_block(tag=0x733126ec) 0 0 esp is 0x0012ff08 instr_count=3
0x733126ec add    $0x00000010 %esp -> %esp 	[2, 1]
0x733126ef pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x733126f0 MSVCR90.dll:scanf ??:0
	Into 0x004010af tttt0.exe:main c:\users\yw\desktop\tttt\tttt\tttt.cpp:43+0x10

in dr_basic_block(tag=0x004010af) 0 0 esp is 0x0012ff20 instr_count=3
0x004010af add    $0x00000008 %esp -> %esp 	[2, 1]
0x004010b2 lea    0x08(%esp) -> %esi 	[1, 1]
0x004010b6 call   $0x00401000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004010b6 tttt0.exe:main c:\users\yw\desktop\tttt\tttt\tttt.cpp:45+0x4
	Into 0x00401000 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:17+0x0

in dr_basic_block(tag=0x00401000) 0 0 esp is 0x0012ff24 instr_count=8
0x00401000 sub    $0x00000048 %esp -> %esp 	[2, 1]
0x00401003 mov    0x00403000 -> %eax 	[1, 1]
0x00401008 xor    %esp %eax -> %eax 	[2, 1]
0x0040100a mov    %eax -> 0x44(%esp) 	[1, 1]
0x0040100e push   $0x00000078 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401010 push   $0x00402104 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401015 mov    $0x00000078 -> 0x08(%esp) 	[1, 1]
0x0040101d call   0x004020b0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x0040101d tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:22+0xf
	Into 0x733120c1 MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x733120c1) 0 0 esp is 0x0012fed0 instr_count=3
0x733120c1 push   $0x0000000c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733120c3 push   $0x7336cd98 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733120c8 call   $0x7334cf00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733120c8 MSVCR90.dll:printf ??:0
	Into 0x7334cf00 MSVCR90.dll:_dllonexit ??:0
0x7334cf00 push   $0x7334cf5e %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf05 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf0c mov    0x10(%esp) -> %eax 	[1, 1]
0x7334cf10 mov    %ebp -> 0x10(%esp) 	[1, 1]
0x7334cf14 lea    0x10(%esp) -> %ebp 	[1, 1]
0x7334cf18 sub    %eax %esp -> %esp 	[2, 1]
0x7334cf1a push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1b push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1c push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf1d mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334cf22 xor    %eax 0xfffffffc(%ebp) -> 0xfffffffc(%ebp) 	[2, 1]
0x7334cf25 xor    %ebp %eax -> %eax 	[2, 1]
0x7334cf27 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf28 mov    %esp -> 0xffffffe8(%ebp) 	[1, 1]
0x7334cf2b push   0xfffffff8(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf2e mov    0xfffffffc(%ebp) -> %eax 	[1, 1]
0x7334cf31 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cf38 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
0x7334cf3b lea    0xfffffff0(%ebp) -> %eax 	[1, 1]
0x7334cf3e mov    %eax -> %fs:0x00 	[1, 1]
[RETURN @ ] 0x7334cf44 MSVCR90.dll:_dllonexit ??:0
	Into 0x733120cd MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x733120cd) 0 0 esp is 0x0012fea0 instr_count=6
0x733120cd xor    %eax %eax -> %eax 	[2, 1]
0x733120cf xor    %esi %esi -> %esi 	[2, 1]
0x733120d1 cmp    0x08(%ebp) %esi 	[2, 0]
0x733120d4 setnz  -> %al 	[0, 1]
0x733120d7 cmp    %eax %esi 	[2, 0]
0x733120d9 jnz    $0x733120f8 	[1, 0]

in dr_basic_block(tag=0x733120f8) 0 0 esp is 0x0012fea0 instr_count=1
0x733120f8 call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733120f8 MSVCR90.dll:printf ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x733120fd MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x733120fd) 0 0 esp is 0x0012fea0 instr_count=6
0x733120fd push   $0x00000020 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733120ff pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x73312100 add    %ebx %eax -> %eax 	[2, 1]
0x73312102 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312103 push   $0x00000001 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312105 call   $0x7330f2d7 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312105 MSVCR90.dll:printf ??:0
	Into 0x7330f2d7 MSVCR90.dll:lock_file ??:0
0x7330f2d7 mov    %edi -> %edi 	[1, 1]
0x7330f2d9 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f2da mov    %esp -> %ebp 	[1, 1]
0x7330f2dc mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330f2df cmp    %eax $0x00000014 	[2, 0]
0x7330f2e2 jnl    $0x7330f2fa 	[1, 0]
0x7330f2e4 add    $0x00000010 %eax -> %eax 	[2, 1]
0x7330f2e7 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f2e8 call   $0x73302efa %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f2e8 MSVCR90.dll:lock_file ??:0
	Into 0x73302efa MSVCR90.dll:lock ??:0
0x73302efa mov    %edi -> %edi 	[1, 1]
0x73302efc push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302efd mov    %esp -> %ebp 	[1, 1]
0x73302eff mov    0x08(%ebp) -> %eax 	[1, 1]
0x73302f02 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f03 lea    0x733770c0(,%eax,8) -> %esi 	[1, 1]
0x73302f0a cmp    (%esi) $0x00000000 	[2, 0]
0x73302f0d jnz    $0x73302f22 	[1, 0]
0x73302f22 push   (%esi) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302f24 call   0x732e1048 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302f24 MSVCR90.dll:lock ??:0
	Into 0x77867790 ntdll.dll:RtlEnterCriticalSection ??:0
0x73302f2a pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73302f2b pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302f2c MSVCR90.dll:lock ??:0
	Into 0x7330f2ed MSVCR90.dll:lock_file ??:0
0x7330f2ed mov    0x0c(%ebp) -> %eax 	[1, 1]
0x7330f2f0 or     $0x00008000 0x0c(%eax) -> 0x0c(%eax) 	[2, 1]
0x7330f2f7 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f2f8 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330f2f9 MSVCR90.dll:lock_file ??:0
	Into 0x7331210a MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331210a) 0 0 esp is 0x0012fe98 instr_count=4
0x7331210a pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331210b pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331210c mov    %esi -> 0xfffffffc(%ebp) 	[1, 1]
0x7331210f call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331210f MSVCR90.dll:printf ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x73312114 MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x73312114) 0 0 esp is 0x0012fea0 instr_count=3
0x73312114 add    %ebx %eax -> %eax 	[2, 1]
0x73312116 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312117 call   $0x7330f9ab %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312117 MSVCR90.dll:printf ??:0
	Into 0x7330f9ab MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f9ab) 0 0 esp is 0x0012fe98 instr_count=7
0x7330f9ab mov    %edi -> %edi 	[1, 1]
0x7330f9ad push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f9ae mov    %esp -> %ebp 	[1, 1]
0x7330f9b0 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f9b1 mov    0x08(%ebp) -> %esi 	[1, 1]
0x7330f9b4 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f9b5 call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f9b5 MSVCR90.dll:flsbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330f9ba MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f9ba) 0 0 esp is 0x0012fe8c instr_count=2
0x7330f9ba push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f9bb call   $0x73349d79 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f9bb MSVCR90.dll:flsbuf ??:0
	Into 0x73349d79 MSVCR90.dll:isatty ??:0

in dr_basic_block(tag=0x73349d79) 0 0 esp is 0x0012fe84 instr_count=6
0x73349d79 mov    %edi -> %edi 	[1, 1]
0x73349d7b push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73349d7c mov    %esp -> %ebp 	[1, 1]
0x73349d7e mov    0x08(%ebp) -> %eax 	[1, 1]
0x73349d81 cmp    %eax $0xfffffffe 	[2, 0]
0x73349d84 jnz    $0x73349d95 	[1, 0]

in dr_basic_block(tag=0x73349d95) 0 0 esp is 0x0012fe80 instr_count=4
0x73349d95 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73349d96 xor    %esi %esi -> %esi 	[2, 1]
0x73349d98 cmp    %eax %esi 	[2, 0]
0x73349d9a jl     $0x73349da4 	[1, 0]

in dr_basic_block(tag=0x73349d9c) 0 0 esp is 0x0012fe7c instr_count=2
0x73349d9c cmp    %eax 0x7337d688 	[2, 0]
0x73349da2 jb     $0x73349dc0 	[1, 0]

in dr_basic_block(tag=0x73349dc0) 0 0 esp is 0x0012fe7c instr_count=10
0x73349dc0 mov    %eax -> %ecx 	[1, 1]
0x73349dc2 and    $0x0000001f %eax -> %eax 	[2, 1]
0x73349dc5 sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x73349dc8 mov    0x7337d6a0(,%ecx,4) -> %ecx 	[1, 1]
0x73349dcf shl    $0x00000006 %eax -> %eax 	[2, 1]
0x73349dd2 movsx  0x04(%ecx,%eax,1) -> %eax 	[1, 1]
0x73349dd7 and    $0x00000040 %eax -> %eax 	[2, 1]
0x73349dda pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73349ddb pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73349ddc MSVCR90.dll:isatty ??:0
	Into 0x7330f9c0 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f9c0) 0 0 esp is 0x0012fe88 instr_count=4
0x7330f9c0 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f9c1 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f9c2 test   %eax %eax 	[2, 0]
0x7330f9c4 jz     $0x7330fa3c 	[1, 0]

in dr_basic_block(tag=0x7330fa3c) 0 0 esp is 0x0012fe90 instr_count=4
0x7330fa3c xor    %eax %eax -> %eax 	[2, 1]
0x7330fa3e pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330fa3f pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330fa40 MSVCR90.dll:flsbuf ??:0
	Into 0x7331211c MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331211c) 0 0 esp is 0x0012fe9c instr_count=7
0x7331211c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331211d mov    %eax -> %edi 	[1, 1]
0x7331211f lea    0x0c(%ebp) -> %eax 	[1, 1]
0x73312122 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312123 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312124 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312127 call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312127 MSVCR90.dll:printf ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x7331212c MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331212c) 0 0 esp is 0x0012fe94 instr_count=3
0x7331212c add    %ebx %eax -> %eax 	[2, 1]
0x7331212e push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331212f call   $0x7333123c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331212f MSVCR90.dll:printf ??:0
	Into 0x7333123c MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7333123c) 0 0 esp is 0x0012fe8c instr_count=26
0x7333123c mov    %edi -> %edi 	[1, 1]
0x7333123e push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7333123f mov    %esp -> %ebp 	[1, 1]
0x73331241 sub    $0x00000278 %esp -> %esp 	[2, 1]
0x73331247 mov    0x7337a2a8 -> %eax 	[1, 1]
0x7333124c xor    %ebp %eax -> %eax 	[2, 1]
0x7333124e mov    %eax -> 0xfffffffc(%ebp) 	[1, 1]
0x73331251 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331252 mov    0x0c(%ebp) -> %ebx 	[1, 1]
0x73331255 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331256 mov    0x08(%ebp) -> %esi 	[1, 1]
0x73331259 xor    %eax %eax -> %eax 	[2, 1]
0x7333125b push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7333125c mov    0x14(%ebp) -> %edi 	[1, 1]
0x7333125f push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331262 lea    0xfffffda4(%ebp) -> %ecx 	[1, 1]
0x73331268 mov    %esi -> 0xfffffdb4(%ebp) 	[1, 1]
0x7333126e mov    %edi -> 0xfffffddc(%ebp) 	[1, 1]
0x73331274 mov    %eax -> 0xfffffdb8(%ebp) 	[1, 1]
0x7333127a mov    %eax -> 0xfffffdf0(%ebp) 	[1, 1]
0x73331280 mov    %eax -> 0xfffffdcc(%ebp) 	[1, 1]
0x73331286 mov    %eax -> 0xfffffde8(%ebp) 	[1, 1]
0x7333128c mov    %eax -> 0xfffffdd0(%ebp) 	[1, 1]
0x73331292 mov    %eax -> 0xfffffdc0(%ebp) 	[1, 1]
0x73331298 mov    %eax -> 0xfffffdc8(%ebp) 	[1, 1]
0x7333129e call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7333129e MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]
0x7331c407 call   $0x733038bd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331c407 MSVCR90.dll:strstr ??:0
	Into 0x733038bd MSVCR90.dll:getptd ??:0
0x733038bd mov    %edi -> %edi 	[1, 1]
0x733038bf push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038c0 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038c0 MSVCR90.dll:getptd ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x733038c5 MSVCR90.dll:getptd ??:0
0x733038c5 mov    %eax -> %esi 	[1, 1]
0x733038c7 test   %esi %esi 	[2, 0]
0x733038c9 jnz    $0x733038d3 	[1, 0]
0x733038d3 mov    %esi -> %eax 	[1, 1]
0x733038d5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038d6 MSVCR90.dll:getptd ??:0
	Into 0x7331c40c MSVCR90.dll:strstr ??:0
0x7331c40c mov    %eax -> 0x08(%esi) 	[1, 1]
0x7331c40f mov    0x6c(%eax) -> %ecx 	[1, 1]
0x7331c412 mov    %ecx -> (%esi) 	[1, 1]
0x7331c414 mov    0x68(%eax) -> %ecx 	[1, 1]
0x7331c417 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7331c41a mov    (%esi) -> %ecx 	[1, 1]
0x7331c41c cmp    %ecx 0x7337a398 	[2, 0]
0x7331c422 jz     $0x7331c436 	[1, 0]
0x7331c436 mov    0x04(%esi) -> %eax 	[1, 1]
0x7331c439 cmp    %eax 0x73377b88 	[2, 0]
0x7331c43f jz     $0x7331c457 	[1, 0]
0x7331c457 mov    0x08(%esi) -> %eax 	[1, 1]
0x7331c45a test   0x70(%eax) $0x02 	[2, 0]
0x7331c45e jnz    $0x7331c474 	[1, 0]
0x7331c460 or     $0x00000002 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x7331c464 mov    $0x01 -> 0x0c(%esi) 	[1, 1]
JMP @  0x7331c468 MSVCR90.dll:strstr ??:0
	Into  0x7331c474 MSVCR90.dll:strstr ??:0
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x733312a3 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x733312a3) 0 0 esp is 0x0012fc04 instr_count=2
0x733312a3 test   %esi %esi 	[2, 0]
0x733312a5 jnz    $0x733312dc 	[1, 0]

in dr_basic_block(tag=0x733312dc) 0 0 esp is 0x0012fc04 instr_count=2
0x733312dc test   0x0c(%esi) $0x40 	[2, 0]
0x733312e0 jnz    $0x73331340 	[1, 0]

in dr_basic_block(tag=0x733312e2) 0 0 esp is 0x0012fc04 instr_count=2
0x733312e2 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733312e3 call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733312e3 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x733312e8 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x733312e8) 0 0 esp is 0x0012fc00 instr_count=4
0x733312e8 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x733312e9 mov    $0x7337a130 -> %edx 	[1, 1]
0x733312ee cmp    %eax $0xffffffff 	[2, 0]
0x733312f1 jz     $0x7333130e 	[1, 0]

in dr_basic_block(tag=0x733312f3) 0 0 esp is 0x0012fc04 instr_count=2
0x733312f3 cmp    %eax $0xfffffffe 	[2, 0]
0x733312f6 jz     $0x7333130e 	[1, 0]

in dr_basic_block(tag=0x733312f8) 0 0 esp is 0x0012fc04 instr_count=7
0x733312f8 mov    %eax -> %ecx 	[1, 1]
0x733312fa and    $0x0000001f %ecx -> %ecx 	[2, 1]
0x733312fd mov    %eax -> %esi 	[1, 1]
0x733312ff sar    $0x00000005 %esi -> %esi 	[2, 1]
0x73331302 shl    $0x00000006 %ecx -> %ecx 	[2, 1]
0x73331305 add    0x7337d6a0(,%esi,4) %ecx -> %ecx 	[2, 1]
JMP @  0x7333130c MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331310 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331310) 0 0 esp is 0x0012fc04 instr_count=2
0x73331310 test   0x24(%ecx) $0x7f 	[2, 0]
0x73331314 jnz    $0x733312a7 	[1, 0]

in dr_basic_block(tag=0x73331316) 0 0 esp is 0x0012fc04 instr_count=2
0x73331316 cmp    %eax $0xffffffff 	[2, 0]
0x73331319 jz     $0x73331334 	[1, 0]

in dr_basic_block(tag=0x7333131b) 0 0 esp is 0x0012fc04 instr_count=2
0x7333131b cmp    %eax $0xfffffffe 	[2, 0]
0x7333131e jz     $0x73331334 	[1, 0]

in dr_basic_block(tag=0x73331320) 0 0 esp is 0x0012fc04 instr_count=6
0x73331320 mov    %eax -> %ecx 	[1, 1]
0x73331322 and    $0x0000001f %eax -> %eax 	[2, 1]
0x73331325 sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x73331328 shl    $0x00000006 %eax -> %eax 	[2, 1]
0x7333132b add    0x7337d6a0(,%ecx,4) %eax -> %eax 	[2, 1]
JMP @  0x73331332 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331336 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331336) 0 0 esp is 0x0012fc04 instr_count=2
0x73331336 test   0x24(%eax) $0x80 	[2, 0]
0x7333133a jnz    $0x733312a7 	[1, 0]

in dr_basic_block(tag=0x73331340) 0 0 esp is 0x0012fc04 instr_count=3
0x73331340 xor    %ecx %ecx -> %ecx 	[2, 1]
0x73331342 cmp    %ebx %ecx 	[2, 0]
0x73331344 jz     $0x733312a7 	[1, 0]

in dr_basic_block(tag=0x7333134a) 0 0 esp is 0x0012fc04 instr_count=7
0x7333134a mov    (%ebx) -> %dl 	[1, 1]
0x7333134c mov    %ecx -> 0xfffffdd8(%ebp) 	[1, 1]
0x73331352 mov    %ecx -> 0xfffffde0(%ebp) 	[1, 1]
0x73331358 mov    %ecx -> 0xfffffdbc(%ebp) 	[1, 1]
0x7333135e mov    %dl -> 0xfffffdef(%ebp) 	[1, 1]
0x73331364 test   %dl %dl 	[2, 0]
0x73331366 jz     $0x73331d70 	[1, 0]

in dr_basic_block(tag=0x7333136c) 0 0 esp is 0x0012fc04 instr_count=4
0x7333136c inc    %ebx -> %ebx 	[1, 1]
0x7333136d cmp    0xfffffdd8(%ebp) $0x00000000 	[2, 0]
0x73331374 mov    %ebx -> 0xfffffdc4(%ebp) 	[1, 1]
0x7333137a jl     $0x73331d70 	[1, 0]

in dr_basic_block(tag=0x73331380) 0 0 esp is 0x0012fc04 instr_count=4
0x73331380 mov    %dl -> %al 	[1, 1]
0x73331382 sub    $0x20 %al -> %al 	[2, 1]
	$$$$ taint reg:49 ---> reg:49  $$$$
0x73331384 cmp    %al $0x58 	[2, 0]
0x73331386 jnbe   $0x73331399 	[1, 0]

in dr_basic_block(tag=0x73331388) 0 0 esp is 0x0012fc04 instr_count=5
0x73331388 movsx  %dl -> %eax 	[1, 1]
0x7333138b movsx  0x732e1bf0(%eax) -> %eax 	[1, 1]
0x73331392 and    $0x0000000f %eax -> %eax 	[2, 1]
0x73331395 xor    %esi %esi -> %esi 	[2, 1]
JMP @  0x73331397 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333139d MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7333139d) 0 0 esp is 0x0012fc04 instr_count=7
0x7333139d movsx  0x732e1c10(%ecx,%eax,8) -> %eax 	[1, 1]
0x733313a5 push   $0x00000007 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733313a7 sar    $0x00000004 %eax -> %eax 	[2, 1]
0x733313aa pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x733313ab mov    %eax -> 0xfffffd94(%ebp) 	[1, 1]
0x733313b1 cmp    %eax %ecx 	[2, 0]
0x733313b3 jnbe   $0x73331d4b 	[1, 0]

in dr_basic_block(tag=0x733313b9) 0 0 esp is 0x0012fc04 instr_count=1
0x733313b9 jmp    0x73331d98(,%eax,4) 	[1, 0]

in dr_basic_block(tag=0x733313c0) 0 0 esp is 0x0012fc04 instr_count=8
0x733313c0 or     $0xffffffff 0xfffffde8(%ebp) -> 0xfffffde8(%ebp) 	[2, 1]
0x733313c7 mov    %esi -> 0xfffffd90(%ebp) 	[1, 1]
0x733313cd mov    %esi -> 0xfffffdc0(%ebp) 	[1, 1]
0x733313d3 mov    %esi -> 0xfffffdcc(%ebp) 	[1, 1]
0x733313d9 mov    %esi -> 0xfffffdd0(%ebp) 	[1, 1]
0x733313df mov    %esi -> 0xfffffdf0(%ebp) 	[1, 1]
0x733313e5 mov    %esi -> 0xfffffdc8(%ebp) 	[1, 1]
JMP @  0x733313eb MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331d4b MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331d4b) 0 0 esp is 0x0012fc04 instr_count=5
0x73331d4b mov    0xfffffdc4(%ebp) -> %ebx 	[1, 1]
0x73331d51 mov    (%ebx) -> %al 	[1, 1]
0x73331d53 mov    %al -> 0xfffffdef(%ebp) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x0012fc77  $$$$
0x73331d59 test   %al %al 	[2, 0]
0x73331d5b jz     $0x73331d70 	[1, 0]

in dr_basic_block(tag=0x73331d5d) 0 0 esp is 0x0012fc04 instr_count=4
0x73331d5d mov    0xfffffd94(%ebp) -> %ecx 	[1, 1]
0x73331d63 mov    0xfffffddc(%ebp) -> %edi 	[1, 1]
0x73331d69 mov    %al -> %dl 	[1, 1]
	$$$$ taint reg:49 ---> reg:51  $$$$
JMP @  0x73331d6b MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333136c MSVCR90.dll:vcwprintf_s ??:0
0x7333136c inc    %ebx -> %ebx 	[1, 1]
0x7333136d cmp    0xfffffdd8(%ebp) $0x00000000 	[2, 0]
0x73331374 mov    %ebx -> 0xfffffdc4(%ebp) 	[1, 1]
0x7333137a jl     $0x73331d70 	[1, 0]
0x73331380 mov    %dl -> %al 	[1, 1]
	$$$$ taint reg:51 ---> reg:49  $$$$
0x73331382 sub    $0x20 %al -> %al 	[2, 1]
	$$$$ taint reg:49 ---> reg:49  $$$$
0x73331384 cmp    %al $0x58 	[2, 0]
0x73331386 jnbe   $0x73331399 	[1, 0]
0x73331388 movsx  %dl -> %eax 	[1, 1]
0x7333138b movsx  0x732e1bf0(%eax) -> %eax 	[1, 1]
0x73331392 and    $0x0000000f %eax -> %eax 	[2, 1]
0x73331395 xor    %esi %esi -> %esi 	[2, 1]
JMP @  0x73331397 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333139d MSVCR90.dll:vcwprintf_s ??:0
0x7333139d movsx  0x732e1c10(%ecx,%eax,8) -> %eax 	[1, 1]
0x733313a5 push   $0x00000007 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733313a7 sar    $0x00000004 %eax -> %eax 	[2, 1]
0x733313aa pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x733313ab mov    %eax -> 0xfffffd94(%ebp) 	[1, 1]
0x733313b1 cmp    %eax %ecx 	[2, 0]
0x733313b3 jnbe   $0x73331d4b 	[1, 0]
0x733313b9 jmp    0x73331d98(,%eax,4) 	[1, 0]

in dr_basic_block(tag=0x73331619) 0 0 esp is 0x0012fc04 instr_count=3
0x73331619 movsx  %dl -> %eax 	[1, 1]
0x7333161c cmp    %eax $0x00000064 	[2, 0]
0x7333161f jnle   $0x7333180d 	[1, 0]

in dr_basic_block(tag=0x73331625) 0 0 esp is 0x0012fc04 instr_count=1
0x73331625 jz     $0x733318a4 	[1, 0]

in dr_basic_block(tag=0x733318a4) 0 0 esp is 0x0012fc04 instr_count=5
0x733318a4 or     $0x00000040 0xfffffdf0(%ebp) -> 0xfffffdf0(%ebp) 	[2, 1]
0x733318ab mov    $0x0000000a -> 0xfffffde0(%ebp) 	[1, 1]
0x733318b5 mov    0xfffffdf0(%ebp) -> %ecx 	[1, 1]
0x733318bb test   %ecx $0x00008000 	[2, 0]
0x733318c1 jz     $0x73331a55 	[1, 0]

in dr_basic_block(tag=0x73331a55) 0 0 esp is 0x0012fc04 instr_count=2
0x73331a55 test   %ecx $0x00001000 	[2, 0]
0x73331a5b jnz    $0x733318c7 	[1, 0]

in dr_basic_block(tag=0x73331a61) 0 0 esp is 0x0012fc04 instr_count=3
0x73331a61 add    $0x00000004 %edi -> %edi 	[2, 1]
0x73331a64 test   %cl $0x20 	[2, 0]
0x73331a67 jz     $0x73331a81 	[1, 0]

in dr_basic_block(tag=0x73331a81) 0 0 esp is 0x0012fc04 instr_count=3
0x73331a81 mov    0xfffffffc(%edi) -> %eax 	[1, 1]
0x73331a84 test   %cl $0x40 	[2, 0]
0x73331a87 jz     $0x73331a8c 	[1, 0]

in dr_basic_block(tag=0x73331a89) 0 0 esp is 0x0012fc04 instr_count=2
0x73331a89 cdq    %eax -> %edx 	[1, 1]
JMP @  0x73331a8a MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331a8e MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331a8e) 0 0 esp is 0x0012fc04 instr_count=3
0x73331a8e mov    %edi -> 0xfffffddc(%ebp) 	[1, 1]
0x73331a94 test   %cl $0x40 	[2, 0]
0x73331a97 jz     $0x73331ab4 	[1, 0]

in dr_basic_block(tag=0x73331a99) 0 0 esp is 0x0012fc04 instr_count=2
0x73331a99 cmp    %edx %esi 	[2, 0]
0x73331a9b jnle   $0x73331ab4 	[1, 0]

in dr_basic_block(tag=0x73331a9d) 0 0 esp is 0x0012fc04 instr_count=1
0x73331a9d jl     $0x73331aa3 	[1, 0]

in dr_basic_block(tag=0x73331a9f) 0 0 esp is 0x0012fc04 instr_count=2
0x73331a9f cmp    %eax %esi 	[2, 0]
0x73331aa1 jnb    $0x73331ab4 	[1, 0]

in dr_basic_block(tag=0x73331ab4) 0 0 esp is 0x0012fc04 instr_count=4
0x73331ab4 test   0xfffffdf0(%ebp) $0x00009000 	[2, 0]
0x73331abe mov    %edx -> %ebx 	[1, 1]
0x73331ac0 mov    %eax -> %edi 	[1, 1]
0x73331ac2 jnz    $0x73331ac6 	[1, 0]

in dr_basic_block(tag=0x73331ac4) 0 0 esp is 0x0012fc04 instr_count=3
0x73331ac4 xor    %ebx %ebx -> %ebx 	[2, 1]
0x73331ac6 cmp    0xfffffde8(%ebp) $0x00000000 	[2, 0]
0x73331acd jnl    $0x73331adb 	[1, 0]

in dr_basic_block(tag=0x73331acf) 0 0 esp is 0x0012fc04 instr_count=2
0x73331acf mov    $0x00000001 -> 0xfffffde8(%ebp) 	[1, 1]
JMP @  0x73331ad9 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331af5 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331af5) 0 0 esp is 0x0012fc04 instr_count=3
0x73331af5 mov    %edi -> %eax 	[1, 1]
0x73331af7 or     %ebx %eax -> %eax 	[2, 1]
0x73331af9 jnz    $0x73331b01 	[1, 0]

in dr_basic_block(tag=0x73331b01) 0 0 esp is 0x0012fc04 instr_count=5
0x73331b01 lea    0xfffffff3(%ebp) -> %esi 	[1, 1]
0x73331b04 mov    0xfffffde8(%ebp) -> %eax 	[1, 1]
0x73331b0a dec    0xfffffde8(%ebp) -> 0xfffffde8(%ebp) 	[1, 1]
0x73331b10 test   %eax %eax 	[2, 0]
0x73331b12 jnle   $0x73331b1a 	[1, 0]

in dr_basic_block(tag=0x73331b1a) 0 0 esp is 0x0012fc04 instr_count=7
0x73331b1a mov    0xfffffde0(%ebp) -> %eax 	[1, 1]
0x73331b20 cdq    %eax -> %edx 	[1, 1]
0x73331b21 push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b22 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b23 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b24 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b25 call   $0x7331c2b0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331b25 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c2b0 MSVCR90.dll:strstr ??:0

in dr_basic_block(tag=0x7331c2b0) 0 0 esp is 0x0012fbf0 instr_count=4
0x7331c2b0 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c2b1 mov    0x14(%esp) -> %eax 	[1, 1]
0x7331c2b5 or     %eax %eax -> %eax 	[2, 1]
0x7331c2b7 jnz    $0x7331c2e1 	[1, 0]

in dr_basic_block(tag=0x7331c2b9) 0 0 esp is 0x0012fbec instr_count=15
0x7331c2b9 mov    0x10(%esp) -> %ecx 	[1, 1]
0x7331c2bd mov    0x0c(%esp) -> %eax 	[1, 1]
0x7331c2c1 xor    %edx %edx -> %edx 	[2, 1]
0x7331c2c3 div    %ecx %edx %eax -> %edx %eax 	[3, 2]
0x7331c2c5 mov    %eax -> %ebx 	[1, 1]
0x7331c2c7 mov    0x08(%esp) -> %eax 	[1, 1]
0x7331c2cb div    %ecx %edx %eax -> %edx %eax 	[3, 2]
0x7331c2cd mov    %eax -> %esi 	[1, 1]
0x7331c2cf mov    %ebx -> %eax 	[1, 1]
0x7331c2d1 mul    0x10(%esp) %eax -> %edx %eax 	[2, 2]
0x7331c2d5 mov    %eax -> %ecx 	[1, 1]
0x7331c2d7 mov    %esi -> %eax 	[1, 1]
0x7331c2d9 mul    0x10(%esp) %eax -> %edx %eax 	[2, 2]
0x7331c2dd add    %ecx %edx -> %edx 	[2, 1]
JMP @  0x7331c2df MSVCR90.dll:strstr ??:0
	Into  0x7331c328 MSVCR90.dll:strstr ??:0

in dr_basic_block(tag=0x7331c328) 0 0 esp is 0x0012fbec instr_count=12
0x7331c328 sub    0x08(%esp) %eax -> %eax 	[2, 1]
0x7331c32c sbb    0x0c(%esp) %edx -> %edx 	[2, 1]
0x7331c330 neg    %edx -> %edx 	[1, 1]
0x7331c332 neg    %eax -> %eax 	[1, 1]
0x7331c334 sbb    $0x00000000 %edx -> %edx 	[2, 1]
0x7331c337 mov    %edx -> %ecx 	[1, 1]
0x7331c339 mov    %ebx -> %edx 	[1, 1]
0x7331c33b mov    %ecx -> %ebx 	[1, 1]
0x7331c33d mov    %eax -> %ecx 	[1, 1]
0x7331c33f mov    %esi -> %eax 	[1, 1]
0x7331c341 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x7331c342 MSVCR90.dll:strstr ??:0
	Into 0x73331b2a MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331b2a) 0 0 esp is 0x0012fc04 instr_count=6
0x73331b2a add    $0x00000030 %ecx -> %ecx 	[2, 1]
0x73331b2d cmp    %ecx $0x00000039 	[2, 0]
0x73331b30 mov    %ebx -> 0xfffffda0(%ebp) 	[1, 1]
0x73331b36 mov    %eax -> %edi 	[1, 1]
0x73331b38 mov    %edx -> %ebx 	[1, 1]
0x73331b3a jle    $0x73331b42 	[1, 0]

in dr_basic_block(tag=0x73331b42) 0 0 esp is 0x0012fc04 instr_count=3
0x73331b42 mov    %cl -> (%esi) 	[1, 1]
0x73331b44 dec    %esi -> %esi 	[1, 1]
JMP @  0x73331b45 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331b04 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331b04) 0 0 esp is 0x0012fc04 instr_count=4
0x73331b04 mov    0xfffffde8(%ebp) -> %eax 	[1, 1]
0x73331b0a dec    0xfffffde8(%ebp) -> 0xfffffde8(%ebp) 	[1, 1]
0x73331b10 test   %eax %eax 	[2, 0]
0x73331b12 jnle   $0x73331b1a 	[1, 0]

in dr_basic_block(tag=0x73331b14) 0 0 esp is 0x0012fc04 instr_count=3
0x73331b14 mov    %edi -> %eax 	[1, 1]
0x73331b16 or     %ebx %eax -> %eax 	[2, 1]
0x73331b18 jz     $0x73331b47 	[1, 0]
0x73331b1a mov    0xfffffde0(%ebp) -> %eax 	[1, 1]
0x73331b20 cdq    %eax -> %edx 	[1, 1]
0x73331b21 push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b22 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b23 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b24 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b25 call   $0x7331c2b0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331b25 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c2b0 MSVCR90.dll:strstr ??:0
0x7331c2b0 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c2b1 mov    0x14(%esp) -> %eax 	[1, 1]
0x7331c2b5 or     %eax %eax -> %eax 	[2, 1]
0x7331c2b7 jnz    $0x7331c2e1 	[1, 0]
0x7331c2b9 mov    0x10(%esp) -> %ecx 	[1, 1]
0x7331c2bd mov    0x0c(%esp) -> %eax 	[1, 1]
0x7331c2c1 xor    %edx %edx -> %edx 	[2, 1]
0x7331c2c3 div    %ecx %edx %eax -> %edx %eax 	[3, 2]
0x7331c2c5 mov    %eax -> %ebx 	[1, 1]
0x7331c2c7 mov    0x08(%esp) -> %eax 	[1, 1]
0x7331c2cb div    %ecx %edx %eax -> %edx %eax 	[3, 2]
0x7331c2cd mov    %eax -> %esi 	[1, 1]
0x7331c2cf mov    %ebx -> %eax 	[1, 1]
0x7331c2d1 mul    0x10(%esp) %eax -> %edx %eax 	[2, 2]
0x7331c2d5 mov    %eax -> %ecx 	[1, 1]
0x7331c2d7 mov    %esi -> %eax 	[1, 1]
0x7331c2d9 mul    0x10(%esp) %eax -> %edx %eax 	[2, 2]
0x7331c2dd add    %ecx %edx -> %edx 	[2, 1]
JMP @  0x7331c2df MSVCR90.dll:strstr ??:0
	Into  0x7331c328 MSVCR90.dll:strstr ??:0
0x7331c328 sub    0x08(%esp) %eax -> %eax 	[2, 1]
0x7331c32c sbb    0x0c(%esp) %edx -> %edx 	[2, 1]
0x7331c330 neg    %edx -> %edx 	[1, 1]
0x7331c332 neg    %eax -> %eax 	[1, 1]
0x7331c334 sbb    $0x00000000 %edx -> %edx 	[2, 1]
0x7331c337 mov    %edx -> %ecx 	[1, 1]
0x7331c339 mov    %ebx -> %edx 	[1, 1]
0x7331c33b mov    %ecx -> %ebx 	[1, 1]
0x7331c33d mov    %eax -> %ecx 	[1, 1]
0x7331c33f mov    %esi -> %eax 	[1, 1]
0x7331c341 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x7331c342 MSVCR90.dll:strstr ??:0
	Into 0x73331b2a MSVCR90.dll:vcwprintf_s ??:0
0x73331b2a add    $0x00000030 %ecx -> %ecx 	[2, 1]
0x73331b2d cmp    %ecx $0x00000039 	[2, 0]
0x73331b30 mov    %ebx -> 0xfffffda0(%ebp) 	[1, 1]
0x73331b36 mov    %eax -> %edi 	[1, 1]
0x73331b38 mov    %edx -> %ebx 	[1, 1]
0x73331b3a jle    $0x73331b42 	[1, 0]
0x73331b42 mov    %cl -> (%esi) 	[1, 1]
0x73331b44 dec    %esi -> %esi 	[1, 1]
JMP @  0x73331b45 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331b04 MSVCR90.dll:vcwprintf_s ??:0
0x73331b04 mov    0xfffffde8(%ebp) -> %eax 	[1, 1]
0x73331b0a dec    0xfffffde8(%ebp) -> 0xfffffde8(%ebp) 	[1, 1]
0x73331b10 test   %eax %eax 	[2, 0]
0x73331b12 jnle   $0x73331b1a 	[1, 0]
0x73331b14 mov    %edi -> %eax 	[1, 1]
0x73331b16 or     %ebx %eax -> %eax 	[2, 1]
0x73331b18 jz     $0x73331b47 	[1, 0]
0x73331b1a mov    0xfffffde0(%ebp) -> %eax 	[1, 1]
0x73331b20 cdq    %eax -> %edx 	[1, 1]
0x73331b21 push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b22 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b23 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b24 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331b25 call   $0x7331c2b0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331b25 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331c2b0 MSVCR90.dll:strstr ??:0
0x7331c2b0 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c2b1 mov    0x14(%esp) -> %eax 	[1, 1]
0x7331c2b5 or     %eax %eax -> %eax 	[2, 1]
0x7331c2b7 jnz    $0x7331c2e1 	[1, 0]
0x7331c2b9 mov    0x10(%esp) -> %ecx 	[1, 1]
0x7331c2bd mov    0x0c(%esp) -> %eax 	[1, 1]
0x7331c2c1 xor    %edx %edx -> %edx 	[2, 1]
0x7331c2c3 div    %ecx %edx %eax -> %edx %eax 	[3, 2]
0x7331c2c5 mov    %eax -> %ebx 	[1, 1]
0x7331c2c7 mov    0x08(%esp) -> %eax 	[1, 1]
0x7331c2cb div    %ecx %edx %eax -> %edx %eax 	[3, 2]
0x7331c2cd mov    %eax -> %esi 	[1, 1]
0x7331c2cf mov    %ebx -> %eax 	[1, 1]
0x7331c2d1 mul    0x10(%esp) %eax -> %edx %eax 	[2, 2]
0x7331c2d5 mov    %eax -> %ecx 	[1, 1]
0x7331c2d7 mov    %esi -> %eax 	[1, 1]
0x7331c2d9 mul    0x10(%esp) %eax -> %edx %eax 	[2, 2]
0x7331c2dd add    %ecx %edx -> %edx 	[2, 1]
JMP @  0x7331c2df MSVCR90.dll:strstr ??:0
	Into  0x7331c328 MSVCR90.dll:strstr ??:0
0x7331c328 sub    0x08(%esp) %eax -> %eax 	[2, 1]
0x7331c32c sbb    0x0c(%esp) %edx -> %edx 	[2, 1]
0x7331c330 neg    %edx -> %edx 	[1, 1]
0x7331c332 neg    %eax -> %eax 	[1, 1]
0x7331c334 sbb    $0x00000000 %edx -> %edx 	[2, 1]
0x7331c337 mov    %edx -> %ecx 	[1, 1]
0x7331c339 mov    %ebx -> %edx 	[1, 1]
0x7331c33b mov    %ecx -> %ebx 	[1, 1]
0x7331c33d mov    %eax -> %ecx 	[1, 1]
0x7331c33f mov    %esi -> %eax 	[1, 1]
0x7331c341 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x7331c342 MSVCR90.dll:strstr ??:0
	Into 0x73331b2a MSVCR90.dll:vcwprintf_s ??:0
0x73331b2a add    $0x00000030 %ecx -> %ecx 	[2, 1]
0x73331b2d cmp    %ecx $0x00000039 	[2, 0]
0x73331b30 mov    %ebx -> 0xfffffda0(%ebp) 	[1, 1]
0x73331b36 mov    %eax -> %edi 	[1, 1]
0x73331b38 mov    %edx -> %ebx 	[1, 1]
0x73331b3a jle    $0x73331b42 	[1, 0]
0x73331b42 mov    %cl -> (%esi) 	[1, 1]
0x73331b44 dec    %esi -> %esi 	[1, 1]
JMP @  0x73331b45 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331b04 MSVCR90.dll:vcwprintf_s ??:0
0x73331b04 mov    0xfffffde8(%ebp) -> %eax 	[1, 1]
0x73331b0a dec    0xfffffde8(%ebp) -> 0xfffffde8(%ebp) 	[1, 1]
0x73331b10 test   %eax %eax 	[2, 0]
0x73331b12 jnle   $0x73331b1a 	[1, 0]
0x73331b14 mov    %edi -> %eax 	[1, 1]
0x73331b16 or     %ebx %eax -> %eax 	[2, 1]
0x73331b18 jz     $0x73331b47 	[1, 0]

in dr_basic_block(tag=0x73331b47) 0 0 esp is 0x0012fc04 instr_count=7
0x73331b47 lea    0xfffffff3(%ebp) -> %eax 	[1, 1]
0x73331b4a sub    %esi %eax -> %eax 	[2, 1]
0x73331b4c inc    %esi -> %esi 	[1, 1]
0x73331b4d test   0xfffffdf0(%ebp) $0x00000200 	[2, 0]
0x73331b57 mov    %eax -> 0xfffffde0(%ebp) 	[1, 1]
0x73331b5d mov    %esi -> 0xfffffde4(%ebp) 	[1, 1]
0x73331b63 jz     $0x73331bc6 	[1, 0]

in dr_basic_block(tag=0x73331bc6) 0 0 esp is 0x0012fc04 instr_count=2
0x73331bc6 cmp    0xfffffdc0(%ebp) $0x00000000 	[2, 0]
0x73331bcd jnz    $0x73331d2f 	[1, 0]

in dr_basic_block(tag=0x73331bd3) 0 0 esp is 0x0012fc04 instr_count=3
0x73331bd3 mov    0xfffffdf0(%ebp) -> %eax 	[1, 1]
0x73331bd9 test   %al $0x40 	[2, 0]
0x73331bdb jz     $0x73331c0f 	[1, 0]

in dr_basic_block(tag=0x73331bdd) 0 0 esp is 0x0012fc04 instr_count=2
0x73331bdd test   %eax $0x00000100 	[2, 0]
0x73331be2 jz     $0x73331bed 	[1, 0]

in dr_basic_block(tag=0x73331bed) 0 0 esp is 0x0012fc04 instr_count=2
0x73331bed test   %al $0x01 	[2, 0]
0x73331bef jz     $0x73331bfa 	[1, 0]

in dr_basic_block(tag=0x73331bfa) 0 0 esp is 0x0012fc04 instr_count=2
0x73331bfa test   %al $0x02 	[2, 0]
0x73331bfc jz     $0x73331c0f 	[1, 0]

in dr_basic_block(tag=0x73331c0f) 0 0 esp is 0x0012fc04 instr_count=5
0x73331c0f mov    0xfffffdcc(%ebp) -> %ebx 	[1, 1]
0x73331c15 sub    0xfffffde0(%ebp) %ebx -> %ebx 	[2, 1]
0x73331c1b sub    0xfffffdd0(%ebp) %ebx -> %ebx 	[2, 1]
0x73331c21 test   0xfffffdf0(%ebp) $0x0c 	[2, 0]
0x73331c28 jnz    $0x73331c41 	[1, 0]

in dr_basic_block(tag=0x73331c2a) 0 0 esp is 0x0012fc04 instr_count=5
0x73331c2a push   0xfffffdb4(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331c30 lea    0xfffffdd8(%ebp) -> %eax 	[1, 1]
0x73331c36 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331c37 push   $0x00000020 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331c39 call   $0x73333220 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331c39 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73333220 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73333220) 0 0 esp is 0x0012fbf4 instr_count=6
0x73333220 mov    %edi -> %edi 	[1, 1]
0x73333222 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73333223 mov    %esp -> %ebp 	[1, 1]
0x73333225 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73333226 mov    %eax -> %esi 	[1, 1]
JMP @  0x73333228 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333323d MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7333323d) 0 0 esp is 0x0012fbec instr_count=2
0x7333323d cmp    0x0c(%ebp) $0x00000000 	[2, 0]
0x73333241 jnle   $0x7333322a 	[1, 0]

in dr_basic_block(tag=0x73333243) 0 0 esp is 0x0012fbec instr_count=3
0x73333243 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73333244 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73333245 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331c3e MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331c3e) 0 0 esp is 0x0012fbf8 instr_count=6
0x73331c3e add    $0x0000000c %esp -> %esp 	[2, 1]
0x73331c41 push   0xfffffdd0(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331c47 mov    0xfffffdb4(%ebp) -> %edi 	[1, 1]
0x73331c4d lea    0xfffffdd8(%ebp) -> %eax 	[1, 1]
0x73331c53 lea    0xfffffdd4(%ebp) -> %ecx 	[1, 1]
0x73331c59 call   $0x73331eed %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331c59 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331eed MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331eed) 0 0 esp is 0x0012fbfc instr_count=9
0x73331eed mov    %edi -> %edi 	[1, 1]
0x73331eef push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331ef0 mov    %esp -> %ebp 	[1, 1]
0x73331ef2 test   0x0c(%edi) $0x40 	[2, 0]
0x73331ef6 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331ef7 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331ef8 mov    %eax -> %esi 	[1, 1]
0x73331efa mov    %ecx -> %ebx 	[1, 1]
0x73331efc jz     $0x73331f30 	[1, 0]

in dr_basic_block(tag=0x73331f30) 0 0 esp is 0x0012fbf0 instr_count=2
0x73331f30 cmp    0x08(%ebp) $0x00000000 	[2, 0]
0x73331f34 jnle   $0x73331f0b 	[1, 0]

in dr_basic_block(tag=0x73331f36) 0 0 esp is 0x0012fbf0 instr_count=4
0x73331f36 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73331f37 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x73331f38 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73331f39 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331c5e MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331c5e) 0 0 esp is 0x0012fc00 instr_count=3
0x73331c5e test   0xfffffdf0(%ebp) $0x08 	[2, 0]
0x73331c65 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73331c66 jz     $0x73331c83 	[1, 0]

in dr_basic_block(tag=0x73331c83) 0 0 esp is 0x0012fc04 instr_count=3
0x73331c83 cmp    0xfffffdc8(%ebp) $0x00000000 	[2, 0]
0x73331c8a mov    0xfffffde0(%ebp) -> %eax 	[1, 1]
0x73331c90 jz     $0x73331cf8 	[1, 0]

in dr_basic_block(tag=0x73331cf8) 0 0 esp is 0x0012fc04 instr_count=4
0x73331cf8 mov    0xfffffde4(%ebp) -> %ecx 	[1, 1]
0x73331cfe push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331cff lea    0xfffffdd8(%ebp) -> %eax 	[1, 1]
0x73331d05 call   $0x73331eed %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331d05 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331eed MSVCR90.dll:vcwprintf_s ??:0
0x73331eed mov    %edi -> %edi 	[1, 1]
0x73331eef push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331ef0 mov    %esp -> %ebp 	[1, 1]
0x73331ef2 test   0x0c(%edi) $0x40 	[2, 0]
0x73331ef6 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331ef7 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73331ef8 mov    %eax -> %esi 	[1, 1]
0x73331efa mov    %ecx -> %ebx 	[1, 1]
0x73331efc jz     $0x73331f30 	[1, 0]
0x73331f30 cmp    0x08(%ebp) $0x00000000 	[2, 0]
0x73331f34 jnle   $0x73331f0b 	[1, 0]

in dr_basic_block(tag=0x73331f0b) 0 0 esp is 0x0012fbf0 instr_count=4
0x73331f0b mov    (%ebx) -> %al 	[1, 1]
0x73331f0d dec    0x08(%ebp) -> 0x08(%ebp) 	[1, 1]
0x73331f10 mov    %edi -> %ecx 	[1, 1]
0x73331f12 call   $0x733331e8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331f12 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x733331e8 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x733331e8) 0 0 esp is 0x0012fbec instr_count=2
0x733331e8 test   0x0c(%ecx) $0x40 	[2, 0]
0x733331ec jz     $0x733331f4 	[1, 0]

in dr_basic_block(tag=0x733331f4) 0 0 esp is 0x0012fbec instr_count=2
0x733331f4 dec    0x04(%ecx) -> 0x04(%ecx) 	[1, 1]
0x733331f7 js     $0x73333204 	[1, 0]

in dr_basic_block(tag=0x73333204) 0 0 esp is 0x0012fbec instr_count=4
0x73333204 movsx  %al -> %eax 	[1, 1]
0x73333207 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73333208 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73333209 call   $0x7330f383 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73333209 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7330f383 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f383) 0 0 esp is 0x0012fbe0 instr_count=8
0x7330f383 mov    %edi -> %edi 	[1, 1]
0x7330f385 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f386 mov    %esp -> %ebp 	[1, 1]
0x7330f388 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f389 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f38a mov    0x0c(%ebp) -> %esi 	[1, 1]
0x7330f38d push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f38e call   $0x7330e9d0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f38e MSVCR90.dll:flsbuf ??:0
	Into 0x7330e9d0 MSVCR90.dll:fileno ??:0
0x7330e9d0 mov    %edi -> %edi 	[1, 1]
0x7330e9d2 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d3 mov    %esp -> %ebp 	[1, 1]
0x7330e9d5 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330e9d8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330e9d9 xor    %esi %esi -> %esi 	[2, 1]
0x7330e9db cmp    %eax %esi 	[2, 0]
0x7330e9dd jnz    $0x7330e9fc 	[1, 0]
0x7330e9fc mov    0x10(%eax) -> %eax 	[1, 1]
0x7330e9ff pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330ea00 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330ea01 MSVCR90.dll:fileno ??:0
	Into 0x7330f393 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f393) 0 0 esp is 0x0012fbd0 instr_count=5
0x7330f393 mov    %eax -> 0x0c(%ebp) 	[1, 1]
0x7330f396 mov    0x0c(%esi) -> %eax 	[1, 1]
0x7330f399 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f39a test   %al $0x82 	[2, 0]
0x7330f39c jnz    $0x7330f3b5 	[1, 0]

in dr_basic_block(tag=0x7330f3b5) 0 0 esp is 0x0012fbd4 instr_count=2
0x7330f3b5 test   %al $0x40 	[2, 0]
0x7330f3b7 jz     $0x7330f3c6 	[1, 0]

in dr_basic_block(tag=0x7330f3c6) 0 0 esp is 0x0012fbd4 instr_count=4
0x7330f3c6 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f3c7 xor    %ebx %ebx -> %ebx 	[2, 1]
0x7330f3c9 test   %al $0x01 	[2, 0]
0x7330f3cb jz     $0x7330f3e3 	[1, 0]

in dr_basic_block(tag=0x7330f3e3) 0 0 esp is 0x0012fbd0 instr_count=8
0x7330f3e3 mov    0x0c(%esi) -> %eax 	[1, 1]
0x7330f3e6 and    $0xffffffef %eax -> %eax 	[2, 1]
0x7330f3e9 or     $0x00000002 %eax -> %eax 	[2, 1]
0x7330f3ec mov    %eax -> 0x0c(%esi) 	[1, 1]
0x7330f3ef mov    %ebx -> 0x04(%esi) 	[1, 1]
0x7330f3f2 mov    %ebx -> 0xfffffffc(%ebp) 	[1, 1]
0x7330f3f5 test   %eax $0x0000010c 	[2, 0]
0x7330f3fa jnz    $0x7330f428 	[1, 0]

in dr_basic_block(tag=0x7330f3fc) 0 0 esp is 0x0012fbd0 instr_count=1
0x7330f3fc call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f3fc MSVCR90.dll:flsbuf ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x7330f401 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f401) 0 0 esp is 0x0012fbd0 instr_count=3
0x7330f401 add    $0x00000020 %eax -> %eax 	[2, 1]
0x7330f404 cmp    %esi %eax 	[2, 0]
0x7330f406 jz     $0x7330f414 	[1, 0]

in dr_basic_block(tag=0x7330f414) 0 0 esp is 0x0012fbd0 instr_count=2
0x7330f414 push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f417 call   $0x73349d79 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f417 MSVCR90.dll:flsbuf ??:0
	Into 0x73349d79 MSVCR90.dll:isatty ??:0
0x73349d79 mov    %edi -> %edi 	[1, 1]
0x73349d7b push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73349d7c mov    %esp -> %ebp 	[1, 1]
0x73349d7e mov    0x08(%ebp) -> %eax 	[1, 1]
0x73349d81 cmp    %eax $0xfffffffe 	[2, 0]
0x73349d84 jnz    $0x73349d95 	[1, 0]
0x73349d95 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73349d96 xor    %esi %esi -> %esi 	[2, 1]
0x73349d98 cmp    %eax %esi 	[2, 0]
0x73349d9a jl     $0x73349da4 	[1, 0]
0x73349d9c cmp    %eax 0x7337d688 	[2, 0]
0x73349da2 jb     $0x73349dc0 	[1, 0]
0x73349dc0 mov    %eax -> %ecx 	[1, 1]
0x73349dc2 and    $0x0000001f %eax -> %eax 	[2, 1]
0x73349dc5 sar    $0x00000005 %ecx -> %ecx 	[2, 1]
0x73349dc8 mov    0x7337d6a0(,%ecx,4) -> %ecx 	[1, 1]
0x73349dcf shl    $0x00000006 %eax -> %eax 	[2, 1]
0x73349dd2 movsx  0x04(%ecx,%eax,1) -> %eax 	[1, 1]
0x73349dd7 and    $0x00000040 %eax -> %eax 	[2, 1]
0x73349dda pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73349ddb pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73349ddc MSVCR90.dll:isatty ??:0
	Into 0x7330f41c MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f41c) 0 0 esp is 0x0012fbcc instr_count=3
0x7330f41c pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f41d test   %eax %eax 	[2, 0]
0x7330f41f jnz    $0x7330f428 	[1, 0]

in dr_basic_block(tag=0x7330f421) 0 0 esp is 0x0012fbd0 instr_count=2
0x7330f421 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f422 call   $0x7330f69b %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f422 MSVCR90.dll:flsbuf ??:0
	Into 0x7330f69b MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f69b) 0 0 esp is 0x0012fbc8 instr_count=5
0x7330f69b mov    %edi -> %edi 	[1, 1]
0x7330f69d push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f69e mov    %esp -> %ebp 	[1, 1]
0x7330f6a0 push   $0x00001000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f6a5 call   $0x7334374d %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f6a5 MSVCR90.dll:flsbuf ??:0
	Into 0x7334374d MSVCR90.dll:malloc_crt ??:0
0x7334374d mov    %edi -> %edi 	[1, 1]
0x7334374f push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343750 mov    %esp -> %ebp 	[1, 1]
0x73343752 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343753 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343754 xor    %esi %esi -> %esi 	[2, 1]
0x73343756 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343759 call   $0x73343d3f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73343759 MSVCR90.dll:malloc_crt ??:0
	Into 0x73343d3f MSVCR90.dll:malloc ??:0
0x73343d3f mov    %edi -> %edi 	[1, 1]
0x73343d41 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d42 mov    %esp -> %ebp 	[1, 1]
0x73343d44 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d45 mov    0x08(%ebp) -> %esi 	[1, 1]
0x73343d48 cmp    %esi $0xffffffe0 	[2, 0]
0x73343d4b jnbe   $0x73343dff 	[1, 0]
0x73343d51 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d52 mov    0x732e1170 -> %ebx 	[1, 1]
0x73343d58 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343d59 cmp    0x7337c160 $0x00000000 	[2, 0]
0x73343d60 jnz    $0x73343d7a 	[1, 0]
0x73343d7a mov    0x7337d680 -> %eax 	[1, 1]
0x73343d7f cmp    %eax $0x00000001 	[2, 0]
0x73343d82 jnz    $0x73343d92 	[1, 0]
0x73343d84 test   %esi %esi 	[2, 0]
0x73343d86 jz     $0x73343d8c 	[1, 0]
0x73343d88 mov    %esi -> %eax 	[1, 1]
JMP @  0x73343d8a MSVCR90.dll:malloc ??:0
	Into  0x73343d8f MSVCR90.dll:malloc ??:0
0x73343d8f push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
JMP @  0x73343d90 MSVCR90.dll:malloc ??:0
	Into  0x73343dae MSVCR90.dll:malloc ??:0
0x73343dae push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343db0 push   0x7337c160 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73343db6 call   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73343db6 MSVCR90.dll:malloc ??:0
	Into 0x77872dd6 ntdll.dll:RtlAllocateHeap ??:0
0x73343db8 mov    %eax -> %edi 	[1, 1]
0x73343dba test   %edi %edi 	[2, 0]
0x73343dbc jnz    $0x73343df9 	[1, 0]
0x73343df9 mov    %edi -> %eax 	[1, 1]
0x73343dfb pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x73343dfc pop    %esp (%esp) -> %ebx %esp 	[2, 2]
JMP @  0x73343dfd MSVCR90.dll:malloc ??:0
	Into  0x73343e13 MSVCR90.dll:malloc ??:0
0x73343e13 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73343e14 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73343e15 MSVCR90.dll:malloc ??:0
	Into 0x7334375e MSVCR90.dll:malloc_crt ??:0
0x7334375e mov    %eax -> %edi 	[1, 1]
0x73343760 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73343761 test   %edi %edi 	[2, 0]
0x73343763 jnz    $0x7334378c 	[1, 0]
0x7334378c mov    %edi -> %eax 	[1, 1]
0x7334378e pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334378f pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73343790 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73343791 MSVCR90.dll:malloc_crt ??:0
	Into 0x7330f6aa MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f6aa) 0 0 esp is 0x0012fbc0 instr_count=5
0x7330f6aa pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f6ab mov    0x08(%ebp) -> %ecx 	[1, 1]
0x7330f6ae mov    %eax -> 0x08(%ecx) 	[1, 1]
0x7330f6b1 test   %eax %eax 	[2, 0]
0x7330f6b3 jz     $0x7330f6c2 	[1, 0]

in dr_basic_block(tag=0x7330f6b5) 0 0 esp is 0x0012fbc4 instr_count=3
0x7330f6b5 or     $0x00000008 0x0c(%ecx) -> 0x0c(%ecx) 	[2, 1]
0x7330f6b9 mov    $0x00001000 -> 0x18(%ecx) 	[1, 1]
JMP @  0x7330f6c0 MSVCR90.dll:flsbuf ??:0
	Into  0x7330f6d3 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f6d3) 0 0 esp is 0x0012fbc4 instr_count=5
0x7330f6d3 mov    0x08(%ecx) -> %eax 	[1, 1]
0x7330f6d6 and    $0x00000000 0x04(%ecx) -> 0x04(%ecx) 	[2, 1]
0x7330f6da mov    %eax -> (%ecx) 	[1, 1]
0x7330f6dc pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330f6dd MSVCR90.dll:flsbuf ??:0
	Into 0x7330f427 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f427) 0 0 esp is 0x0012fbcc instr_count=4
0x7330f427 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f428 test   0x0c(%esi) $0x00000108 	[2, 0]
0x7330f42f push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f430 jz     $0x7330f4b6 	[1, 0]

in dr_basic_block(tag=0x7330f436) 0 0 esp is 0x0012fbcc instr_count=10
0x7330f436 mov    0x08(%esi) -> %eax 	[1, 1]
0x7330f439 mov    (%esi) -> %edi 	[1, 1]
0x7330f43b lea    0x01(%eax) -> %ecx 	[1, 1]
0x7330f43e mov    %ecx -> (%esi) 	[1, 1]
0x7330f440 mov    0x18(%esi) -> %ecx 	[1, 1]
0x7330f443 sub    %eax %edi -> %edi 	[2, 1]
0x7330f445 dec    %ecx -> %ecx 	[1, 1]
0x7330f446 cmp    %edi %ebx 	[2, 0]
0x7330f448 mov    %ecx -> 0x04(%esi) 	[1, 1]
0x7330f44b jle    $0x7330f46a 	[1, 0]

in dr_basic_block(tag=0x7330f46a) 0 0 esp is 0x0012fbcc instr_count=3
0x7330f46a mov    0x0c(%ebp) -> %ecx 	[1, 1]
0x7330f46d cmp    %ecx $0xffffffff 	[2, 0]
0x7330f470 jz     $0x7330f48d 	[1, 0]

in dr_basic_block(tag=0x7330f472) 0 0 esp is 0x0012fbcc instr_count=2
0x7330f472 cmp    %ecx $0xfffffffe 	[2, 0]
0x7330f475 jz     $0x7330f48d 	[1, 0]

in dr_basic_block(tag=0x7330f477) 0 0 esp is 0x0012fbcc instr_count=7
0x7330f477 mov    %ecx -> %eax 	[1, 1]
0x7330f479 and    $0x0000001f %eax -> %eax 	[2, 1]
0x7330f47c mov    %ecx -> %edx 	[1, 1]
0x7330f47e sar    $0x00000005 %edx -> %edx 	[2, 1]
0x7330f481 shl    $0x00000006 %eax -> %eax 	[2, 1]
0x7330f484 add    0x7337d6a0(,%edx,4) %eax -> %eax 	[2, 1]
JMP @  0x7330f48b MSVCR90.dll:flsbuf ??:0
	Into  0x7330f492 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f492) 0 0 esp is 0x0012fbcc instr_count=2
0x7330f492 test   0x04(%eax) $0x20 	[2, 0]
0x7330f496 jz     $0x7330f4ac 	[1, 0]

in dr_basic_block(tag=0x7330f4ac) 0 0 esp is 0x0012fbcc instr_count=4
0x7330f4ac mov    0x08(%esi) -> %eax 	[1, 1]
0x7330f4af mov    0x08(%ebp) -> %cl 	[1, 1]
0x7330f4b2 mov    %cl -> (%eax) 	[1, 1]
JMP @  0x7330f4b4 MSVCR90.dll:flsbuf ??:0
	Into  0x7330f4cc MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330f4cc) 0 0 esp is 0x0012fbcc instr_count=2
0x7330f4cc cmp    0xfffffffc(%ebp) %edi 	[2, 0]
0x7330f4cf jz     $0x7330f4da 	[1, 0]

in dr_basic_block(tag=0x7330f4da) 0 0 esp is 0x0012fbcc instr_count=7
0x7330f4da mov    0x08(%ebp) -> %eax 	[1, 1]
0x7330f4dd and    $0x000000ff %eax -> %eax 	[2, 1]
0x7330f4e2 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7330f4e3 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7330f4e4 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7330f4e5 leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x7330f4e6 MSVCR90.dll:flsbuf ??:0
	Into 0x7333320e MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x7333320e) 0 0 esp is 0x0012fbe4 instr_count=4
0x7333320e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7333320f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73333210 cmp    %eax $0xffffffff 	[2, 0]
0x73333213 jnz    $0x73333218 	[1, 0]

in dr_basic_block(tag=0x73333218) 0 0 esp is 0x0012fbec instr_count=2
0x73333218 inc    (%esi) -> (%esi) 	[1, 1]
[RETURN @ ] 0x7333321a MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331f17 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331f17) 0 0 esp is 0x0012fbf0 instr_count=3
0x73331f17 inc    %ebx -> %ebx 	[1, 1]
0x73331f18 cmp    (%esi) $0xffffffff 	[2, 0]
0x73331f1b jnz    $0x73331f30 	[1, 0]
0x73331f30 cmp    0x08(%ebp) $0x00000000 	[2, 0]
0x73331f34 jnle   $0x73331f0b 	[1, 0]
0x73331f0b mov    (%ebx) -> %al 	[1, 1]
0x73331f0d dec    0x08(%ebp) -> 0x08(%ebp) 	[1, 1]
0x73331f10 mov    %edi -> %ecx 	[1, 1]
0x73331f12 call   $0x733331e8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331f12 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x733331e8 MSVCR90.dll:vcwprintf_s ??:0
0x733331e8 test   0x0c(%ecx) $0x40 	[2, 0]
0x733331ec jz     $0x733331f4 	[1, 0]
0x733331f4 dec    0x04(%ecx) -> 0x04(%ecx) 	[1, 1]
0x733331f7 js     $0x73333204 	[1, 0]

in dr_basic_block(tag=0x733331f9) 0 0 esp is 0x0012fbec instr_count=5
0x733331f9 mov    (%ecx) -> %edx 	[1, 1]
0x733331fb mov    %al -> (%edx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x00506fe9  $$$$
0x733331fd inc    (%ecx) -> (%ecx) 	[1, 1]
0x733331ff movzx  %al -> %eax 	[1, 1]
JMP @  0x73333202 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73333210 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73333210) 0 0 esp is 0x0012fbec instr_count=2
0x73333210 cmp    %eax $0xffffffff 	[2, 0]
0x73333213 jnz    $0x73333218 	[1, 0]
0x73333218 inc    (%esi) -> (%esi) 	[1, 1]
[RETURN @ ] 0x7333321a MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331f17 MSVCR90.dll:vcwprintf_s ??:0
0x73331f17 inc    %ebx -> %ebx 	[1, 1]
0x73331f18 cmp    (%esi) $0xffffffff 	[2, 0]
0x73331f1b jnz    $0x73331f30 	[1, 0]
0x73331f30 cmp    0x08(%ebp) $0x00000000 	[2, 0]
0x73331f34 jnle   $0x73331f0b 	[1, 0]
0x73331f0b mov    (%ebx) -> %al 	[1, 1]
0x73331f0d dec    0x08(%ebp) -> 0x08(%ebp) 	[1, 1]
0x73331f10 mov    %edi -> %ecx 	[1, 1]
0x73331f12 call   $0x733331e8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331f12 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x733331e8 MSVCR90.dll:vcwprintf_s ??:0
0x733331e8 test   0x0c(%ecx) $0x40 	[2, 0]
0x733331ec jz     $0x733331f4 	[1, 0]
0x733331f4 dec    0x04(%ecx) -> 0x04(%ecx) 	[1, 1]
0x733331f7 js     $0x73333204 	[1, 0]
0x733331f9 mov    (%ecx) -> %edx 	[1, 1]
0x733331fb mov    %al -> (%edx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x00506fea  $$$$
0x733331fd inc    (%ecx) -> (%ecx) 	[1, 1]
0x733331ff movzx  %al -> %eax 	[1, 1]
JMP @  0x73333202 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73333210 MSVCR90.dll:vcwprintf_s ??:0
0x73333210 cmp    %eax $0xffffffff 	[2, 0]
0x73333213 jnz    $0x73333218 	[1, 0]
0x73333218 inc    (%esi) -> (%esi) 	[1, 1]
[RETURN @ ] 0x7333321a MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331f17 MSVCR90.dll:vcwprintf_s ??:0
0x73331f17 inc    %ebx -> %ebx 	[1, 1]
0x73331f18 cmp    (%esi) $0xffffffff 	[2, 0]
0x73331f1b jnz    $0x73331f30 	[1, 0]
0x73331f30 cmp    0x08(%ebp) $0x00000000 	[2, 0]
0x73331f34 jnle   $0x73331f0b 	[1, 0]
0x73331f36 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73331f37 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x73331f38 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73331f39 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331d0a MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331d0a) 0 0 esp is 0x0012fc00 instr_count=3
0x73331d0a pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x73331d0b cmp    0xfffffdd8(%ebp) $0x00000000 	[2, 0]
0x73331d12 jl     $0x73331d2f 	[1, 0]

in dr_basic_block(tag=0x73331d14) 0 0 esp is 0x0012fc04 instr_count=2
0x73331d14 test   0xfffffdf0(%ebp) $0x04 	[2, 0]
0x73331d1b jz     $0x73331d2f 	[1, 0]

in dr_basic_block(tag=0x73331d2f) 0 0 esp is 0x0012fc04 instr_count=2
0x73331d2f cmp    0xfffffdbc(%ebp) $0x00000000 	[2, 0]
0x73331d36 jz     $0x73331d4b 	[1, 0]
0x73331d4b mov    0xfffffdc4(%ebp) -> %ebx 	[1, 1]
0x73331d51 mov    (%ebx) -> %al 	[1, 1]
0x73331d53 mov    %al -> 0xfffffdef(%ebp) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x0012fc77  $$$$
0x73331d59 test   %al %al 	[2, 0]
0x73331d5b jz     $0x73331d70 	[1, 0]
0x73331d5d mov    0xfffffd94(%ebp) -> %ecx 	[1, 1]
0x73331d63 mov    0xfffffddc(%ebp) -> %edi 	[1, 1]
0x73331d69 mov    %al -> %dl 	[1, 1]
	$$$$ taint reg:49 ---> reg:51  $$$$
JMP @  0x73331d6b MSVCR90.dll:vcwprintf_s ??:0
	Into  0x7333136c MSVCR90.dll:vcwprintf_s ??:0
0x7333136c inc    %ebx -> %ebx 	[1, 1]
0x7333136d cmp    0xfffffdd8(%ebp) $0x00000000 	[2, 0]
0x73331374 mov    %ebx -> 0xfffffdc4(%ebp) 	[1, 1]
0x7333137a jl     $0x73331d70 	[1, 0]
0x73331380 mov    %dl -> %al 	[1, 1]
	$$$$ taint reg:51 ---> reg:49  $$$$
0x73331382 sub    $0x20 %al -> %al 	[2, 1]
	$$$$ taint reg:49 ---> reg:49  $$$$
0x73331384 cmp    %al $0x58 	[2, 0]
0x73331386 jnbe   $0x73331399 	[1, 0]

in dr_basic_block(tag=0x73331399) 0 0 esp is 0x0012fc04 instr_count=9
0x73331399 xor    %esi %esi -> %esi 	[2, 1]
0x7333139b xor    %eax %eax -> %eax 	[2, 1]
0x7333139d movsx  0x732e1c10(%ecx,%eax,8) -> %eax 	[1, 1]
0x733313a5 push   $0x00000007 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733313a7 sar    $0x00000004 %eax -> %eax 	[2, 1]
0x733313aa pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x733313ab mov    %eax -> 0xfffffd94(%ebp) 	[1, 1]
0x733313b1 cmp    %eax %ecx 	[2, 0]
0x733313b3 jnbe   $0x73331d4b 	[1, 0]
0x733313b9 jmp    0x73331d98(,%eax,4) 	[1, 0]

in dr_basic_block(tag=0x733315bf) 0 0 esp is 0x0012fc04 instr_count=6
0x733315bf lea    0xfffffda4(%ebp) -> %eax 	[1, 1]
0x733315c5 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733315c6 movzx  %dl -> %eax 	[1, 1]
0x733315c9 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733315ca mov    %esi -> 0xfffffdc8(%ebp) 	[1, 1]
0x733315d0 call   $0x7331ccef %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733315d0 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7331ccef MSVCR90.dll:isleadbyte_l ??:0

in dr_basic_block(tag=0x7331ccef) 0 0 esp is 0x0012fbf8 instr_count=7
0x7331ccef mov    %edi -> %edi 	[1, 1]
0x7331ccf1 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331ccf2 mov    %esp -> %ebp 	[1, 1]
0x7331ccf4 sub    $0x00000010 %esp -> %esp 	[2, 1]
0x7331ccf7 push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331ccfa lea    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7331ccfd call   $0x7331c3f4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331ccfd MSVCR90.dll:isleadbyte_l ??:0
	Into 0x7331c3f4 MSVCR90.dll:strstr ??:0
0x7331c3f4 mov    %edi -> %edi 	[1, 1]
0x7331c3f6 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3f7 mov    %esp -> %ebp 	[1, 1]
0x7331c3f9 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7331c3fc push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331c3fd mov    %ecx -> %esi 	[1, 1]
0x7331c3ff mov    $0x00 -> 0x0c(%esi) 	[1, 1]
0x7331c403 test   %eax %eax 	[2, 0]
0x7331c405 jnz    $0x7331c46a 	[1, 0]

in dr_basic_block(tag=0x7331c46a) 0 0 esp is 0x0012fbd4 instr_count=8
0x7331c46a mov    (%eax) -> %ecx 	[1, 1]
0x7331c46c mov    %ecx -> (%esi) 	[1, 1]
0x7331c46e mov    0x04(%eax) -> %eax 	[1, 1]
0x7331c471 mov    %eax -> 0x04(%esi) 	[1, 1]
0x7331c474 mov    %esi -> %eax 	[1, 1]
0x7331c476 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7331c477 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7331c478 MSVCR90.dll:strstr ??:0
	Into 0x7331cd02 MSVCR90.dll:isleadbyte_l ??:0

in dr_basic_block(tag=0x7331cd02) 0 0 esp is 0x0012fbe4 instr_count=7
0x7331cd02 movzx  0x08(%ebp) -> %eax 	[1, 1]
0x7331cd06 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7331cd09 mov    0x000000c8(%ecx) -> %ecx 	[1, 1]
0x7331cd0f movzx  (%ecx,%eax,2) -> %eax 	[1, 1]
0x7331cd13 and    $0x00008000 %eax -> %eax 	[2, 1]
0x7331cd18 cmp    0xfffffffc(%ebp) $0x00 	[2, 0]
0x7331cd1c jz     $0x7331cd25 	[1, 0]

in dr_basic_block(tag=0x7331cd25) 0 0 esp is 0x0012fbe4 instr_count=2
0x7331cd25 leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x7331cd26 MSVCR90.dll:isleadbyte_l ??:0
	Into 0x733315d5 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x733315d5) 0 0 esp is 0x0012fbfc instr_count=5
0x733315d5 pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x733315d6 test   %eax %eax 	[2, 0]
0x733315d8 mov    0xfffffdef(%ebp) -> %al 	[1, 1]
	$$$$ taint mem:0x0012fc77 ---> reg:49  $$$$
0x733315de pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x733315df jz     $0x73331603 	[1, 0]

in dr_basic_block(tag=0x73331603) 0 0 esp is 0x0012fc04 instr_count=3
0x73331603 mov    0xfffffdb4(%ebp) -> %ecx 	[1, 1]
0x73331609 lea    0xfffffdd8(%ebp) -> %esi 	[1, 1]
0x7333160f call   $0x733331e8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7333160f MSVCR90.dll:vcwprintf_s ??:0
	Into 0x733331e8 MSVCR90.dll:vcwprintf_s ??:0
0x733331e8 test   0x0c(%ecx) $0x40 	[2, 0]
0x733331ec jz     $0x733331f4 	[1, 0]
0x733331f4 dec    0x04(%ecx) -> 0x04(%ecx) 	[1, 1]
0x733331f7 js     $0x73333204 	[1, 0]
0x733331f9 mov    (%ecx) -> %edx 	[1, 1]
0x733331fb mov    %al -> (%edx) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x00506feb  $$$$
0x733331fd inc    (%ecx) -> (%ecx) 	[1, 1]
0x733331ff movzx  %al -> %eax 	[1, 1]
JMP @  0x73333202 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73333210 MSVCR90.dll:vcwprintf_s ??:0
0x73333210 cmp    %eax $0xffffffff 	[2, 0]
0x73333213 jnz    $0x73333218 	[1, 0]
0x73333218 inc    (%esi) -> (%esi) 	[1, 1]
[RETURN @ ] 0x7333321a MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73331614 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331614) 0 0 esp is 0x0012fc04 instr_count=1
JMP @  0x73331614 MSVCR90.dll:vcwprintf_s ??:0
	Into  0x73331d4b MSVCR90.dll:vcwprintf_s ??:0
0x73331d4b mov    0xfffffdc4(%ebp) -> %ebx 	[1, 1]
0x73331d51 mov    (%ebx) -> %al 	[1, 1]
0x73331d53 mov    %al -> 0xfffffdef(%ebp) 	[1, 1]
	$$$$ taint reg:49 ---> mem:0x0012fc77  $$$$
0x73331d59 test   %al %al 	[2, 0]
0x73331d5b jz     $0x73331d70 	[1, 0]

in dr_basic_block(tag=0x73331d70) 0 0 esp is 0x0012fc04 instr_count=2
0x73331d70 cmp    0xfffffdb0(%ebp) $0x00 	[2, 0]
0x73331d77 jz     $0x73331d83 	[1, 0]

in dr_basic_block(tag=0x73331d79) 0 0 esp is 0x0012fc04 instr_count=9
0x73331d79 mov    0xfffffdac(%ebp) -> %eax 	[1, 1]
0x73331d7f and    $0xfffffffd 0x70(%eax) -> 0x70(%eax) 	[2, 1]
0x73331d83 mov    0xfffffdd8(%ebp) -> %eax 	[1, 1]
0x73331d89 mov    0xfffffffc(%ebp) -> %ecx 	[1, 1]
0x73331d8c pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x73331d8d pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x73331d8e xor    %ebp %ecx -> %ecx 	[2, 1]
0x73331d90 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x73331d91 call   $0x7334dbbe %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73331d91 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x7334dbbe MSVCR90.dll:rand_s ??:0
0x7334dbbe cmp    %ecx 0x7337a2a8 	[2, 0]
0x7334dbc4 jnz    $0x7334dbc8 	[1, 0]
[RETURN @ ] 0x7334dbc6 MSVCR90.dll:rand_s ??:0
	Into 0x73331d96 MSVCR90.dll:vcwprintf_s ??:0

in dr_basic_block(tag=0x73331d96) 0 0 esp is 0x0012fc10 instr_count=2
0x73331d96 leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x73331d97 MSVCR90.dll:vcwprintf_s ??:0
	Into 0x73312134 MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x73312134) 0 0 esp is 0x0012fe90 instr_count=2
0x73312134 mov    %eax -> 0xffffffe4(%ebp) 	[1, 1]
0x73312137 call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312137 MSVCR90.dll:printf ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x7331213c MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331213c) 0 0 esp is 0x0012fe90 instr_count=4
0x7331213c add    %ebx %eax -> %eax 	[2, 1]
0x7331213e push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7331213f push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312140 call   $0x7330fa46 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312140 MSVCR90.dll:printf ??:0
	Into 0x7330fa46 MSVCR90.dll:flsbuf ??:0

in dr_basic_block(tag=0x7330fa46) 0 0 esp is 0x0012fe84 instr_count=5
0x7330fa46 mov    %edi -> %edi 	[1, 1]
0x7330fa48 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330fa49 mov    %esp -> %ebp 	[1, 1]
0x7330fa4b cmp    0x08(%ebp) $0x00000000 	[2, 0]
0x7330fa4f jz     $0x7330fa78 	[1, 0]

in dr_basic_block(tag=0x7330fa78) 0 0 esp is 0x0012fe80 instr_count=2
0x7330fa78 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330fa79 MSVCR90.dll:flsbuf ??:0
	Into 0x73312145 MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x73312145) 0 0 esp is 0x0012fe88 instr_count=3
0x73312145 add    $0x00000018 %esp -> %esp 	[2, 1]
0x73312148 mov    $0xfffffffe -> 0xfffffffc(%ebp) 	[1, 1]
0x7331214f call   $0x7331215d %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331214f MSVCR90.dll:printf ??:0
	Into 0x7331215d MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331215d) 0 0 esp is 0x0012fe9c instr_count=1
0x7331215d call   $0x7330f1c3 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7331215d MSVCR90.dll:printf ??:0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x73312162 MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x73312162) 0 0 esp is 0x0012fe9c instr_count=4
0x73312162 add    $0x00000020 %eax -> %eax 	[2, 1]
0x73312165 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312166 push   $0x00000001 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73312168 call   $0x7330f34f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312168 MSVCR90.dll:printf ??:0
	Into 0x7330f34f MSVCR90.dll:unlock_file ??:0
0x7330f34f mov    %edi -> %edi 	[1, 1]
0x7330f351 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f352 mov    %esp -> %ebp 	[1, 1]
0x7330f354 mov    0x08(%ebp) -> %ecx 	[1, 1]
0x7330f357 cmp    %ecx $0x00000014 	[2, 0]
0x7330f35a mov    0x0c(%ebp) -> %eax 	[1, 1]
0x7330f35d jnl    $0x7330f372 	[1, 0]
0x7330f35f and    $0xffff7fff 0x0c(%eax) -> 0x0c(%eax) 	[2, 1]
0x7330f366 add    $0x00000010 %ecx -> %ecx 	[2, 1]
0x7330f369 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330f36a call   $0x73302e16 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7330f36a MSVCR90.dll:unlock_file ??:0
	Into 0x73302e16 MSVCR90.dll:unlock ??:0
0x73302e16 mov    %edi -> %edi 	[1, 1]
0x73302e18 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302e19 mov    %esp -> %ebp 	[1, 1]
0x73302e1b mov    0x08(%ebp) -> %eax 	[1, 1]
0x73302e1e push   0x733770c0(,%eax,8) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73302e25 call   0x732e1044 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73302e25 MSVCR90.dll:unlock ??:0
	Into 0x77867750 ntdll.dll:RtlLeaveCriticalSection ??:0
0x73302e2b pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73302e2c MSVCR90.dll:unlock ??:0
	Into 0x7330f36f MSVCR90.dll:unlock_file ??:0
0x7330f36f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7330f370 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7330f371 MSVCR90.dll:unlock_file ??:0
	Into 0x7331216d MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331216d) 0 0 esp is 0x0012fe94 instr_count=3
0x7331216d pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7331216e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x7331216f MSVCR90.dll:printf ??:0
	Into 0x73312154 MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x73312154) 0 0 esp is 0x0012fea0 instr_count=2
0x73312154 mov    0xffffffe4(%ebp) -> %eax 	[1, 1]
0x73312157 call   $0x7334cf45 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73312157 MSVCR90.dll:printf ??:0
	Into 0x7334cf45 MSVCR90.dll:_dllonexit ??:0
0x7334cf45 mov    0xfffffff0(%ebp) -> %ecx 	[1, 1]
0x7334cf48 mov    %ecx -> %fs:0x00 	[1, 1]
0x7334cf4f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x7334cf50 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf51 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334cf52 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334cf53 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334cf54 mov    %ebp -> %esp 	[1, 1]
0x7334cf56 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
0x7334cf57 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[RETURN @ ] 0x7334cf58 MSVCR90.dll:_dllonexit ??:0
	Into 0x7331215c MSVCR90.dll:printf ??:0

in dr_basic_block(tag=0x7331215c) 0 0 esp is 0x0012fed0 instr_count=1
[RETURN @ ] 0x7331215c MSVCR90.dll:printf ??:0
	Into 0x00401023 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:24+0x0

in dr_basic_block(tag=0x00401023) 0 0 esp is 0x0012fed4 instr_count=1
0x00401023 call   0x004020a8 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401023 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:24+0x0
	Into 0x7330f1c3 MSVCR90.dll:_iob_func ??:0
0x7330f1c3 mov    $0x733773a8 -> %eax 	[1, 1]
[RETURN @ ] 0x7330f1c8 MSVCR90.dll:_iob_func ??:0
	Into 0x00401029 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:24+0x6

in dr_basic_block(tag=0x00401029) 0 0 esp is 0x0012fed4 instr_count=6
0x00401029 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040102a mov    0x0c(%esp) -> %eax 	[1, 1]
0x0040102e push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040102f lea    0x14(%esp) -> %ecx 	[1, 1]
0x00401033 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401034 call   0x004020ac %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401034 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:24+0x11
	Into 0x7330e568 MSVCR90.dll:fgets ??:0
-------------------------------------------
0x00401034 call MSVCR90.dll:fgets 0x7330e568 and return 0x0040103a
-------------------------------------------
Buffer address 0x0012fee0
Buffer size 0x00000078
Function return status 0x0012fee0
Read Size 0x00000078

in dr_basic_block(tag=0x0040103a) 0 0 esp is 0x0012fec8 instr_count=10
0x0040103a mov    0x14(%esp) -> %eax 	[1, 1]
0x0040103e add    $0x00000014 %esp -> %esp 	[2, 1]
0x00401041 push   $0x00000000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401043 lea    0x04(%esp) -> %edx 	[1, 1]
0x00401047 push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401048 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401049 lea    0x10(%esp) -> %ecx 	[1, 1]
	$$$$ taint mem:0x0012fee0 ---> reg:18  $$$$
0x0040104d push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x0040104e push   $0xfffffff6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401050 call   0x00402004 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401050 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:26+0x16
	Into 0x77638e87 KERNEL32.dll:GetStdHandle ??:0

in dr_basic_block(tag=0x00401056) 0 0 esp is 0x0012fecc instr_count=2
0x00401056 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401057 call   0x00402000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401057 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:26+0x1d
	Into 0x77629bae KERNEL32.dll:ReadFile ??:0
-------------------------------------------
0x00401057 call KERNEL32.dll:ReadFile 0x77629bae and return 0x0040105d
-------------------------------------------
Buffer address 0x0012fee0
Buffer size 0x00000078
Function return status 0x00000001
Read Size 0x00000013

in dr_basic_block(tag=0x0040105d) 0 0 esp is 0x0012fedc instr_count=9
0x0040105d lea    0x04(%esp) -> %eax 	[1, 1]
	$$$$ taint mem:0x0012fee0 ---> reg:17  $$$$
0x00401061 mov    %esi -> %edx 	[1, 1]
0x00401063 mov    %eax -> %ecx 	[1, 1]
	$$$$ taint reg:17 ---> reg:18  $$$$
0x00401065 sub    %ecx %edx -> %edx 	[2, 1]
	$$$$ taint reg:18 ---> reg:19  $$$$
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee0 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff30  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]

in dr_basic_block(tag=0x00401067) 0 0 esp is 0x0012fedc instr_count=5
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee1 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff31  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee2 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff32  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee3 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff33  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee4 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff34  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee5 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff35  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee6 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff36  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee7 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff37  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee8 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff38  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fee9 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff39  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012feea ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff3a  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012feeb ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff3b  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012feec ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff3c  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012feed ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff3d  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012feee ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff3e  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012feef ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff3f  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fef0 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff40  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fef1 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff41  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fef2 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff42  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]
0x00401067 mov    (%eax) -> %cl 	[1, 1]
	$$$$ taint mem:0x0012fef3 ---> reg:50  $$$$
0x00401069 mov    %cl -> (%edx,%eax,1) 	[1, 1]
	$$$$ taint reg:50 ---> mem:0x0012ff43  $$$$
0x0040106c inc    %eax -> %eax 	[1, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x0040106d test   %cl %cl 	[2, 0]
0x0040106f jnz    $0x00401067 	[1, 0]

in dr_basic_block(tag=0x00401071) 0 0 esp is 0x0012fedc instr_count=2
0x00401071 mov    0x10(%esi) -> %edx 	[1, 1]
	$$$$ taint mem:0x0012ff40 ---> reg:19  $$$$
0x00401074 call   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 19 $000a3930
[CALL @ ] 0x00401074 tttt0.exe:test123 c:\users\yw\desktop\tttt\tttt\tttt.cpp:32+0x3
	Into 0x000a3930 ? ??:0

in dr_basic_block(tag=0x00430036) 0 0 esp is 0x0012fbd0 instr_count=3
0x77867048 jmp    $0x00430031 	[1, 0]
0x77867049 in     $0x8f -> %al 	[1, 1]
JMP @  0x7786704d ntdll.dll:KiUserExceptionDispatcher ??:0
	Into  0x7786704d ntdll.dll:KiUserExceptionDispatcher ??:0

in dr_basic_block(tag=0x004017b5) 0 0 esp is 0x0012faf0 instr_count=10
0x004017b5 mov    %edi -> %edi 	[1, 1]
0x004017b7 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017b8 mov    %esp -> %ebp 	[1, 1]
0x004017ba push   0x14(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017bd push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017c0 push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017c3 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017c6 push   $0x004010cd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017cb push   $0x00403000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017d0 call   $0x004018bc %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x004017d0 tttt0.exe:_except_handler4 ??:0
	Into 0x004018bc tttt0.exe:except_handler4_common ??:0

in dr_basic_block(tag=0x004018bc) 0 0 esp is 0x0012fad0 instr_count=1
0x004018bc jmp    0x00402078 	[1, 0]

in dr_basic_block(tag=0x73351850) 0 0 esp is 0x0012fad0 instr_count=17
0x73351850 mov    %edi -> %edi 	[1, 1]
0x73351852 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73351853 mov    %esp -> %ebp 	[1, 1]
0x73351855 sub    $0x00000018 %esp -> %esp 	[2, 1]
0x73351858 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7335185b push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335185c mov    0x14(%ebp) -> %ebx 	[1, 1]
0x7335185f push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73351860 mov    0x08(%ebx) -> %esi 	[1, 1]
0x73351863 xor    (%eax) %esi -> %esi 	[2, 1]
0x73351865 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73351866 mov    (%esi) -> %eax 	[1, 1]
0x73351868 mov    $0x00 -> 0xffffffff(%ebp) 	[1, 1]
0x7335186c mov    $0x00000001 -> 0xfffffff4(%ebp) 	[1, 1]
0x73351873 lea    0x10(%ebx) -> %edi 	[1, 1]
0x73351876 cmp    %eax $0xfffffffe 	[2, 0]
0x73351879 jz     $0x73351886 	[1, 0]

in dr_basic_block(tag=0x73351886) 0 0 esp is 0x0012faa8 instr_count=5
0x73351886 mov    0x0c(%esi) -> %ecx 	[1, 1]
0x73351889 mov    0x08(%esi) -> %edx 	[1, 1]
0x7335188c add    %edi %ecx -> %ecx 	[2, 1]
	$$$$ taint reg:18 ---> reg:18  $$$$
0x7335188e xor    (%edx,%edi,1) %ecx -> %ecx 	[2, 1]
	$$$$ taint mem:0x0012ff58 ---> reg:18  $$$$
0x73351891 call   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73351891 MSVCR90.dll:except_handler4_common ??:0
	Into 0x004010cd tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:52+0x0

in dr_basic_block(tag=0x004010cd) 0 0 esp is 0x0012faa4 instr_count=2
0x004010cd cmp    %ecx 0x00403000 	[2, 0]
0x004010d3 jnz    $0x004010d7 	[1, 0]

in dr_basic_block(tag=0x004010d5) 0 0 esp is 0x0012faa4 instr_count=1
[RETURN @ ] 0x004010d5 tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:57+0x0
	Into 0x73351894 MSVCR90.dll:except_handler4_common ??:0

in dr_basic_block(tag=0x73351894) 0 0 esp is 0x0012faa8 instr_count=3
0x73351894 mov    0x10(%ebp) -> %eax 	[1, 1]
0x73351897 test   0x04(%eax) $0x66 	[2, 0]
0x7335189b jnz    $0x733519b3 	[1, 0]

in dr_basic_block(tag=0x733518a1) 0 0 esp is 0x0012faa8 instr_count=8
0x733518a1 lea    0xffffffe8(%ebp) -> %ecx 	[1, 1]
0x733518a4 mov    %ecx -> 0xfffffffc(%ebx) 	[1, 1]
	$$$$ taint reg:18 ---> mem:0x0012ff74  $$$$
0x733518a7 mov    0x0c(%ebx) -> %ebx 	[1, 1]
0x733518aa mov    %eax -> 0xffffffe8(%ebp) 	[1, 1]
	$$$$ taint reg:17 ---> mem:0x0012fab4  $$$$
0x733518ad mov    0x18(%ebp) -> %eax 	[1, 1]
0x733518b0 mov    %eax -> 0xffffffec(%ebp) 	[1, 1]
	$$$$ taint reg:17 ---> mem:0x0012fab8  $$$$
0x733518b3 cmp    %ebx $0xfffffffe 	[2, 0]
0x733518b6 jz     $0x73351918 	[1, 0]

in dr_basic_block(tag=0x733518b8) 0 0 esp is 0x0012faa8 instr_count=1
JMP @  0x733518b8 MSVCR90.dll:except_handler4_common ??:0
	Into  0x733518c0 MSVCR90.dll:except_handler4_common ??:0

in dr_basic_block(tag=0x733518c0) 0 0 esp is 0x0012faa8 instr_count=8
0x733518c0 lea    (%ebx,%ebx,2) -> %edx 	[1, 1]
0x733518c3 mov    0x14(%esi,%edx,4) -> %ecx 	[1, 1]
0x733518c7 lea    0x10(%esi,%edx,4) -> %eax 	[1, 1]
0x733518cb mov    %eax -> 0xfffffff0(%ebp) 	[1, 1]
	$$$$ taint reg:17 ---> mem:0x0012fabc  $$$$
0x733518ce mov    (%eax) -> %eax 	[1, 1]
0x733518d0 mov    %eax -> 0xfffffff8(%ebp) 	[1, 1]
	$$$$ taint reg:17 ---> mem:0x0012fac4  $$$$
0x733518d3 test   %ecx %ecx 	[2, 0]
0x733518d5 jz     $0x733518eb 	[1, 0]

in dr_basic_block(tag=0x733518d7) 0 0 esp is 0x0012faa8 instr_count=2
0x733518d7 mov    %edi -> %edx 	[1, 1]
0x733518d9 call   $0x7334f902 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733518d9 MSVCR90.dll:except_handler4_common ??:0
	Into 0x7334f902 MSVCR90.dll:seh_longjmp_unwind4 ??:0

in dr_basic_block(tag=0x7334f902) 0 0 esp is 0x0012faa4 instr_count=11
0x7334f902 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f903 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f904 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f905 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f906 mov    %edx -> %ebp 	[1, 1]
	$$$$ taint reg:19 ---> reg:22  $$$$
0x7334f908 xor    %eax %eax -> %eax 	[2, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x7334f90a xor    %ebx %ebx -> %ebx 	[2, 1]
0x7334f90c xor    %edx %edx -> %edx 	[2, 1]
	$$$$ taint reg:19 ---> reg:19  $$$$
0x7334f90e xor    %esi %esi -> %esi 	[2, 1]
0x7334f910 xor    %edi %edi -> %edi 	[2, 1]
0x7334f912 call   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 18 $0040124d
[CALL @ ] 0x7334f912 MSVCR90.dll:seh_longjmp_unwind4 ??:0
	Into 0x0040124d tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:599+0x0

in dr_basic_block(tag=0x0040124d) 0 0 esp is 0x0012fa90 instr_count=7
0x0040124d mov    0xffffffec(%ebp) -> %eax 	[1, 1]
	$$$$ taint mem:0x0012ff74 ---> reg:17  $$$$
0x00401250 mov    (%eax) -> %ecx 	[1, 1]
	$$$$ taint mem:0x0012fab4 ---> reg:18  $$$$
0x00401252 mov    (%ecx) -> %ecx 	[1, 1]
0x00401254 mov    %ecx -> 0xffffffe0(%ebp) 	[1, 1]
	$$$$ taint reg:18 ---> mem:0x0012ff68  $$$$
0x00401257 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401258 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401259 call   $0x004015ec %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x00401259 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:599+0xc
	Into 0x004015ec tttt0.exe:XcptFilter ??:0

in dr_basic_block(tag=0x004015ec) 0 0 esp is 0x0012fa84 instr_count=1
0x004015ec jmp    0x00402090 	[1, 0]

in dr_basic_block(tag=0x7334cf88) 0 0 esp is 0x0012fa84 instr_count=7
0x7334cf88 mov    %edi -> %edi 	[1, 1]
0x7334cf8a push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf8b mov    %esp -> %ebp 	[1, 1]
0x7334cf8d push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf8e push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf8f push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cf90 call   $0x7330383f %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x7334cf90 MSVCR90.dll:XcptFilter ??:0
	Into 0x7330383f MSVCR90.dll:initptd ??:0
0x7330383f mov    %edi -> %edi 	[1, 1]
0x73303841 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303842 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73303843 call   0x732e1054 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303843 MSVCR90.dll:initptd ??:0
	Into 0x7762cdd0 KERNEL32.dll:GetLastError ??:0
0x73303849 push   0x733771e0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7330384f mov    %eax -> %edi 	[1, 1]
	$$$$ taint reg:17 ---> reg:24  $$$$
0x73303851 call   $0x733036b6 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73303851 MSVCR90.dll:initptd ??:0
	Into 0x733036b6 MSVCR90.dll:_set_flsgetvalue ??:0
0x733036b6 mov    %edi -> %edi 	[1, 1]
	$$$$ taint reg:24 ---> reg:24  $$$$
0x733036b8 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036b9 push   0x733771e4 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733036bf call   0x732e1030 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733036bf MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x7762f750 KERNEL32.dll:TlsGetValue ??:0
0x733036c5 mov    %eax -> %esi 	[1, 1]
	$$$$ taint reg:17 ---> reg:23  $$$$
0x733036c7 test   %esi %esi 	[2, 0]
0x733036c9 jnz    $0x733036e6 	[1, 0]
0x733036e6 mov    %esi -> %eax 	[1, 1]
	$$$$ taint reg:23 ---> reg:17  $$$$
0x733036e8 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733036e9 MSVCR90.dll:_set_flsgetvalue ??:0
	Into 0x73303856 MSVCR90.dll:initptd ??:0
0x73303856 call   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 17 $77636c3f
[CALL @ ] 0x73303856 MSVCR90.dll:initptd ??:0
	Into 0x77636c3f KERNEL32.dll:FlsGetValue ??:0
0x73303858 mov    %eax -> %esi 	[1, 1]
	$$$$ taint reg:17 ---> reg:23  $$$$
0x7330385a test   %esi %esi 	[2, 0]
0x7330385c jnz    $0x733038ac 	[1, 0]
0x733038ac push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733038ad call   0x732e1070 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x733038ad MSVCR90.dll:initptd ??:0
	Into 0x7762c3e0 KERNEL32.dll:SetLastError ??:0
0x733038b3 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x733038b4 mov    %esi -> %eax 	[1, 1]
	$$$$ taint reg:23 ---> reg:17  $$$$
0x733038b6 pop    %esp (%esp) -> %esi %esp 	[2, 2]
[RETURN @ ] 0x733038b7 MSVCR90.dll:initptd ??:0
	Into 0x7334cf95 MSVCR90.dll:XcptFilter ??:0

in dr_basic_block(tag=0x7334cf95) 0 0 esp is 0x0012fa74 instr_count=3
0x7334cf95 mov    %eax -> %esi 	[1, 1]
	$$$$ taint reg:17 ---> reg:23  $$$$
0x7334cf97 test   %esi %esi 	[2, 0]
0x7334cf99 jz     $0x7334d0e5 	[1, 0]

in dr_basic_block(tag=0x7334cf9f) 0 0 esp is 0x0012fa74 instr_count=8
0x7334cf9f mov    0x5c(%esi) -> %edx 	[1, 1]
0x7334cfa2 mov    0x7337a2a4 -> %eax 	[1, 1]
0x7334cfa7 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cfa8 mov    0x08(%ebp) -> %edi 	[1, 1]
0x7334cfab mov    %edx -> %ecx 	[1, 1]
	$$$$ taint reg:19 ---> reg:18  $$$$
0x7334cfad push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334cfae cmp    (%ecx) %edi 	[2, 0]
0x7334cfb0 jz     $0x7334cfc0 	[1, 0]

in dr_basic_block(tag=0x7334cfc0) 0 0 esp is 0x0012fa6c instr_count=4
0x7334cfc0 imul   %eax $0x0000000c -> %eax 	[2, 1]
0x7334cfc3 add    %edx %eax -> %eax 	[2, 1]
	$$$$ taint reg:19 ---> reg:17  $$$$
0x7334cfc5 cmp    %ecx %eax 	[2, 0]
0x7334cfc7 jnb    $0x7334cfd1 	[1, 0]

in dr_basic_block(tag=0x7334cfc9) 0 0 esp is 0x0012fa6c instr_count=2
0x7334cfc9 cmp    (%ecx) %edi 	[2, 0]
0x7334cfcb jnz    $0x7334cfd1 	[1, 0]

in dr_basic_block(tag=0x7334cfcd) 0 0 esp is 0x0012fa6c instr_count=2
0x7334cfcd mov    %ecx -> %eax 	[1, 1]
	$$$$ taint reg:18 ---> reg:17  $$$$
JMP @  0x7334cfcf MSVCR90.dll:XcptFilter ??:0
	Into  0x7334cfd3 MSVCR90.dll:XcptFilter ??:0

in dr_basic_block(tag=0x7334cfd3) 0 0 esp is 0x0012fa6c instr_count=2
0x7334cfd3 test   %eax %eax 	[2, 0]
0x7334cfd5 jz     $0x7334cfe1 	[1, 0]

in dr_basic_block(tag=0x7334cfd7) 0 0 esp is 0x0012fa6c instr_count=4
0x7334cfd7 mov    0x08(%eax) -> %ebx 	[1, 1]
0x7334cfda mov    %ebx -> 0xfffffffc(%ebp) 	[1, 1]
0x7334cfdd test   %ebx %ebx 	[2, 0]
0x7334cfdf jnz    $0x7334cfe8 	[1, 0]

in dr_basic_block(tag=0x7334cfe1) 0 0 esp is 0x0012fa6c instr_count=2
0x7334cfe1 xor    %eax %eax -> %eax 	[2, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
JMP @  0x7334cfe3 MSVCR90.dll:XcptFilter ??:0
	Into  0x7334d0e3 MSVCR90.dll:XcptFilter ??:0

in dr_basic_block(tag=0x7334d0e3) 0 0 esp is 0x0012fa6c instr_count=5
0x7334d0e3 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334d0e4 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334d0e5 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334d0e6 leave  %ebp %esp (%ebp) -> %esp %ebp 	[3, 2]
[RETURN @ ] 0x7334d0e7 MSVCR90.dll:XcptFilter ??:0
	Into 0x0040125e tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:599+0x11

in dr_basic_block(tag=0x0040125e) 0 0 esp is 0x0012fa88 instr_count=3
0x0040125e pop    %esp (%esp) -> %ecx %esp 	[2, 2]
0x0040125f pop    %esp (%esp) -> %ecx %esp 	[2, 2]
[RETURN @ ] 0x00401260 tttt0.exe:__tmainCRTStartup f:\dd\vctools\crt_bld\self_x86\crt\src\crtexe.c:599+0x13
	Into 0x7334f914 MSVCR90.dll:seh_longjmp_unwind4 ??:0

in dr_basic_block(tag=0x7334f914) 0 0 esp is 0x0012fa94 instr_count=5
0x7334f914 pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7334f915 pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334f916 pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334f917 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7334f918 MSVCR90.dll:seh_longjmp_unwind4 ??:0
	Into 0x733518de MSVCR90.dll:except_handler4_common ??:0

in dr_basic_block(tag=0x733518de) 0 0 esp is 0x0012faa8 instr_count=3
0x733518de mov    $0x01 -> 0xffffffff(%ebp) 	[1, 1]
0x733518e2 test   %eax %eax 	[2, 0]
0x733518e4 jl     $0x73351922 	[1, 0]

in dr_basic_block(tag=0x733518e6) 0 0 esp is 0x0012faa8 instr_count=1
0x733518e6 jnle   $0x7335192b 	[1, 0]

in dr_basic_block(tag=0x733518e8) 0 0 esp is 0x0012faa8 instr_count=4
0x733518e8 mov    0xfffffff8(%ebp) -> %eax 	[1, 1]
	$$$$ taint mem:0x0012fac4 ---> reg:17  $$$$
0x733518eb mov    %eax -> %ebx 	[1, 1]
	$$$$ taint reg:17 ---> reg:20  $$$$
0x733518ed cmp    %eax $0xfffffffe 	[2, 0]
0x733518f0 jnz    $0x733518c0 	[1, 0]

in dr_basic_block(tag=0x733518f2) 0 0 esp is 0x0012faa8 instr_count=2
0x733518f2 cmp    0xffffffff(%ebp) $0x00 	[2, 0]
0x733518f6 jz     $0x73351918 	[1, 0]

in dr_basic_block(tag=0x733518f8) 0 0 esp is 0x0012faa8 instr_count=3
0x733518f8 mov    (%esi) -> %eax 	[1, 1]
0x733518fa cmp    %eax $0xfffffffe 	[2, 0]
0x733518fd jz     $0x7335190a 	[1, 0]

in dr_basic_block(tag=0x7335190a) 0 0 esp is 0x0012faa8 instr_count=5
0x7335190a mov    0x0c(%esi) -> %ecx 	[1, 1]
0x7335190d mov    0x08(%esi) -> %edx 	[1, 1]
0x73351910 add    %edi %ecx -> %ecx 	[2, 1]
	$$$$ taint reg:24 ---> reg:18  $$$$
0x73351912 xor    (%edx,%edi,1) %ecx -> %ecx 	[2, 1]
	$$$$ taint mem:0x0012ff58 ---> reg:18  $$$$
0x73351915 call   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
[CALL @ ] 0x73351915 MSVCR90.dll:except_handler4_common ??:0
	Into 0x004010cd tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:52+0x0
0x004010cd cmp    %ecx 0x00403000 	[2, 0]
0x004010d3 jnz    $0x004010d7 	[1, 0]
[RETURN @ ] 0x004010d5 tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:57+0x0
	Into 0x73351918 MSVCR90.dll:except_handler4_common ??:0

in dr_basic_block(tag=0x73351918) 0 0 esp is 0x0012faa8 instr_count=7
0x73351918 mov    0xfffffff4(%ebp) -> %eax 	[1, 1]
0x7335191b pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7335191c pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7335191d pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7335191e mov    %ebp -> %esp 	[1, 1]
	$$$$ taint reg:22 ---> reg:21  $$$$
0x73351920 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73351921 MSVCR90.dll:except_handler4_common ??:0
	Into 0x004017d5 tttt0.exe:_except_handler4 ??:0

in dr_basic_block(tag=0x004017d5) 0 0 esp is 0x0012fad4 instr_count=3
0x004017d5 add    $0x00000018 %esp -> %esp 	[2, 1]
	$$$$ taint reg:21 ---> reg:21  $$$$
0x004017d8 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x004017d9 tttt0.exe:_except_handler4 ??:0
	Into 0x778671f9 ntdll.dll:RtlRaiseStatus ??:0

in dr_basic_block(tag=0x0040148e) 0 0 esp is 0x0012fa24 instr_count=7
0x0040148e mov    %edi -> %edi 	[1, 1]
	$$$$ taint reg:24 ---> reg:24  $$$$
0x00401490 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x00401491 mov    %esp -> %ebp 	[1, 1]
	$$$$ taint reg:21 ---> reg:22  $$$$
0x00401493 mov    0x08(%ebp) -> %eax 	[1, 1]
0x00401496 mov    (%eax) -> %eax 	[1, 1]
0x00401498 cmp    (%eax) $0xe06d7363 	[2, 0]
0x0040149e jnz    $0x004014ca 	[1, 0]

in dr_basic_block(tag=0x004014ca) 0 0 esp is 0x0012fa20 instr_count=3
0x004014ca xor    %eax %eax -> %eax 	[2, 1]
	$$$$ taint reg:17 ---> reg:17  $$$$
0x004014cc pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x004014cd tttt0.exe:__CxxUnhandledExceptionFilter f:\dd\vctools\crt_bld\self_x86\crt\prebuild\eh\unhandld.cpp:73+0x1
	Into 0x77640736 KERNEL32.dll:UnhandledExceptionFilter ??:0
0x004017b5 mov    %edi -> %edi 	[1, 1]
	$$$$ taint reg:24 ---> reg:24  $$$$
0x004017b7 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017b8 mov    %esp -> %ebp 	[1, 1]
	$$$$ taint reg:21 ---> reg:22  $$$$
0x004017ba push   0x14(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017bd push   0x10(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017c0 push   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017c3 push   0x08(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017c6 push   $0x004010cd %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017cb push   $0x00403000 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x004017d0 call   $0x004018bc %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 21 $004018bc
[CALL @ ] 0x004017d0 tttt0.exe:_except_handler4 ??:0
	Into 0x004018bc tttt0.exe:except_handler4_common ??:0
0x004018bc jmp    0x00402078 	[1, 0]
0x73351850 mov    %edi -> %edi 	[1, 1]
	$$$$ taint reg:24 ---> reg:24  $$$$
0x73351852 push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73351853 mov    %esp -> %ebp 	[1, 1]
	$$$$ taint reg:21 ---> reg:22  $$$$
0x73351855 sub    $0x00000018 %esp -> %esp 	[2, 1]
	$$$$ taint reg:21 ---> reg:21  $$$$
0x73351858 mov    0x08(%ebp) -> %eax 	[1, 1]
0x7335185b push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7335185c mov    0x14(%ebp) -> %ebx 	[1, 1]
0x7335185f push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73351860 mov    0x08(%ebx) -> %esi 	[1, 1]
0x73351863 xor    (%eax) %esi -> %esi 	[2, 1]
	$$$$ taint mem:0x00403000 ---> reg:23  $$$$
0x73351865 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x73351866 mov    (%esi) -> %eax 	[1, 1]
0x73351868 mov    $0x00 -> 0xffffffff(%ebp) 	[1, 1]
0x7335186c mov    $0x00000001 -> 0xfffffff4(%ebp) 	[1, 1]
0x73351873 lea    0x10(%ebx) -> %edi 	[1, 1]
0x73351876 cmp    %eax $0xfffffffe 	[2, 0]
0x73351879 jz     $0x73351886 	[1, 0]
0x73351886 mov    0x0c(%esi) -> %ecx 	[1, 1]
0x73351889 mov    0x08(%esi) -> %edx 	[1, 1]
0x7335188c add    %edi %ecx -> %ecx 	[2, 1]
	$$$$ taint reg:24 ---> reg:18  $$$$
0x7335188e xor    (%edx,%edi,1) %ecx -> %ecx 	[2, 1]
	$$$$ taint mem:0x0012ff58 ---> reg:18  $$$$
0x73351891 call   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 21 $004010cd
[CALL @ ] 0x73351891 MSVCR90.dll:except_handler4_common ??:0
	Into 0x004010cd tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:52+0x0
0x004010cd cmp    %ecx 0x00403000 	[2, 0]
0x004010d3 jnz    $0x004010d7 	[1, 0]
[RETURN @ ] 0x004010d5 tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:57+0x0
	Into 0x73351894 MSVCR90.dll:except_handler4_common ??:0
0x73351894 mov    0x10(%ebp) -> %eax 	[1, 1]
0x73351897 test   0x04(%eax) $0x66 	[2, 0]
0x7335189b jnz    $0x733519b3 	[1, 0]

in dr_basic_block(tag=0x733519b3) 0 0 esp is 0x0012f670 instr_count=3
0x733519b3 mov    $0xfffffffe -> %edx 	[1, 1]
0x733519b8 cmp    0x0c(%ebx) %edx 	[2, 0]
0x733519bb jz     $0x73351918 	[1, 0]

in dr_basic_block(tag=0x733519c1) 0 0 esp is 0x0012f670 instr_count=5
0x733519c1 mov    0x08(%ebp) -> %ecx 	[1, 1]
0x733519c4 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733519c5 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x733519c6 mov    %ebx -> %ecx 	[1, 1]
	$$$$ taint reg:20 ---> reg:18  $$$$
0x733519c8 call   $0x7334f94c %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 21 $7334f94c
[CALL @ ] 0x733519c8 MSVCR90.dll:except_handler4_common ??:0
	Into 0x7334f94c MSVCR90.dll:seh_longjmp_unwind4 ??:0

in dr_basic_block(tag=0x7334f94c) 0 0 esp is 0x0012f664 instr_count=6
0x7334f94c push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f94d mov    0x08(%esp) -> %ebp 	[1, 1]
0x7334f951 push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f952 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f953 push   0x14(%esp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f957 call   $0x7334f810 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 21 $7334f810
[CALL @ ] 0x7334f957 MSVCR90.dll:seh_longjmp_unwind4 ??:0
	Into 0x7334f810 MSVCR90.dll:local_unwind4 ??:0

in dr_basic_block(tag=0x7334f810) 0 0 esp is 0x0012f650 instr_count=24
0x7334f810 push   %ebx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f811 push   %esi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f812 push   %edi %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f813 mov    0x10(%esp) -> %edx 	[1, 1]
0x7334f817 mov    0x14(%esp) -> %eax 	[1, 1]
0x7334f81b mov    0x18(%esp) -> %ecx 	[1, 1]
0x7334f81f push   %ebp %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f820 push   %edx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f821 push   %eax %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f822 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f823 push   %ecx %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f824 push   $0x7334f8a0 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f829 push   %fs:0x00 %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
0x7334f830 mov    0x7337a2a8 -> %eax 	[1, 1]
0x7334f835 xor    %esp %eax -> %eax 	[2, 1]
	$$$$ taint reg:21 ---> reg:17  $$$$
0x7334f837 mov    %eax -> 0x08(%esp) 	[1, 1]
	$$$$ taint reg:17 ---> mem:0x0012f630  $$$$
0x7334f83b mov    %esp -> %fs:0x00 	[1, 1]
	$$$$ taint reg:21 ---> mem:0x7ffde000  $$$$
0x7334f842 mov    0x30(%esp) -> %eax 	[1, 1]
0x7334f846 mov    0x08(%eax) -> %ebx 	[1, 1]
0x7334f849 mov    0x2c(%esp) -> %ecx 	[1, 1]
0x7334f84d xor    (%ecx) %ebx -> %ebx 	[2, 1]
	$$$$ taint mem:0x00403000 ---> reg:20  $$$$
0x7334f84f mov    0x0c(%eax) -> %esi 	[1, 1]
0x7334f852 cmp    %esi $0xfffffffe 	[2, 0]
0x7334f855 jz     $0x7334f892 	[1, 0]

in dr_basic_block(tag=0x7334f857) 0 0 esp is 0x0012f628 instr_count=3
0x7334f857 mov    0x34(%esp) -> %edx 	[1, 1]
0x7334f85b cmp    %edx $0xfffffffe 	[2, 0]
0x7334f85e jz     $0x7334f864 	[1, 0]

in dr_basic_block(tag=0x7334f864) 0 0 esp is 0x0012f628 instr_count=6
0x7334f864 lea    (%esi,%esi,2) -> %esi 	[1, 1]
0x7334f867 lea    0x10(%ebx,%esi,4) -> %ebx 	[1, 1]
0x7334f86b mov    (%ebx) -> %ecx 	[1, 1]
0x7334f86d mov    %ecx -> 0x0c(%eax) 	[1, 1]
	$$$$ taint reg:18 ---> mem:0x0012ff84  $$$$
0x7334f870 cmp    0x04(%ebx) $0x00000000 	[2, 0]
0x7334f874 jnz    $0x7334f842 	[1, 0]

in dr_basic_block(tag=0x7334f842) 0 0 esp is 0x0012f628 instr_count=7
0x7334f842 mov    0x30(%esp) -> %eax 	[1, 1]
0x7334f846 mov    0x08(%eax) -> %ebx 	[1, 1]
0x7334f849 mov    0x2c(%esp) -> %ecx 	[1, 1]
0x7334f84d xor    (%ecx) %ebx -> %ebx 	[2, 1]
	$$$$ taint mem:0x00403000 ---> reg:20  $$$$
0x7334f84f mov    0x0c(%eax) -> %esi 	[1, 1]
	$$$$ taint mem:0x0012ff84 ---> reg:23  $$$$
0x7334f852 cmp    %esi $0xfffffffe 	[2, 0]
0x7334f855 jz     $0x7334f892 	[1, 0]

in dr_basic_block(tag=0x7334f892) 0 0 esp is 0x0012f628 instr_count=6
0x7334f892 pop    %esp (%esp) -> %fs:0x00 %esp 	[2, 2]
0x7334f899 add    $0x00000018 %esp -> %esp 	[2, 1]
	$$$$ taint reg:21 ---> reg:21  $$$$
0x7334f89c pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7334f89d pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7334f89e pop    %esp (%esp) -> %ebx %esp 	[2, 2]
[RETURN @ ] 0x7334f89f MSVCR90.dll:local_unwind4 ??:0
	Into 0x7334f95c MSVCR90.dll:seh_longjmp_unwind4 ??:0

in dr_basic_block(tag=0x7334f95c) 0 0 esp is 0x0012f654 instr_count=3
0x7334f95c add    $0x0000000c %esp -> %esp 	[2, 1]
	$$$$ taint reg:21 ---> reg:21  $$$$
0x7334f95f pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x7334f960 MSVCR90.dll:seh_longjmp_unwind4 ??:0
	Into 0x733519cd MSVCR90.dll:except_handler4_common ??:0

in dr_basic_block(tag=0x733519cd) 0 0 esp is 0x0012f670 instr_count=1
JMP @  0x733519cd MSVCR90.dll:except_handler4_common ??:0
	Into  0x733518f8 MSVCR90.dll:except_handler4_common ??:0
0x733518f8 mov    (%esi) -> %eax 	[1, 1]
0x733518fa cmp    %eax $0xfffffffe 	[2, 0]
0x733518fd jz     $0x7335190a 	[1, 0]
0x7335190a mov    0x0c(%esi) -> %ecx 	[1, 1]
0x7335190d mov    0x08(%esi) -> %edx 	[1, 1]
0x73351910 add    %edi %ecx -> %ecx 	[2, 1]
	$$$$ taint reg:24 ---> reg:18  $$$$
0x73351912 xor    (%edx,%edi,1) %ecx -> %ecx 	[2, 1]
	$$$$ taint mem:0x0012ff58 ---> reg:18  $$$$
0x73351915 call   0x0c(%ebp) %esp -> %esp 0xfffffffc(%esp) 	[2, 2]
Calling tainted reg 21 $004010cd
[CALL @ ] 0x73351915 MSVCR90.dll:except_handler4_common ??:0
	Into 0x004010cd tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:52+0x0
0x004010cd cmp    %ecx 0x00403000 	[2, 0]
0x004010d3 jnz    $0x004010d7 	[1, 0]
[RETURN @ ] 0x004010d5 tttt0.exe:__security_check_cookie f:\dd\vctools\crt_bld\self_x86\crt\src\intel\secchk.c:57+0x0
	Into 0x73351918 MSVCR90.dll:except_handler4_common ??:0
0x73351918 mov    0xfffffff4(%ebp) -> %eax 	[1, 1]
0x7335191b pop    %esp (%esp) -> %edi %esp 	[2, 2]
0x7335191c pop    %esp (%esp) -> %esi %esp 	[2, 2]
0x7335191d pop    %esp (%esp) -> %ebx %esp 	[2, 2]
0x7335191e mov    %ebp -> %esp 	[1, 1]
	$$$$ taint reg:22 ---> reg:21  $$$$
0x73351920 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x73351921 MSVCR90.dll:except_handler4_common ??:0
	Into 0x004017d5 tttt0.exe:_except_handler4 ??:0
0x004017d5 add    $0x00000018 %esp -> %esp 	[2, 1]
	$$$$ taint reg:21 ---> reg:21  $$$$
0x004017d8 pop    %esp (%esp) -> %ebp %esp 	[2, 2]
[RETURN @ ] 0x004017d9 tttt0.exe:_except_handler4 ??:0
	Into 0x778671f9 ntdll.dll:RtlRaiseStatus ??:0
0x0012f630-0x0012f630
0x0012fab4-0x0012fab4
0x0012fab8-0x0012fab8
0x0012fabc-0x0012fabc
0x0012fac4-0x0012fac4
0x0012fc77-0x0012fc77
0x0012fee0-0x0012ff57
0x0012ff68-0x0012ff68
0x0012ff74-0x0012ff74
0x0012ff84-0x0012ff84
0x00506fe9-0x00506feb
0x7337c660-0x7337c665
0x7ffde000-0x7ffde000
